{"version":3,"file":"main-drp1o6fZ.js","sources":["../../src/js/core/resources/resourceManager.js","../../src/js/core/graphics/particleSystem.js","../../src/js/config/constants.js","../../src/js/core/audio/audioConfig.js","../../src/js/core/audio/soundManager.js","../../src/js/core/engine/renderer.js","../../src/js/core/engine/gameLoop.js","../../src/js/game/managers/hudManager.js","../../src/js/game/managers/checkpointManager.js","../../src/js/game/managers/flamethrowerManager.js","../../src/js/game/managers/centerPieceManager.js","../../src/js/game/managers/multiTouchManager.js","../../src/js/game/managers/glassShatterManager.js","../../src/js/game/managers/progressManager.js","../../src/js/game/levels/baseLevel.js","../../src/js/config/gameSettings.js","../../src/js/game/levels/colorsLevel.js","../../src/js/game/levels/shapesLevel.js","../../src/js/game/levels/alphabetLevel.js","../../src/js/game/levels/numbersLevel.js","../../src/js/game/levels/clCaseLevel.js","../../src/js/game/levels/phonics/PhonicsConfig.js","../../src/js/game/levels/phonics/BubbleSystem.js","../../src/js/game/levels/phonics/PhonicsLevel.js","../../src/js/ui/components/levelMenu.js","../../src/js/inputHandler.js","../../src/js/config/displayModes.js","../../src/js/ui/components/welcomeScreen.js","../../src/js/utils/errorTracker.js","../../src/js/core/main.js"],"sourcesContent":["export default class ResourceManager {\n  constructor() {\n    this.fonts = {};\n    this.images = {};\n    this.audio = {};\n    this.allowedDomains = ['localhost', '127.0.0.1', window.location.hostname];\n    this.allowedExtensions = {\n      fonts: ['.ttf', '.otf', '.woff', '.woff2'],\n      images: ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'],\n      audio: ['.mp3', '.wav', '.ogg', '.m4a']\n    };\n  }\n\n  /**\n   * Validates and sanitizes URLs to prevent loading malicious content\n   * @param {string} url - The URL to validate\n   * @param {string} type - The resource type (fonts, images, audio)\n   * @returns {boolean} - True if URL is valid and safe\n   */\n  validateUrl(url, type) {\n    try {\n      // Check if URL is relative (safe)\n      if (url.startsWith('./') || url.startsWith('../') || url.startsWith('/')) {\n        return this.validateFileExtension(url, type);\n      }\n\n      // Parse absolute URLs\n      const urlObj = new URL(url);\n      \n      // Check protocol (only allow http/https)\n      if (!['http:', 'https:'].includes(urlObj.protocol)) {\n        console.warn(`Invalid protocol in URL: ${url}`);\n        return false;\n      }\n\n      // Check domain whitelist\n      if (!this.allowedDomains.includes(urlObj.hostname)) {\n        console.warn(`Domain not allowed: ${urlObj.hostname}`);\n        return false;\n      }\n\n      // Check file extension\n      return this.validateFileExtension(url, type);\n    } catch (error) {\n      console.error(`Invalid URL: ${url}`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Validates file extension for a given resource type\n   * @param {string} url - The URL to check\n   * @param {string} type - The resource type\n   * @returns {boolean} - True if extension is allowed\n   */\n  validateFileExtension(url, type) {\n    const allowedExts = this.allowedExtensions[type];\n    if (!allowedExts) return false;\n    \n    const lowerUrl = url.toLowerCase();\n    return allowedExts.some(ext => lowerUrl.endsWith(ext));\n  }\n\n  async loadFont(name, url) {\n    if (!this.validateUrl(url, 'fonts')) {\n      throw new Error(`Invalid or unsafe font URL: ${url}`);\n    }\n\n    try {\n      const font = new FontFace(name, `url(${url})`);\n      await font.load();\n      document.fonts.add(font);\n      this.fonts[name] = font;\n      return font;\n    } catch (error) {\n      console.error(`Failed to load font ${name} from ${url}:`, error);\n      throw error;\n    }\n  }\n\n  async loadImage(name, url) {\n    if (!this.validateUrl(url, 'images')) {\n      throw new Error(`Invalid or unsafe image URL: ${url}`);\n    }\n\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => { \n        this.images[name] = img; \n        resolve(img); \n      };\n      img.onerror = (error) => {\n        console.error(`Failed to load image ${name} from ${url}:`, error);\n        reject(error);\n      };\n      img.src = url;\n    });\n  }\n\n  async loadAudio(name, url) {\n    if (!this.validateUrl(url, 'audio')) {\n      throw new Error(`Invalid or unsafe audio URL: ${url}`);\n    }\n\n    return new Promise((resolve, reject) => {\n      const audio = new Audio();\n      audio.oncanplaythrough = () => { \n        this.audio[name] = audio; \n        resolve(audio); \n      };\n      audio.onerror = (error) => {\n        console.error(`Failed to load audio ${name} from ${url}:`, error);\n        reject(error);\n      };\n      audio.src = url;\n    });\n  }\n\n  async initializeGameResources() {\n    // Try to load resources, but don't fail if they're not available\n    try {\n      await this.loadFont('TitleFont', 'assets/fonts/title.ttf');\n    } catch (e) {\n      console.warn('Could not load title font, using fallback');\n    }\n    \n    try {\n      await this.loadFont('SubtitleFont', 'assets/fonts/subtitle.ttf');\n    } catch (e) {\n      console.warn('Could not load subtitle font, using fallback');\n    }\n    \n    try {\n      await this.loadFont('BodyFont', 'assets/fonts/body.ttf');\n    } catch (e) {\n      console.warn('Could not load body font, using fallback');\n    }\n    \n    try {\n      await this.loadImage('placeholder', 'assets/images/placeholder.svg');\n    } catch (e) {\n      console.warn('Could not load placeholder image');\n    }\n    // Deactivate external audio asset loading to avoid missing file errors\n    // try {\n    //   await this.loadAudio('laser', 'assets/sounds/laser.mp3');\n    // } catch (e) {\n    //   console.warn('Could not load laser sound');\n    // }\n    // try {\n    //   await this.loadAudio('completion', 'assets/sounds/completion.mp3');\n    // } catch (e) {\n    //   console.warn('Could not load completion sound');\n    // }\n    // try {\n    //   await this.loadAudio('ambient_space', 'assets/sounds/ambient_space.mp3');\n    // } catch (e) {\n    //   console.warn('Could not load ambient space sound');\n    // }\n    \n    return { fonts: this.fonts, images: this.images, audio: this.audio };\n  }\n\n  setDisplayMode(mode) {\n    localStorage.setItem('displayMode', mode);\n  }\n\n  getDisplayMode() {\n    return localStorage.getItem('displayMode') || 'DEFAULT';\n  }\n\n  // Test method to verify resource loading functionality\n  testResourceLoading() {\n    console.log('Testing resource loading...');\n    console.log('Loaded fonts:', Object.keys(this.fonts));\n    console.log('Loaded images:', Object.keys(this.images));\n    console.log('Loaded audio:', Object.keys(this.audio));\n    \n    // Test if placeholder image is loaded and accessible\n    if (this.images.placeholder) {\n      console.log('✓ Placeholder image loaded successfully');\n      console.log('  - Width:', this.images.placeholder.width || 'Not loaded yet');\n      console.log('  - Height:', this.images.placeholder.height || 'Not loaded yet');\n    } else {\n      console.log('✗ Placeholder image not loaded');\n    }\n    \n    return {\n      fontsCount: Object.keys(this.fonts).length,\n      imagesCount: Object.keys(this.images).length,\n      audioCount: Object.keys(this.audio).length\n    };\n  }\n}\n","/**\n * Enhanced Particle System with Object Pooling and Performance Optimization\n * Prioritizes smooth 60fps performance while providing rich visual effects\n */\nexport default class ParticleManager {\n  constructor(maxParticles = 500) {\n    this.maxParticles = maxParticles;\n    this.particles = [];\n    this.lastUpdateTime = performance.now();\n\n    this.particlePool = [];\n    this.activeParticles = 0;\n    \n    // Performance optimization\n    this.lastCleanupTime = 0;\n    this.cleanupInterval = 100; // Cleanup every 100ms\n    this.renderBatch = [];\n    this.colorCache = new Map();\n    \n    // Visual effects\n    this.globalEffects = {\n      wind: { x: 0, y: 0 },\n      gravity: 0.1,\n      turbulence: 0\n    };\n    \n    // Performance monitoring\n    this.performanceMode = 'high'; // high, medium, low\n    this.frameTimeHistory = [];\n    this.avgFrameTime = 16; // Target 60fps\n    \n    // Initialize particle pool\n    this.initializePool();\n  }\n\n  initializePool() {\n    // Pre-allocate particles for performance\n    for (let i = 0; i < this.maxParticles; i++) {\n      this.particlePool.push(this.createParticleObject());\n    }\n  }\n\n  createParticleObject() {\n    return {\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0,\n      size: 1,\n      color: '#ffffff',\n      opacity: 1,\n      life: 1,\n      maxLife: 1000,\n      age: 0,\n      rotation: 0,\n      rotationSpeed: 0,\n      scale: 1,\n      scaleVelocity: 0,\n      active: false,\n      type: 'circle',\n      trail: false,\n      trailPositions: [],\n      physics: {\n        gravity: true,\n        bounce: false,\n        friction: 0.99\n      }\n    };\n  }\n\n  setPerformanceMode(mode) {\n    this.performanceMode = mode;\n    \n    // Adjust settings based on performance\n    switch (mode) {\n      case 'low':\n        this.maxParticles = Math.min(100, this.maxParticles);\n        this.cleanupInterval = 200;\n        break;\n      case 'medium':\n        this.maxParticles = Math.min(250, this.maxParticles);\n        this.cleanupInterval = 150;\n        break;\n      case 'high':\n        // Use defaults\n        break;\n    }\n  }\n\n  createParticle(x, y, color, size, dx, dy, duration, options = {}) {\n    if (this.activeParticles >= this.maxParticles) {\n      // Remove oldest particle to make room\n      this.removeOldestParticle();\n      if (this.activeParticles >= this.maxParticles) {\n        // Still at capacity, don't create new particle\n        return null;\n      }\n    }\n    \n    // Get particle from pool\n    let particle = this.particlePool.find(p => !p.active);\n    if (!particle) {\n      particle = this.createParticleObject();\n      this.particlePool.push(particle);\n    }\n    \n    // Configure particle\n    particle.x = x;\n    particle.y = y;\n    particle.vx = dx;\n    particle.vy = dy;\n    particle.size = size;\n    particle.color = color;\n    particle.opacity = options.opacity || 1;\n    particle.life = 1;\n    particle.maxLife = duration;\n    particle.age = 0;\n    particle.rotation = options.rotation || 0;\n    particle.rotationSpeed = options.rotationSpeed || 0;\n    particle.scale = options.scale || 1;\n    particle.scaleVelocity = options.scaleVelocity || 0;\n    particle.active = true;\n    particle.type = options.type || 'circle';\n    particle.trail = options.trail || false;\n    particle.trailPositions = [];\n    \n    // Physics options\n    particle.physics.gravity = options.gravity !== undefined ? options.gravity : true;\n    particle.physics.bounce = options.bounce || false;\n    particle.physics.friction = options.friction || 0.99;\n    \n    // Only add to particles array if not already there\n    if (!this.particles.includes(particle)) {\n      this.particles.push(particle);\n    }\n    this.activeParticles++;\n    \n    return particle;\n  }\n\n  // Enhanced particle creation methods\n  createExplosion(x, y, color, intensity = 1, count = 20) {\n    for (let i = 0; i < count * intensity; i++) {\n      const angle = (Math.PI * 2 * i) / (count * intensity);\n      const speed = 2 + Math.random() * 4 * intensity;\n      const size = 1 + Math.random() * 3 * intensity;\n      const duration = 500 + Math.random() * 1000;\n      \n      this.createParticle(\n        x, y, color, size,\n        Math.cos(angle) * speed,\n        Math.sin(angle) * speed,\n        duration,\n        {\n          scaleVelocity: -0.01,\n          rotationSpeed: (Math.random() - 0.5) * 0.2,\n          gravity: true\n        }\n      );\n    }\n  }\n\n  createTrail(x, y, color, size, dx, dy, duration) {\n    this.createParticle(x, y, color, size, dx, dy, duration, {\n      trail: true,\n      gravity: false,\n      friction: 0.95,\n      scaleVelocity: -0.005\n    });\n  }\n\n  createSparkle(x, y, color, intensity = 1) {\n    const count = 5 + Math.floor(Math.random() * 10 * intensity);\n    for (let i = 0; i < count; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = 0.5 + Math.random() * 2 * intensity;\n      const size = 1 + Math.random() * 2;\n      const duration = 800 + Math.random() * 600;\n      \n      this.createParticle(\n        x + (Math.random() - 0.5) * 20,\n        y + (Math.random() - 0.5) * 20,\n        color, size,\n        Math.cos(angle) * speed,\n        Math.sin(angle) * speed,\n        duration,\n        {\n          type: 'star',\n          rotationSpeed: (Math.random() - 0.5) * 0.3,\n          scaleVelocity: -0.003,\n          gravity: false\n        }\n      );\n    }\n  }\n\n  createBubbleParticles(x, y, count = 10) {\n    for (let i = 0; i < count; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = 0.5 + Math.random() * 1.5;\n      const size = 2 + Math.random() * 4;\n      const duration = 1000 + Math.random() * 2000;\n      \n      this.createParticle(\n        x, y,\n        `hsla(${200 + Math.random() * 60}, 70%, 80%, 0.7)`,\n        size,\n        Math.cos(angle) * speed,\n        Math.sin(angle) * speed - 1, // Float upward\n        duration,\n        {\n          type: 'bubble',\n          gravity: false,\n          friction: 0.98,\n          scaleVelocity: 0.001 // Grow slightly\n        }\n      );\n    }\n  }\n\n  removeOldestParticle() {\n    let oldestIndex = -1;\n    let oldestAge = 0;\n    \n    for (let i = 0; i < this.particles.length; i++) {\n      if (this.particles[i].active && this.particles[i].age > oldestAge) {\n        oldestAge = this.particles[i].age;\n        oldestIndex = i;\n      }\n    }\n    \n    if (oldestIndex >= 0) {\n      this.deactivateParticle(this.particles[oldestIndex]);\n    }\n  }\n\n  deactivateParticle(particle) {\n    particle.active = false;\n    particle.trailPositions = [];\n    this.activeParticles--;\n  }\n\n  updateAndDraw(ctx, deltaTime) {\n    const now = performance.now();\n    const actualDeltaTime = deltaTime !== undefined ? deltaTime : 16; // Default to 16ms\n    \n    // Update particles\n    this.updateParticles(actualDeltaTime);\n    \n    // Clean up inactive particles periodically\n    if (now - this.lastCleanupTime > this.cleanupInterval) {\n      this.cleanupInactiveParticles();\n      this.lastCleanupTime = now;\n    }\n    \n    // Draw particles\n    this.drawParticles(ctx);\n    \n    // Performance monitoring\n    this.monitorPerformance(now);\n  }\n\n  updateParticles(deltaTime) {\n    const dt = deltaTime / 16; // Normalize to 60fps\n    \n    for (let i = 0; i < this.particles.length; i++) {\n      const particle = this.particles[i];\n      if (!particle.active) continue;\n      \n      // Update age and life\n      particle.age += deltaTime;\n      particle.life = 1 - (particle.age / particle.maxLife);\n      \n      // Remove expired particles\n      if (particle.life <= 0) {\n        this.deactivateParticle(particle);\n        continue;\n      }\n      \n      // Update trail positions\n      if (particle.trail) {\n        particle.trailPositions.push({ x: particle.x, y: particle.y });\n        if (particle.trailPositions.length > 10) {\n          particle.trailPositions.shift();\n        }\n      }\n      \n      // Apply physics\n      this.updateParticlePhysics(particle, dt);\n      \n      // Update visual properties\n      this.updateParticleVisuals(particle, dt);\n    }\n  }\n\n  updateParticlePhysics(particle, dt) {\n    // Apply global effects\n    particle.vx += this.globalEffects.wind.x * dt;\n    particle.vy += this.globalEffects.wind.y * dt;\n    \n    if (particle.physics.gravity) {\n      particle.vy += this.globalEffects.gravity * dt;\n    }\n    \n    // Apply turbulence\n    if (this.globalEffects.turbulence > 0) {\n      particle.vx += (Math.random() - 0.5) * this.globalEffects.turbulence * dt;\n      particle.vy += (Math.random() - 0.5) * this.globalEffects.turbulence * dt;\n    }\n    \n    // Apply friction\n    particle.vx *= particle.physics.friction;\n    particle.vy *= particle.physics.friction;\n    \n    // Update position\n    particle.x += particle.vx * dt;\n    particle.y += particle.vy * dt;\n    \n    // Boundary handling\n    if (particle.physics.bounce) {\n      // Simple boundary bouncing (can be enhanced)\n      if (particle.x < 0 || particle.x > 800) { // Assuming canvas width\n        particle.vx *= -0.5;\n      }\n      if (particle.y > 600) { // Assuming canvas height\n        particle.vy *= -0.5;\n        particle.y = 600;\n      }\n    }\n  }\n\n  updateParticleVisuals(particle, dt) {\n    // Update rotation\n    particle.rotation += particle.rotationSpeed * dt;\n    \n    // Update scale\n    particle.scale += particle.scaleVelocity * dt;\n    particle.scale = Math.max(0.1, particle.scale);\n    \n    // Update opacity based on life\n    particle.opacity = particle.life;\n  }\n\n  drawParticles(ctx) {\n    // Group particles by type for batch rendering\n    const batches = {\n      circle: [],\n      star: [],\n      bubble: [],\n      trail: []\n    };\n    \n    // Sort particles into batches\n    for (let i = 0; i < this.particles.length; i++) {\n      const particle = this.particles[i];\n      if (!particle.active) continue;\n      \n      if (batches[particle.type]) {\n        batches[particle.type].push(particle);\n      } else {\n        batches.circle.push(particle);\n      }\n    }\n    \n    // Draw each batch\n    ctx.save();\n    \n    // Draw trails first (behind other particles)\n    this.drawTrailParticles(ctx, batches.trail);\n    \n    // Draw main particles\n    this.drawCircleParticles(ctx, batches.circle);\n    this.drawStarParticles(ctx, batches.star);\n    this.drawBubbleParticles(ctx, batches.bubble);\n    \n    ctx.restore();\n  }\n\n  drawCircleParticles(ctx, particles) {\n    particles.forEach(particle => {\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.translate(particle.x, particle.y);\n      ctx.scale(particle.scale, particle.scale);\n      ctx.rotate(particle.rotation);\n      \n      ctx.fillStyle = particle.color;\n      ctx.beginPath();\n      ctx.arc(0, 0, particle.size, 0, Math.PI * 2);\n      ctx.fill();\n      \n      ctx.restore();\n    });\n  }\n\n  drawStarParticles(ctx, particles) {\n    particles.forEach(particle => {\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.translate(particle.x, particle.y);\n      ctx.scale(particle.scale, particle.scale);\n      ctx.rotate(particle.rotation);\n      \n      // Draw star shape\n      ctx.fillStyle = particle.color;\n      ctx.beginPath();\n      for (let i = 0; i < 5; i++) {\n        const angle = (i * Math.PI * 2) / 5;\n        const x = Math.cos(angle) * particle.size;\n        const y = Math.sin(angle) * particle.size;\n        if (i === 0) ctx.moveTo(x, y);\n        else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.fill();\n      \n      ctx.restore();\n    });\n  }\n\n  drawBubbleParticles(ctx, particles) {\n    particles.forEach(particle => {\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.translate(particle.x, particle.y);\n      ctx.scale(particle.scale, particle.scale);\n      \n      // Draw bubble with highlight\n      const gradient = ctx.createRadialGradient(\n        -particle.size * 0.3, -particle.size * 0.3, 0,\n        0, 0, particle.size\n      );\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 0.8)');\n      gradient.addColorStop(0.7, particle.color);\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.2)');\n      \n      ctx.fillStyle = gradient;\n      ctx.beginPath();\n      ctx.arc(0, 0, particle.size, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Add bubble highlight\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.beginPath();\n      ctx.arc(-particle.size * 0.3, -particle.size * 0.3, particle.size * 0.3, 0, Math.PI * 2);\n      ctx.fill();\n      \n      ctx.restore();\n    });\n  }\n\n  drawTrailParticles(ctx, particles) {\n    particles.forEach(particle => {\n      if (particle.trailPositions.length < 2) return;\n      \n      ctx.save();\n      ctx.globalAlpha = particle.opacity * 0.5;\n      ctx.strokeStyle = particle.color;\n      ctx.lineWidth = particle.size;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      \n      ctx.beginPath();\n      ctx.moveTo(particle.trailPositions[0].x, particle.trailPositions[0].y);\n      \n      for (let i = 1; i < particle.trailPositions.length; i++) {\n        ctx.lineTo(particle.trailPositions[i].x, particle.trailPositions[i].y);\n      }\n      \n      ctx.stroke();\n      ctx.restore();\n      \n      // Draw current particle\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.fillStyle = particle.color;\n      ctx.beginPath();\n      ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n    });\n  }\n\n  cleanupInactiveParticles() {\n    this.particles = this.particles.filter(particle => particle.active);\n  }\n\n  monitorPerformance(now) {\n    const frameTime = now - (this.lastFrameTime || now);\n    this.frameTimeHistory.push(frameTime);\n    \n    // Prevent memory leak by limiting history size\n    if (this.frameTimeHistory.length > 120) {\n      this.frameTimeHistory.splice(0, this.frameTimeHistory.length - 60);\n    }\n    \n    if (this.frameTimeHistory.length > 60) {\n      // Calculate average frame time\n      const sum = this.frameTimeHistory.reduce((a, b) => a + b, 0);\n      this.avgFrameTime = sum / this.frameTimeHistory.length;\n      \n      // Adjust performance if needed\n      if (this.avgFrameTime > 20 && this.performanceMode === 'high') { // Below 50fps\n        this.setPerformanceMode('medium');\n        console.log('🐌 Reduced to medium performance mode');\n      } else if (this.avgFrameTime > 25 && this.performanceMode === 'medium') { // Below 40fps\n        this.setPerformanceMode('low');\n        console.log('🐌 Reduced to low performance mode');\n      } else if (this.avgFrameTime < 17 && this.performanceMode !== 'high') { // Above 58fps\n        this.setPerformanceMode('high');\n        console.log('🚀 Increased to high performance mode');\n      }\n    }\n    \n    this.lastFrameTime = now;\n  }\n\n  // Global effects control\n  setWind(x, y) {\n    this.globalEffects.wind.x = x;\n    this.globalEffects.wind.y = y;\n  }\n\n  setGravity(gravity) {\n    this.globalEffects.gravity = gravity;\n  }\n\n  setTurbulence(turbulence) {\n    this.globalEffects.turbulence = turbulence;\n  }\n\n  // Utility methods\n  clear() {\n    this.particles.forEach(particle => this.deactivateParticle(particle));\n    this.activeParticles = 0;\n  }\n\n  getActiveParticleCount() {\n    return this.activeParticles;\n  }\n\n  getPerformanceInfo() {\n    return {\n      activeParticles: this.activeParticles,\n      maxParticles: this.maxParticles,\n      avgFrameTime: this.avgFrameTime,\n      performanceMode: this.performanceMode,\n      fps: Math.round(1000 / this.avgFrameTime)\n    };\n  }\n\n  /**\n   * Properly destroys the particle system and cleans up all resources to prevent memory leaks\n   */\n  destroy() {\n    // Clear all active particles\n    this.clear();\n    \n    // Clean up arrays and objects\n    this.particles = [];\n    this.particlePool = [];\n    this.frameTimeHistory = [];\n    this.renderBatch = [];\n    \n    // Clear cache\n    this.colorCache.clear();\n    \n    // Reset counters\n    this.activeParticles = 0;\n    this.lastUpdateTime = 0;\n    this.lastCleanupTime = 0;\n    this.lastFrameTime = 0;\n    this.avgFrameTime = 16;\n    \n    // Reset effects\n    this.globalEffects = {\n      wind: { x: 0, y: 0 },\n      gravity: 0.1,\n      turbulence: 0\n    };\n    \n    console.log('🗑️ ParticleManager destroyed and cleaned up');\n  }\n}\n","export const GAME_CONFIG = Object.freeze({\n    // Display modes\n    DISPLAY_MODES: Object.freeze(['DEFAULT', 'QBOARD']),\n    DEFAULT_MODE: 'DEFAULT',\n\n    // Font sizes by display mode\n    FONT_SIZES: Object.freeze({\n        DEFAULT: Object.freeze({ regular: 24, large: 48 }),\n        QBOARD: Object.freeze({ regular: 30, large: 60 })\n    }),\n\n    // Performance settings by display mode\n    MAX_PARTICLES: Object.freeze({ DEFAULT: 100, QBOARD: 150 }),\n    MAX_EXPLOSIONS: Object.freeze({ DEFAULT: 5, QBOARD: 8 }),\n    MAX_SWIRL_PARTICLES: Object.freeze({ DEFAULT: 30, QBOARD: 15 }),\n    MOTHER_RADIUS: Object.freeze({ DEFAULT: 90, QBOARD: 120 }),\n\n    // Colors\n    COLORS: Object.freeze({\n        WHITE: Object.freeze([255, 255, 255]),\n        BLACK: Object.freeze([0, 0, 0]),\n        FLAME_COLORS: Object.freeze([\n            Object.freeze([255, 69, 0]),   // Red-orange\n            Object.freeze([255, 215, 0]),  // Gold\n            Object.freeze([0, 191, 255])   // Bright blue\n        ]),\n        COLORS_LIST: Object.freeze([\n            Object.freeze([0, 0, 255]),    // Blue\n            Object.freeze([255, 0, 0]),    // Red\n            Object.freeze([0, 200, 0]),    // Green\n            Object.freeze([255, 255, 0]),  // Yellow\n            Object.freeze([128, 0, 255])   // Purple\n        ])\n    }),\n\n    // Game sequences\n    SEQUENCES: Object.freeze({\n        alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(''),\n        numbers: Object.freeze(['1','2','3','4','5','6','7','8','9','10']),\n        clcase: 'abcdefghijklmnopqrstuvwxyz'.split(''),\n        shapes: Object.freeze(['Circle','Square','Triangle','Rectangle','Pentagon']),\n        colors: Object.freeze(['Blue','Red','Green','Yellow','Purple'])\n    }),\n\n    // Timing and gameplay\n    LETTER_SPAWN_INTERVAL: 60,  // frames\n    GROUP_SIZE: 5,\n    COLORS_COLLISION_DELAY: 250,  // milliseconds\n    TOUCH_COOLDOWN: 50,  // milliseconds\n\n    // Physics and movement\n    DOT_RADIUS: 48,\n    DOT_SPEED_RANGE: Object.freeze([3, 6]),\n    EXPLOSION_EXPANSION_RATE: 0.1,\n    SCREEN_SHAKE_DURATION: 10,\n\n    // Performance optimizations\n    SPATIAL_GRID_SIZE: 120,\n    COLLISION_CHECK_FREQUENCY: Object.freeze({ DEFAULT: 1, QBOARD: 2 }),\n    CULLING_DISTANCE_MULTIPLIER: 1.0,\n\n    // Level-specific configurations for colors and text levels\n    COLORS_LEVEL_CONFIG: Object.freeze({\n        TOTAL_DOTS: 85,\n        TARGET_DOTS: 17,\n        DISTRACTOR_DOTS: 68,\n        DISPERSION_FRAMES: 30,\n        DOT_BOUNCE_DAMPENING: 0.98,\n        SHIMMER_FREQUENCY: 0.05,\n        GLOW_FREQUENCY: 0.1,\n        MEMORY_DISPLAY_TIME: 2000,\n        COLLISION_ENABLED_DELAY: 250,\n        GRID_OPTIMIZATION: true\n    }),\n\n    TEXT_LEVEL_CONFIG: Object.freeze({\n        CENTER_FONT_SIZE: 900,\n        FALLING_FONT_SIZE: 240,\n        SPAWN_EDGE_BUFFER: 50,\n        TARGET_ADVANCE_COUNT: 5,\n        CHECKPOINT_INTERVAL: 5,\n        ABILITIES: Object.freeze(['laser', 'aoe', 'charge_up']),\n        AOE_RADIUS: 200,\n        CHARGE_UP_DURATION: 60,\n        LASER_WIDTH: Object.freeze([3, 5]),\n        SWIRL_PARTICLE_COUNT: 30,\n        CENTER_PIECE_ORBIT_RADIUS: 100\n    }),\n\n    // Audio configuration\n    AUDIO_CONFIG: Object.freeze({\n        MASTER_VOLUME: 0.7,\n        SFX_VOLUME: 0.8,\n        MUSIC_VOLUME: 0.3,\n        SOUNDS: Object.freeze({\n            laser: Object.freeze({ file: 'laser.mp3', volume: 0.6 }),\n            completion: Object.freeze({ file: 'completion.mp3', volume: 1.0 })\n        }),\n        AMBIENT: Object.freeze({\n            space: Object.freeze({ file: 'ambient_space.mp3', volume: 0.2, loop: true })\n        }),\n        WEB_AUDIO_CONTEXT: true,\n        BUFFER_PRELOAD: true\n    })\n});\n","import { GAME_CONFIG } from '../../config/constants.js';\n\n/**\n * Returns audio configuration settings.\n */\nexport function getAudioConfig() {\n  return {\n    masterVolume: GAME_CONFIG.AUDIO_CONFIG?.MASTER_VOLUME ?? 0.7,\n    sfxVolume: GAME_CONFIG.AUDIO_CONFIG?.SFX_VOLUME ?? 0.8,\n    musicVolume: GAME_CONFIG.AUDIO_CONFIG?.MUSIC_VOLUME ?? 0.3,\n    sounds: GAME_CONFIG.AUDIO_CONFIG?.SOUNDS ?? {},\n    ambient: GAME_CONFIG.AUDIO_CONFIG?.AMBIENT ?? {},\n    webAudioContext: GAME_CONFIG.AUDIO_CONFIG?.WEB_AUDIO_CONTEXT ?? true,\n    bufferPreload: GAME_CONFIG.AUDIO_CONFIG?.BUFFER_PRELOAD ?? true\n  };\n}\n","import { getAudioConfig } from './audioConfig.js';\n\nexport default class SoundManager {\n  constructor() {\n    const audioConfig = getAudioConfig();\n    \n    // Initialize audio context with proper error handling\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    } catch (error) {\n      console.error('Failed to create AudioContext:', error);\n      this.audioContext = null; // Gracefully handle missing WebAudio support\n    }\n\n    if (this.audioContext) {\n      // Master gain\n      this.masterGain = this.audioContext.createGain();\n      this.masterGain.gain.value = audioConfig.masterVolume;\n      this.masterGain.connect(this.audioContext.destination);\n\n      // Category gains\n      this.gains = {\n        sfx: this.audioContext.createGain(),\n        music: this.audioContext.createGain(),\n        ambient: this.audioContext.createGain(),\n        phonics: this.audioContext.createGain() // Added for phonics sounds\n      };\n\n      this.gains.sfx.gain.value = audioConfig.sfxVolume;\n      this.gains.music.gain.value = audioConfig.musicVolume;\n      this.gains.ambient.gain.value = audioConfig.musicVolume;\n      this.gains.phonics.gain.value = audioConfig.sfxVolume;\n\n      // Connect all gains to master\n      Object.values(this.gains).forEach(gain => gain.connect(this.masterGain));\n    } else {\n      // Fallback stubs so the rest of the app can continue to run without audio\n      const stubGain = { gain: { value: audioConfig.masterVolume } };\n      this.masterGain = stubGain;\n      this.gains = { sfx: stubGain, music: stubGain, ambient: stubGain, phonics: stubGain };\n    }\n    \n    // Buffers storage\n    this.buffers = {}; // { name: { buffer, type } }\n    this.activeSources = {};\n    this.sounds = {}; // For ResourceManager compatibility\n\n    // Enhanced features\n    this.phonicsCache = new Map(); // Cache for phonics sounds\n    this.soundQueue = []; // Queue for sequenced sounds\n    this.isProcessingQueue = false;\n    \n    // Performance optimization\n    this.maxConcurrentSounds = 8;\n    this.activeSoundsCount = 0;\n    this.activeSoundsList = new Set(); // Track active sources for cleanup\n    \n    // Initialize default sounds only if the AudioContext was created successfully\n    if (this.audioContext) {\n      this.initializeDefaultSounds();\n    }\n  }\n\n  initializeDefaultSounds() {\n    // Create synthetic sounds for immediate gameplay\n    this.createSyntheticSounds();\n  }\n\n  createSyntheticSounds() {\n    // Create basic synthetic sounds for immediate use\n    const sampleRate = this.audioContext.sampleRate;\n    \n    // Pop sound for bubbles\n    const popBuffer = this.audioContext.createBuffer(1, sampleRate * 0.1, sampleRate);\n    const popData = popBuffer.getChannelData(0);\n    for (let i = 0; i < popData.length; i++) {\n      const t = i / sampleRate;\n      popData[i] = Math.sin(2 * Math.PI * 800 * t) * Math.exp(-t * 20) * 0.3;\n    }\n    this.buffers['pop'] = { buffer: popBuffer, type: 'sfx' };\n    \n    // Success sound\n    const successBuffer = this.audioContext.createBuffer(1, sampleRate * 0.3, sampleRate);\n    const successData = successBuffer.getChannelData(0);\n    for (let i = 0; i < successData.length; i++) {\n      const t = i / sampleRate;\n      const envelope = Math.exp(-t * 3);\n      successData[i] = (\n        Math.sin(2 * Math.PI * 440 * t) * 0.3 +\n        Math.sin(2 * Math.PI * 554 * t) * 0.2 +\n        Math.sin(2 * Math.PI * 659 * t) * 0.1\n      ) * envelope;\n    }\n    this.buffers['success'] = { buffer: successBuffer, type: 'sfx' };\n    \n    // Wrong sound\n    const wrongBuffer = this.audioContext.createBuffer(1, sampleRate * 0.2, sampleRate);\n    const wrongData = wrongBuffer.getChannelData(0);\n    for (let i = 0; i < wrongData.length; i++) {\n      const t = i / sampleRate;\n      wrongData[i] = Math.sin(2 * Math.PI * 150 * t) * Math.exp(-t * 10) * 0.4;\n    }\n    this.buffers['wrong'] = { buffer: wrongBuffer, type: 'sfx' };\n    \n    // Explosion sound\n    const explosionBuffer = this.audioContext.createBuffer(1, sampleRate * 0.4, sampleRate);\n    const explosionData = explosionBuffer.getChannelData(0);\n    for (let i = 0; i < explosionData.length; i++) {\n      const t = i / sampleRate;\n      const noise = (Math.random() - 0.5) * 2;\n      const envelope = Math.exp(-t * 5);\n      explosionData[i] = noise * envelope * 0.3;\n    }\n    this.buffers['explosion'] = { buffer: explosionBuffer, type: 'sfx' };\n  }\n\n  async loadSound(name, url, type = 'sfx') {\n    try {\n      const response = await fetch(url);\n      const arrayBuffer = await response.arrayBuffer();\n      const buffer = await this.audioContext.decodeAudioData(arrayBuffer);\n      this.buffers[name] = { buffer, type };\n      this.sounds[name] = buffer; // For ResourceManager compatibility\n      return buffer;\n    } catch (error) {\n      console.warn(`Failed to load sound ${name}:`, error);\n      return null;\n    }\n  }\n\n  playSound(name, volume = 1.0, pitch = 1.0) {\n    // Check if audio context is available\n    if (!this.audioContext) {\n      console.warn('AudioContext not available, cannot play sound');\n      return null;\n    }\n    \n    // Resume audio context if suspended\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume().catch(err => {\n        console.warn('Failed to resume audio context:', err);\n      });\n    }\n    \n    if (this.activeSoundsCount >= this.maxConcurrentSounds) {\n      return null; // Skip if too many sounds playing\n    }\n    \n    const entry = this.buffers[name];\n    if (!entry) {\n      console.warn(`Sound ${name} not found`);\n      return null;\n    }\n    \n    const source = this.audioContext.createBufferSource();\n    source.buffer = entry.buffer;\n    \n    // Add volume control\n    const gainNode = this.audioContext.createGain();\n    gainNode.gain.value = Math.max(0, Math.min(1, volume)); // Clamp volume\n    source.connect(gainNode);\n    gainNode.connect(this.gains[entry.type] || this.gains.sfx);\n    \n    // Add pitch control with bounds checking\n    source.playbackRate.value = Math.max(0.1, Math.min(4.0, pitch));\n    \n    // Track this source for cleanup\n    this.activeSoundsList.add(source);\n    \n    source.onended = () => {\n      this.activeSoundsCount--;\n      this.activeSoundsList.delete(source);\n    };\n    \n    try {\n      source.start(0);\n      this.activeSoundsCount++;\n    } catch (error) {\n      console.warn('Failed to start audio source:', error);\n      this.activeSoundsList.delete(source);\n      return null;\n    }\n    \n    return source;\n  }\n\n  playPhonicsSound(letter, volume = 1.0) {\n    // Play phonetic sound for a letter\n    const soundName = `phonics_${letter.toLowerCase()}`;\n    \n    // Check cache first\n    if (this.phonicsCache.has(soundName)) {\n      return this.playSound(soundName, volume);\n    }\n    \n    // Generate synthetic phonics sound if not available\n    return this.generateSyntheticPhonicsSound(letter, volume);\n  }\n\n  generateSyntheticPhonicsSound(letter, volume = 1.0) {\n    // Bail out if audio is not available\n    if (!this.audioContext) {\n      return null;\n    }\n\n    // Create a simple synthetic phonics sound\n    const sampleRate = this.audioContext.sampleRate;\n    const duration = 0.5;\n    const buffer = this.audioContext.createBuffer(1, sampleRate * duration, sampleRate);\n    const data = buffer.getChannelData(0);\n    \n    // Basic phonics mapping to frequencies\n    const phonicsMap = {\n      'a': [800, 1200], 'b': [100, 200], 'c': [200, 300], 'd': [150, 250],\n      'e': [500, 700], 'f': [300, 400], 'g': [120, 220], 'h': [100, 150],\n      'i': [300, 500], 'j': [200, 400], 'k': [250, 350], 'l': [400, 600],\n      'm': [150, 300], 'n': [200, 400], 'o': [400, 600], 'p': [100, 200],\n      'q': [250, 450], 'r': [300, 500], 's': [500, 800], 't': [400, 600],\n      'u': [300, 500], 'v': [200, 400], 'w': [250, 450], 'x': [300, 600],\n      'y': [400, 700], 'z': [400, 800]\n    };\n    \n    const freqs = phonicsMap[letter.toLowerCase()] || [400, 600];\n    \n    for (let i = 0; i < data.length; i++) {\n      const t = i / sampleRate;\n      const envelope = Math.exp(-t * 2) * (1 - Math.exp(-t * 10));\n      data[i] = (\n        Math.sin(2 * Math.PI * freqs[0] * t) * 0.3 +\n        Math.sin(2 * Math.PI * freqs[1] * t) * 0.2\n      ) * envelope * volume;\n    }\n    \n    // Cache the generated sound\n    const soundName = `phonics_${letter.toLowerCase()}`;\n    this.buffers[soundName] = { buffer, type: 'phonics' };\n    this.phonicsCache.set(soundName, buffer);\n    \n    return this.playSound(soundName, volume);\n  }\n\n  playMusic(name, loop = true, volume = 1.0) {\n    const entry = this.buffers[name];\n    if (!entry) return null;\n    \n    if (this.activeSources[name]) {\n      this.activeSources[name].stop();\n    }\n    \n    const source = this.audioContext.createBufferSource();\n    source.buffer = entry.buffer;\n    source.loop = loop;\n    \n    const gainNode = this.audioContext.createGain();\n    gainNode.gain.value = volume;\n    source.connect(gainNode);\n    gainNode.connect(this.gains.music);\n    \n    source.start(0);\n    this.activeSources[name] = source;\n    \n    return source;\n  }\n\n  playAmbient(name, loop = true, volume = 1.0) {\n    const entry = this.buffers[name];\n    if (!entry) return null;\n    \n    if (this.activeSources[name]) {\n      this.activeSources[name].stop();\n    }\n    \n    const source = this.audioContext.createBufferSource();\n    source.buffer = entry.buffer;\n    source.loop = loop;\n    \n    const gainNode = this.audioContext.createGain();\n    gainNode.gain.value = volume;\n    source.connect(gainNode);\n    gainNode.connect(this.gains.ambient);\n    \n    source.start(0);\n    this.activeSources[name] = source;\n    \n    return source;\n  }\n\n  // Enhanced sound effects for game interactions\n  playExplosion(intensity = 1.0) {\n    return this.playSound('explosion', intensity, 0.8 + Math.random() * 0.4);\n  }\n\n  playPop(intensity = 1.0) {\n    return this.playSound('pop', intensity, 0.9 + Math.random() * 0.2);\n  }\n\n  playSuccess() {\n    return this.playSound('success', 1.0);\n  }\n\n  playWrong() {\n    return this.playSound('wrong', 1.0);\n  }\n\n  // Sound sequencing for educational feedback\n  playSequence(sounds, delay = 200) {\n    this.soundQueue.push({ sounds, delay });\n    if (!this.isProcessingQueue) {\n      this.processQueue().catch(error => {\n        console.warn('Error processing sound queue:', error);\n        this.isProcessingQueue = false;\n      });\n    }\n  }\n\n  async processQueue() {\n    // Double-check to prevent race conditions\n    if (this.isProcessingQueue) {\n      return;\n    }\n    \n    this.isProcessingQueue = true;\n    \n    try {\n      while (this.soundQueue.length > 0) {\n        const { sounds, delay } = this.soundQueue.shift();\n        \n        for (let i = 0; i < sounds.length; i++) {\n          const sound = sounds[i];\n          \n          try {\n            if (typeof sound === 'string') {\n              this.playSound(sound);\n            } else if (sound.type === 'phonics') {\n              this.playPhonicsSound(sound.letter, sound.volume || 1.0);\n            } else if (sound.type === 'sound') {\n              this.playSound(sound.name, sound.volume || 1.0, sound.pitch || 1.0);\n            }\n          } catch (error) {\n            console.warn('Error playing sound in sequence:', error);\n          }\n          \n          if (i < sounds.length - 1) {\n            await new Promise(resolve => setTimeout(resolve, delay));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error in sound queue processing:', error);\n    } finally {\n      this.isProcessingQueue = false;\n    }\n  }\n\n  stop(name) {\n    const source = this.activeSources[name];\n    if (source) {\n      source.stop();\n      delete this.activeSources[name];\n    }\n  }\n\n  stopAll() {\n    // Stop all named sources\n    Object.values(this.activeSources).forEach(source => {\n      if (source && typeof source.stop === 'function') {\n        try {\n          source.stop();\n        } catch (error) {\n          console.warn('Error stopping audio source:', error);\n        }\n      }\n    });\n    this.activeSources = {};\n    \n    // Stop all tracked active sounds\n    this.activeSoundsList.forEach(source => {\n      if (source && typeof source.stop === 'function') {\n        try {\n          source.stop();\n        } catch (error) {\n          console.warn('Error stopping active sound:', error);\n        }\n      }\n    });\n    this.activeSoundsList.clear();\n    \n    // Reset counter\n    this.activeSoundsCount = 0;\n  }\n\n  setMasterVolume(value) {\n    // Clamp value between 0 and 1\n    const clampedValue = Math.max(0, Math.min(1, value));\n    this.masterGain.gain.value = clampedValue;\n  }\n\n  setGlobalVolume(value) {\n    this.setMasterVolume(value);\n  }\n\n  setCategoryVolume(category, value) {\n    if (this.gains[category]) {\n      this.gains[category].gain.value = value;\n    }\n  }\n\n  // BEGIN LEGACY COMPATIBILITY HELPERS ---------------------------------\n  /**\n   * Getter/Setter pair for direct volume access (0-1). Allows existing\n   * code that references soundManager.volume to continue to work while\n   * ensuring the masterGain node stays in sync.\n   */\n  get volume() {\n    return this.masterGain.gain.value;\n  }\n\n  set volume(value) {\n    this.setMasterVolume(value);\n  }\n  // END LEGACY COMPATIBILITY HELPERS -----------------------------------\n\n  // Ensure AudioContext is running after user interaction\n  async resumeContext() {\n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n    }\n  }\n\n  /**\n   * Fade a category gain to a target volume over a duration (ms)\n   * @param {string} category - 'sfx'|'music'|'ambient'|'phonics'\n   * @param {number} target - target gain value\n   * @param {number} duration - fade duration in milliseconds\n   */\n  fadeCategoryVolume(category, target, duration = 500) {\n    const gainNode = this.gains[category] || this.masterGain;\n    const now = this.audioContext.currentTime;\n    gainNode.gain.cancelScheduledValues(now);\n    gainNode.gain.setValueAtTime(gainNode.gain.value, now);\n    gainNode.gain.linearRampToValueAtTime(target, now + duration / 1000);\n  }\n\n  /**\n   * Mute all sounds (instant)\n   */\n  mute() {\n    this.setMasterVolume(0);\n  }\n\n  /**\n   * Unmute all sounds (restore to config master volume)\n   */\n  unmute() {\n    const { masterVolume } = getAudioConfig();\n    this.setMasterVolume(masterVolume);\n  }\n\n  /**\n   * Toggle mute state\n   */\n  toggleMute() {\n    if (this.masterGain.gain.value > 0) {\n      this.mute();\n    } else {\n      this.unmute();\n    }\n  }\n\n  /**\n   * Create dynamic sound effect\n   */\n  createDynamicSound(frequency, duration, type = 'sine', volume = 0.3) {\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    \n    oscillator.type = type;\n    oscillator.frequency.value = frequency;\n    \n    gainNode.gain.value = volume;\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(this.gains.sfx);\n    \n    oscillator.start();\n    oscillator.stop(this.audioContext.currentTime + duration);\n    \n    return oscillator;\n  }\n\n  /**\n   * Get audio context for advanced audio processing\n   */\n  getAudioContext() {\n    return this.audioContext;\n  }\n\n  /**\n   * Check if sound is available\n   */\n  hasSounds() {\n    return Object.keys(this.buffers).length > 0;\n  }\n\n  /**\n   * Get available sounds list\n   */\n  getAvailableSounds() {\n    return Object.keys(this.buffers);\n  }\n}\n","export class Renderer {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.setupCanvas();\n  }\n\n  setupCanvas() {\n    // Adjust canvas size and scale for high-DPI displays\n    const rect = this.canvas.getBoundingClientRect();\n    const width = rect.width || this.canvas.offsetWidth || 800; // Fallback to 800px\n    const height = rect.height || this.canvas.offsetHeight || 600; // Fallback to 600px\n    \n    // Ensure minimum dimensions to prevent division by zero\n    const minWidth = Math.max(width, 1);\n    const minHeight = Math.max(height, 1);\n    \n    const devicePixelRatio = window.devicePixelRatio || 1;\n    \n    // Set canvas internal dimensions\n    this.canvas.width = minWidth * devicePixelRatio;\n    this.canvas.height = minHeight * devicePixelRatio;\n    \n    // Set canvas CSS dimensions\n    this.canvas.style.width = minWidth + 'px';\n    this.canvas.style.height = minHeight + 'px';\n    \n    // Reset any existing transforms to avoid cumulative scaling when \"setupCanvas\" is\n    // invoked multiple times (e.g., on window resize). Without this, each call would\n    // multiply the previous scale, causing the game to appear increasingly zoomed.\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    // Scale the context to match device pixel ratio\n    this.ctx.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Add additional rendering helpers here\n}\n","// gameLoop.js: centralize main game loop control and timing\nexport class GameLoop {\n  constructor(updateFn, renderFn) {\n    this.updateFn = updateFn;\n    this.renderFn = renderFn;\n    this.lastTime = 0;\n    this.running = false;\n  }\n\n  start() {\n    this.running = true;\n    this.lastTime = performance.now();\n    this._loop();\n  }\n\n  stop() {\n    this.running = false;\n  }\n\n  _loop() {\n    if (!this.running) return;\n    const now = performance.now();\n    const deltaTime = now - this.lastTime;\n    this.lastTime = now;\n    this.lastDeltaTime = deltaTime; // Store for use by particle system\n    this.updateFn(deltaTime);\n    this.renderFn();\n    requestAnimationFrame(() => this._loop());\n  }\n}\n","export default class HudManager {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.score = 0;\n    this.level = 1;\n    this.lives = 3;\n    this.abilities = {\n      flamethrower: { cooldown: 0, maxCooldown: 5000 },\n      explosion: { cooldown: 0, maxCooldown: 3000 }\n    };\n    this.fontSize = Math.min(canvas.width, canvas.height) * 0.03;\n  }\n\n  updateScore(points) {\n    this.score += points;\n  }\n\n  updateLevel(newLevel) {\n    this.level = newLevel;\n  }\n\n  updateLives(newLives) {\n    this.lives = newLives;\n  }\n\n  updateAbilityCooldown(abilityName, cooldown) {\n    if (this.abilities[abilityName]) {\n      this.abilities[abilityName].cooldown = Math.max(0, cooldown);\n    }\n  }\n\n  isAbilityReady(abilityName) {\n    return this.abilities[abilityName]?.cooldown === 0;\n  }\n\n  draw() {\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.font = `${this.fontSize}px Arial`;\n    this.ctx.textAlign = 'left';\n\n    // Score\n    this.ctx.fillText(`Score: ${this.score}`, 20, 40);\n    \n    // Level\n    this.ctx.fillText(`Level: ${this.level}`, 20, 80);\n    \n    // Lives\n    this.ctx.fillText(`Lives: ${this.lives}`, 20, 120);\n\n    // Ability cooldowns\n    let yOffset = 160;\n    Object.entries(this.abilities).forEach(([name, ability]) => {\n      const cooldownPercent = ability.cooldown / ability.maxCooldown;\n      const color = cooldownPercent > 0 ? '#FF6B6B' : '#4ECDC4';\n      \n      this.ctx.fillStyle = color;\n      this.ctx.fillText(`${name}: ${cooldownPercent > 0 ? (ability.cooldown / 1000).toFixed(1) + 's' : 'Ready'}`, 20, yOffset);\n      yOffset += 40;\n    });\n\n    this.ctx.restore();\n  }\n\n  update(deltaTime) {\n    // Update ability cooldowns\n    Object.values(this.abilities).forEach(ability => {\n      if (ability.cooldown > 0) {\n        ability.cooldown = Math.max(0, ability.cooldown - deltaTime);\n      }\n    });\n  }\n\n  resize(canvas) {\n    this.canvas = canvas;\n    this.fontSize = Math.min(canvas.width, canvas.height) * 0.03;\n  }\n}\n","export default class CheckpointManager {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.isActive = false;\n    this.currentMessage = '';\n    this.fadeAlpha = 0;\n    this.fadeDirection = 1;\n    this.displayTime = 0;\n    this.maxDisplayTime = 3000; // 3 seconds\n  }\n\n  showCheckpoint(message) {\n    this.isActive = true;\n    this.currentMessage = message;\n    this.fadeAlpha = 0;\n    this.fadeDirection = 1;\n    this.displayTime = 0;\n  }\n\n  update(deltaTime) {\n    if (!this.isActive) return;\n\n    this.displayTime += deltaTime;\n\n    // Fade in/out animation\n    if (this.fadeDirection === 1) {\n      this.fadeAlpha += deltaTime * 0.003; // Fade in speed\n      if (this.fadeAlpha >= 1) {\n        this.fadeAlpha = 1;\n        this.fadeDirection = 0; // Hold\n      }\n    } else if (this.fadeDirection === 0) {\n      // Hold for a moment\n      if (this.displayTime > this.maxDisplayTime * 0.7) {\n        this.fadeDirection = -1; // Start fade out\n      }\n    } else if (this.fadeDirection === -1) {\n      this.fadeAlpha -= deltaTime * 0.003; // Fade out speed\n      if (this.fadeAlpha <= 0) {\n        this.fadeAlpha = 0;\n        this.isActive = false;\n      }\n    }\n  }\n\n  draw() {\n    if (!this.isActive || this.fadeAlpha === 0) return;\n\n    this.ctx.save();\n    \n    // Semi-transparent overlay\n    this.ctx.fillStyle = `rgba(0, 0, 0, ${0.5 * this.fadeAlpha})`;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Checkpoint message\n    const fontSize = Math.min(this.canvas.width, this.canvas.height) * 0.08;\n    this.ctx.font = `${fontSize}px Arial`;\n    this.ctx.fillStyle = `rgba(255, 255, 255, ${this.fadeAlpha})`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    \n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    \n    // Add glow effect\n    this.ctx.shadowColor = '#4ECDC4';\n    this.ctx.shadowBlur = 20 * this.fadeAlpha;\n    \n    this.ctx.fillText(this.currentMessage, centerX, centerY);\n\n    // Subtitle\n    const subtitleFontSize = fontSize * 0.4;\n    this.ctx.font = `${subtitleFontSize}px Arial`;\n    this.ctx.shadowBlur = 10 * this.fadeAlpha;\n    this.ctx.fillText('Checkpoint Reached!', centerX, centerY + fontSize);\n\n    this.ctx.restore();\n  }\n\n  isDisplaying() {\n    return this.isActive;\n  }\n\n  skipCheckpoint() {\n    this.isActive = false;\n    this.fadeAlpha = 0;\n  }\n}\n","export default class FlamethrowerManager {\n  constructor(canvas, ctx, particleManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    this.activeFlames = [];\n    this.maxFlames = 10;\n  }\n\n  createFlamethrower(startX, startY, endX, endY, color = '#FF6B6B', duration = 1000) {\n    if (this.activeFlames.length >= this.maxFlames) return;\n\n    const flame = {\n      startX,\n      startY,\n      endX,\n      endY,\n      color,\n      duration,\n      age: 0,\n      intensity: 1,\n      particles: []\n    };\n\n    this.activeFlames.push(flame);\n    this.generateFlameParticles(flame);\n  }\n\n  generateFlameParticles(flame) {\n    const distance = Math.sqrt(\n      Math.pow(flame.endX - flame.startX, 2) + \n      Math.pow(flame.endY - flame.startY, 2)\n    );\n    \n    const particleCount = Math.min(Math.floor(distance / 10), 50);\n    \n    for (let i = 0; i < particleCount; i++) {\n      const progress = i / particleCount;\n      const x = flame.startX + (flame.endX - flame.startX) * progress;\n      const y = flame.startY + (flame.endY - flame.startY) * progress;\n      \n      // Add some randomness\n      const offsetX = (Math.random() - 0.5) * 20;\n      const offsetY = (Math.random() - 0.5) * 20;\n      \n      // Particle velocity\n      const dx = (Math.random() - 0.5) * 2;\n      const dy = (Math.random() - 0.5) * 2;\n      \n      // Color variations\n      const colors = ['#FF6B6B', '#FF8E53', '#FF6B35', '#FFD93D'];\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      \n      this.particleManager.createParticle(\n        x + offsetX,\n        y + offsetY,\n        color,\n        Math.random() * 4 + 2, // size\n        dx,\n        dy,\n        500 + Math.random() * 500 // duration\n      );\n    }\n  }\n\n  update(deltaTime) {\n    this.activeFlames = this.activeFlames.filter(flame => {\n      flame.age += deltaTime;\n      flame.intensity = Math.max(0, 1 - (flame.age / flame.duration));\n      \n      // Generate more particles during the flame's lifetime\n      if (flame.intensity > 0.3 && Math.random() < 0.1) {\n        this.generateFlameParticles(flame);\n      }\n      \n      return flame.age < flame.duration;\n    });\n  }\n\n  draw() {\n    this.ctx.save();\n    \n    this.activeFlames.forEach(flame => {\n      if (flame.intensity <= 0) return;\n      \n      // Draw laser beam\n      this.ctx.globalAlpha = flame.intensity * 0.8;\n      this.ctx.strokeStyle = flame.color;\n      this.ctx.lineWidth = 4 * flame.intensity;\n      this.ctx.shadowColor = flame.color;\n      this.ctx.shadowBlur = 10 * flame.intensity;\n      \n      this.ctx.beginPath();\n      this.ctx.moveTo(flame.startX, flame.startY);\n      this.ctx.lineTo(flame.endX, flame.endY);\n      this.ctx.stroke();\n      \n      // Draw core beam\n      this.ctx.globalAlpha = flame.intensity;\n      this.ctx.strokeStyle = '#FFFFFF';\n      this.ctx.lineWidth = 2 * flame.intensity;\n      this.ctx.shadowBlur = 5 * flame.intensity;\n      \n      this.ctx.beginPath();\n      this.ctx.moveTo(flame.startX, flame.startY);\n      this.ctx.lineTo(flame.endX, flame.endY);\n      this.ctx.stroke();\n    });\n    \n    this.ctx.restore();\n  }\n\n  checkCollision(targetX, targetY, targetRadius) {\n    return this.activeFlames.some(flame => {\n      if (flame.intensity <= 0) return false;\n      \n      // Check if target intersects with flame line\n      const A = flame.endY - flame.startY;\n      const B = flame.startX - flame.endX;\n      const C = flame.endX * flame.startY - flame.startX * flame.endY;\n      \n      const distance = Math.abs(A * targetX + B * targetY + C) / Math.sqrt(A * A + B * B);\n      \n      return distance <= targetRadius;\n    });\n  }\n\n  clear() {\n    this.activeFlames = [];\n  }\n}\n","export default class CenterPieceManager {\n  constructor(canvas, ctx, particleManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    this.centerX = canvas.width / 2;\n    this.centerY = canvas.height / 2;\n    this.radius = Math.max(10, Math.min(canvas.width, canvas.height) * 0.1);\n    this.rotation = 0;\n    this.pulsePhase = 0;\n    this.swirlParticles = [];\n    this.lastParticleTime = 0;\n  }\n\n  update(deltaTime) {\n    this.rotation += deltaTime * 0.002;\n    this.pulsePhase += deltaTime * 0.003;\n    \n    // Generate swirl particles\n    this.lastParticleTime += deltaTime;\n    if (this.lastParticleTime > 100) { // Every 100ms\n      this.generateSwirlParticle();\n      this.lastParticleTime = 0;\n    }\n    \n    // Update swirl particles\n    this.swirlParticles = this.swirlParticles.filter(particle => {\n      particle.angle += particle.speed;\n      particle.radius += particle.radiusSpeed;\n      particle.life -= deltaTime;\n      \n      particle.x = this.centerX + Math.cos(particle.angle) * particle.radius;\n      particle.y = this.centerY + Math.sin(particle.angle) * particle.radius;\n      \n      return particle.life > 0 && particle.radius < this.canvas.width;\n    });\n  }\n\n  generateSwirlParticle() {\n    const particle = {\n      angle: Math.random() * Math.PI * 2,\n      radius: this.radius,\n      radiusSpeed: 0.5 + Math.random() * 1,\n      speed: 0.02 + Math.random() * 0.03,\n      x: this.centerX,\n      y: this.centerY,\n      color: this.getRandomColor(),\n      size: 2 + Math.random() * 3,\n      life: 3000 + Math.random() * 2000\n    };\n    \n    this.swirlParticles.push(particle);\n  }\n\n  getRandomColor() {\n    const colors = ['#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57', '#FF6B6B'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  draw() {\n    this.ctx.save();\n    \n    // Draw center piece\n    let pulseSize = this.radius + Math.sin(this.pulsePhase) * 10;\n    if (pulseSize < 2) pulseSize = 2;\n    \n    // Outer glow\n    this.ctx.shadowColor = '#4ECDC4';\n    this.ctx.shadowBlur = 20;\n    this.ctx.fillStyle = 'rgba(78, 205, 196, 0.3)';\n    this.ctx.beginPath();\n    this.ctx.arc(this.centerX, this.centerY, pulseSize * 1.5, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Main center piece\n    this.ctx.shadowBlur = 10;\n    this.ctx.fillStyle = '#4ECDC4';\n    this.ctx.beginPath();\n    this.ctx.arc(this.centerX, this.centerY, pulseSize, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Inner core\n    this.ctx.shadowBlur = 5;\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.beginPath();\n    this.ctx.arc(this.centerX, this.centerY, pulseSize * 0.6, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Rotating spokes\n    this.ctx.strokeStyle = '#FFFFFF';\n    this.ctx.lineWidth = 2;\n    this.ctx.shadowBlur = 8;\n    \n    for (let i = 0; i < 8; i++) {\n      const angle = this.rotation + (i * Math.PI / 4);\n      const startRadius = pulseSize * 0.7;\n      const endRadius = pulseSize * 1.2;\n      \n      const startX = this.centerX + Math.cos(angle) * startRadius;\n      const startY = this.centerY + Math.sin(angle) * startRadius;\n      const endX = this.centerX + Math.cos(angle) * endRadius;\n      const endY = this.centerY + Math.sin(angle) * endRadius;\n      \n      this.ctx.beginPath();\n      this.ctx.moveTo(startX, startY);\n      this.ctx.lineTo(endX, endY);\n      this.ctx.stroke();\n    }\n    \n    // Draw swirl particles\n    this.swirlParticles.forEach(particle => {\n      const alpha = particle.life / 3000;\n      this.ctx.globalAlpha = alpha;\n      this.ctx.fillStyle = particle.color;\n      this.ctx.shadowBlur = 5;\n      this.ctx.shadowColor = particle.color;\n      \n      this.ctx.beginPath();\n      this.ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n      this.ctx.fill();\n    });\n    \n    this.ctx.restore();\n  }\n\n  checkCollision(x, y, radius) {\n    const distance = Math.sqrt(\n      Math.pow(x - this.centerX, 2) + \n      Math.pow(y - this.centerY, 2)\n    );\n    return distance < (this.radius + radius);\n  }\n\n  resize(canvas) {\n    this.canvas = canvas;\n    this.centerX = canvas.width / 2;\n    this.centerY = canvas.height / 2;\n    this.radius = Math.max(10, Math.min(canvas.width, canvas.height) * 0.1);\n  }\n\n  reset() {\n    this.swirlParticles = [];\n    this.rotation = 0;\n    this.pulsePhase = 0;\n  }\n}\n","export default class MultiTouchManager {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.pointers = new Map();\n    this.callbacks = {\n      pointerdown: [],\n      pointermove: [],\n      pointerup: []\n    };\n    \n    // Bind event handlers once so the same references can be removed later\n    this._onPointerDown = this.handlePointerDown.bind(this);\n    this._onPointerMove = this.handlePointerMove.bind(this);\n    this._onPointerUp = this.handlePointerUp.bind(this);\n\n    // Prevent-default handler reused across attach/remove\n    this._preventDefault = (e) => e.preventDefault();\n\n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n    this.canvas.addEventListener('pointerdown', this._onPointerDown);\n    this.canvas.addEventListener('pointermove', this._onPointerMove);\n    this.canvas.addEventListener('pointerup', this._onPointerUp);\n    this.canvas.addEventListener('pointercancel', this._onPointerUp);\n\n    // Prevent default touch behaviors (stored handler so it can be removed later)\n    this.canvas.addEventListener('touchstart', this._preventDefault);\n    this.canvas.addEventListener('touchmove', this._preventDefault);\n    this.canvas.addEventListener('touchend', this._preventDefault);\n  }\n\n  handlePointerDown(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const pointer = {\n      id: e.pointerId,\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n      startX: e.clientX - rect.left,\n      startY: e.clientY - rect.top,\n      type: e.pointerType,\n      pressure: e.pressure || 1,\n      startTime: performance.now()\n    };\n    \n    this.pointers.set(e.pointerId, pointer);\n    this.triggerCallbacks('pointerdown', pointer, e);\n  }\n\n  handlePointerMove(e) {\n    if (!this.pointers.has(e.pointerId)) return;\n    \n    const rect = this.canvas.getBoundingClientRect();\n    const pointer = this.pointers.get(e.pointerId);\n    \n    pointer.x = e.clientX - rect.left;\n    pointer.y = e.clientY - rect.top;\n    pointer.pressure = e.pressure || 1;\n    \n    this.triggerCallbacks('pointermove', pointer, e);\n  }\n\n  handlePointerUp(e) {\n    if (!this.pointers.has(e.pointerId)) return;\n    \n    const pointer = this.pointers.get(e.pointerId);\n    pointer.endTime = performance.now();\n    \n    this.triggerCallbacks('pointerup', pointer, e);\n    this.pointers.delete(e.pointerId);\n  }\n\n  triggerCallbacks(eventType, pointer, originalEvent) {\n    this.callbacks[eventType].forEach(callback => {\n      try {\n        callback(pointer, originalEvent);\n      } catch (error) {\n        console.error(`Error in ${eventType} callback:`, error);\n      }\n    });\n  }\n\n  addEventListener(eventType, callback) {\n    if (this.callbacks[eventType]) {\n      this.callbacks[eventType].push(callback);\n    }\n  }\n\n  removeEventListener(eventType, callback) {\n    if (this.callbacks[eventType]) {\n      const index = this.callbacks[eventType].indexOf(callback);\n      if (index > -1) {\n        this.callbacks[eventType].splice(index, 1);\n      }\n    }\n  }\n\n  getActivePointers() {\n    return Array.from(this.pointers.values());\n  }\n\n  getPointerCount() {\n    return this.pointers.size;\n  }\n\n  getPointer(id) {\n    return this.pointers.get(id);\n  }\n\n  isMultiTouch() {\n    return this.pointers.size > 1;\n  }\n\n  getPinchDistance() {\n    const pointers = this.getActivePointers();\n    if (pointers.length < 2) return null;\n    \n    const [p1, p2] = pointers;\n    return Math.sqrt(\n      Math.pow(p2.x - p1.x, 2) + \n      Math.pow(p2.y - p1.y, 2)\n    );\n  }\n\n  getPinchCenter() {\n    const pointers = this.getActivePointers();\n    if (pointers.length < 2) return null;\n    \n    const [p1, p2] = pointers;\n    return {\n      x: (p1.x + p2.x) / 2,\n      y: (p1.y + p2.y) / 2\n    };\n  }\n\n  clear() {\n    this.pointers.clear();\n  }\n\n  destroy() {\n    this.canvas.removeEventListener('pointerdown', this._onPointerDown);\n    this.canvas.removeEventListener('pointermove', this._onPointerMove);\n    this.canvas.removeEventListener('pointerup', this._onPointerUp);\n    this.canvas.removeEventListener('pointercancel', this._onPointerUp);\n    this.canvas.removeEventListener('touchstart', this._preventDefault);\n    this.canvas.removeEventListener('touchmove', this._preventDefault);\n    this.canvas.removeEventListener('touchend', this._preventDefault);\n    this.clear();\n  }\n}\n","export default class GlassShatterManager {\n  constructor(canvas, ctx, particleManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    \n    // State management\n    this.isShattered = false;\n    this.shatterTime = 0;\n    this.maxShatterTime = 3000;\n    this.fadeAlpha = 0;\n    \n    // Advanced crack system\n    this.cracks = [];\n    this.fragments = [];\n    this.stressPoints = [];\n    \n    // Physics parameters\n    this.physics = {\n      gravity: 0.3,\n      friction: 0.98,\n      elasticity: 0.4,\n      fragmentCount: 25,\n      crackPropagationSpeed: 300,\n      stressFieldRadius: 150\n    };\n    \n    // Visual effects\n    this.effects = {\n      refractionIntensity: 0.8,\n      reflectionIntensity: 0.6,\n      glowIntensity: 0.4,\n      shimmerPhase: 0\n    };\n    \n    // Performance optimization\n    this.performanceLevel = this.detectPerformanceLevel();\n    this.adjustSettingsForPerformance();\n  }\n\n  detectPerformanceLevel() {\n    // Simple performance detection based on canvas size and device\n    const pixelCount = this.canvas.width * this.canvas.height;\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    \n    if (isMobile || pixelCount > 1920 * 1080) {\n      return 'low';\n    } else if (pixelCount > 1280 * 720) {\n      return 'medium';\n    }\n    return 'high';\n  }\n\n  adjustSettingsForPerformance() {\n    switch (this.performanceLevel) {\n      case 'low':\n        this.physics.fragmentCount = 15;\n        this.physics.crackPropagationSpeed = 200;\n        this.effects.refractionIntensity = 0.4;\n        break;\n      case 'medium':\n        this.physics.fragmentCount = 20;\n        this.physics.crackPropagationSpeed = 250;\n        this.effects.refractionIntensity = 0.6;\n        break;\n      case 'high':\n        // Use default settings\n        break;\n    }\n  }\n\n  createShatterEffect(impactX, impactY, intensity = 1) {\n    this.reset();\n    this.isShattered = true;\n    this.fadeAlpha = Math.min(1, 0.9 * intensity);\n    this.shatterTime = 0;\n    \n    // Create impact point\n    const impactPoint = {\n      x: impactX,\n      y: impactY,\n      intensity: intensity,\n      radius: Math.min(100, 50 * intensity)\n    };\n    \n    // Generate realistic crack propagation\n    this.generateRealisticCracks(impactPoint);\n    \n    // Create glass fragments with physics\n    this.generateGlassFragments(impactPoint);\n    \n    // Add stress field visualization\n    this.createStressField(impactPoint);\n    \n    // Enhanced particle effects\n    this.createAdvancedParticles(impactPoint);\n  }\n\n  generateRealisticCracks(impactPoint) {\n    const { x, y, intensity } = impactPoint;\n    this.cracks = [];\n    \n    // Primary radial cracks\n    const numPrimary = Math.floor(6 + intensity * 8);\n    for (let i = 0; i < numPrimary; i++) {\n      const angle = (i / numPrimary) * Math.PI * 2 + (Math.random() - 0.5) * 0.5;\n      const crack = this.createCrackLine(x, y, angle, intensity, 'primary');\n      this.cracks.push(crack);\n    }\n    \n    // Secondary branching cracks\n    const numSecondary = Math.floor(4 + intensity * 6);\n    for (let i = 0; i < numSecondary; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const distance = 50 + Math.random() * 80;\n      const startX = x + Math.cos(angle) * distance;\n      const startY = y + Math.sin(angle) * distance;\n      const crack = this.createCrackLine(startX, startY, angle + Math.PI/2, intensity * 0.7, 'secondary');\n      this.cracks.push(crack);\n    }\n    \n    // Circular stress cracks\n    const numCircular = Math.floor(2 + intensity * 3);\n    for (let i = 0; i < numCircular; i++) {\n      const radius = 30 + i * 25 + Math.random() * 20;\n      const crack = this.createCircularCrack(x, y, radius, intensity);\n      this.cracks.push(crack);\n    }\n  }\n\n  createCrackLine(startX, startY, angle, intensity, type) {\n    const crack = {\n      points: [],\n      type: type,\n      width: type === 'primary' ? 2 + intensity : 1 + intensity * 0.5,\n      opacity: 0.8,\n      propagationSpeed: this.physics.crackPropagationSpeed,\n      currentLength: 0,\n      targetLength: (type === 'primary' ? 150 : 80) + Math.random() * 100 * intensity\n    };\n    \n    // Generate crack path with realistic imperfections\n    const segments = Math.floor(crack.targetLength / 10);\n    let currentX = startX;\n    let currentY = startY;\n    let currentAngle = angle;\n    \n    for (let i = 0; i <= segments; i++) {\n      const progress = i / segments;\n      const segmentLength = 10 + Math.random() * 5;\n      \n      // Add natural deviation\n      const deviation = (Math.random() - 0.5) * 0.3 * progress;\n      currentAngle += deviation;\n      \n      // Add stress-based branching\n      if (Math.random() < 0.1 * intensity && i > 2) {\n        const branchAngle = currentAngle + (Math.random() - 0.5) * Math.PI/3;\n        const branchLength = segmentLength * (0.5 + Math.random() * 0.5);\n        const branchX = currentX + Math.cos(branchAngle) * branchLength;\n        const branchY = currentY + Math.sin(branchAngle) * branchLength;\n        \n        crack.points.push({\n          x: branchX,\n          y: branchY,\n          isBranch: true,\n          opacity: 0.6\n        });\n      }\n      \n      currentX += Math.cos(currentAngle) * segmentLength;\n      currentY += Math.sin(currentAngle) * segmentLength;\n      \n      // Check boundaries\n      if (currentX < 0 || currentX > this.canvas.width || currentY < 0 || currentY > this.canvas.height) {\n        break;\n      }\n      \n      crack.points.push({\n        x: currentX,\n        y: currentY,\n        isBranch: false,\n        opacity: 0.8 * (1 - progress * 0.3)\n      });\n    }\n    \n    return crack;\n  }\n\n  createCircularCrack(centerX, centerY, radius, intensity) {\n    const crack = {\n      points: [],\n      type: 'circular',\n      width: 1 + intensity * 0.5,\n      opacity: 0.6,\n      propagationSpeed: this.physics.crackPropagationSpeed * 0.7,\n      currentLength: 0,\n      targetLength: radius * Math.PI * 2\n    };\n    \n    const segments = Math.floor(radius * 0.3);\n    for (let i = 0; i < segments; i++) {\n      const angle = (i / segments) * Math.PI * 2;\n      const deviation = (Math.random() - 0.5) * 15;\n      const x = centerX + Math.cos(angle) * (radius + deviation);\n      const y = centerY + Math.sin(angle) * (radius + deviation);\n      \n      crack.points.push({\n        x: x,\n        y: y,\n        isBranch: false,\n        opacity: 0.6\n      });\n    }\n    \n    return crack;\n  }\n\n  generateGlassFragments(impactPoint) {\n    this.fragments = [];\n    const { x, y, intensity } = impactPoint;\n    \n    for (let i = 0; i < this.physics.fragmentCount; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const distance = Math.random() * 80 * intensity;\n      const size = 3 + Math.random() * 8;\n      \n      const fragment = {\n        x: x + Math.cos(angle) * distance,\n        y: y + Math.sin(angle) * distance,\n        vx: Math.cos(angle) * (2 + Math.random() * 6) * intensity,\n        vy: Math.sin(angle) * (2 + Math.random() * 6) * intensity - Math.random() * 2,\n        size: size,\n        rotation: Math.random() * Math.PI * 2,\n        rotationSpeed: (Math.random() - 0.5) * 0.3,\n        opacity: 0.7 + Math.random() * 0.3,\n        color: this.getGlassColor(),\n        life: 1.0,\n        decay: 0.0003 + Math.random() * 0.0002\n      };\n      \n      this.fragments.push(fragment);\n    }\n  }\n\n  createStressField(impactPoint) {\n    this.stressPoints = [];\n    const { x, y, intensity, radius } = impactPoint;\n    \n    // Create stress visualization points\n    const stressCount = Math.floor(15 + intensity * 10);\n    for (let i = 0; i < stressCount; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const distance = Math.random() * radius;\n      \n      this.stressPoints.push({\n        x: x + Math.cos(angle) * distance,\n        y: y + Math.sin(angle) * distance,\n        intensity: intensity * (1 - distance / radius),\n        phase: Math.random() * Math.PI * 2,\n        radius: 2 + Math.random() * 4\n      });\n    }\n  }\n\n  createAdvancedParticles(impactPoint) {\n    const { x, y, intensity } = impactPoint;\n    const particleCount = Math.floor(40 + intensity * 80);\n    \n    for (let i = 0; i < particleCount; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = 2 + Math.random() * 5;\n      const distance = Math.random() * 60;\n      \n      const startX = x + Math.cos(angle) * distance;\n      const startY = y + Math.sin(angle) * distance;\n      \n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed + Math.random() * 1;\n      \n      const size = 1 + Math.random() * 3;\n      const duration = 800 + Math.random() * 1500;\n      \n      const color = this.getGlassParticleColor();\n      this.particleManager.createParticle(startX, startY, color, size, dx, dy, duration);\n    }\n  }\n\n  getGlassColor() {\n    const colors = [\n      'rgba(255, 255, 255, 0.9)',\n      'rgba(240, 248, 255, 0.8)',\n      'rgba(220, 235, 255, 0.7)',\n      'rgba(200, 230, 255, 0.8)'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  getGlassParticleColor() {\n    const colors = [\n      'rgba(255, 255, 255, 0.9)',\n      'rgba(180, 220, 255, 0.7)',\n      'rgba(200, 240, 255, 0.8)',\n      'rgba(160, 200, 255, 0.6)'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  update(deltaTime) {\n    if (!this.isShattered) return;\n    \n    this.shatterTime += deltaTime;\n    const dt = deltaTime / 16; // Normalize to 60fps\n    \n    // Update fade effect\n    const fadeProgress = this.shatterTime / this.maxShatterTime;\n    this.fadeAlpha = Math.max(0, 0.9 * (1 - fadeProgress));\n    \n    // Update shimmer effect\n    this.effects.shimmerPhase += 0.1 * dt;\n    \n    // Update crack propagation\n    this.updateCrackPropagation(dt);\n    \n    // Update glass fragments\n    this.updateFragments(dt);\n    \n    // Update stress field\n    this.updateStressField(dt);\n    \n    // Cleanup when done\n    if (this.shatterTime >= this.maxShatterTime) {\n      this.reset();\n    }\n  }\n\n  updateCrackPropagation(dt) {\n    this.cracks.forEach(crack => {\n      if (crack.currentLength < crack.targetLength) {\n        crack.currentLength += crack.propagationSpeed * dt;\n        crack.currentLength = Math.min(crack.currentLength, crack.targetLength);\n      }\n    });\n  }\n\n  updateFragments(dt) {\n    this.fragments.forEach(fragment => {\n      // Apply physics\n      fragment.x += fragment.vx * dt;\n      fragment.y += fragment.vy * dt;\n      fragment.vy += this.physics.gravity * dt;\n      \n      // Apply friction\n      fragment.vx *= this.physics.friction;\n      fragment.vy *= this.physics.friction;\n      \n      // Update rotation\n      fragment.rotation += fragment.rotationSpeed * dt;\n      \n      // Update life\n      fragment.life -= fragment.decay * dt;\n      fragment.opacity = Math.max(0, fragment.life * 0.8);\n      \n      // Boundary collision\n      if (fragment.x < 0 || fragment.x > this.canvas.width) {\n        fragment.vx *= -this.physics.elasticity;\n      }\n      if (fragment.y > this.canvas.height) {\n        fragment.vy *= -this.physics.elasticity;\n        fragment.y = this.canvas.height;\n      }\n    });\n    \n    // Remove dead fragments\n    this.fragments = this.fragments.filter(f => f.life > 0);\n  }\n\n  updateStressField(dt) {\n    this.stressPoints.forEach(point => {\n      point.phase += 0.15 * dt;\n      point.intensity *= 0.995; // Gradual fade\n    });\n  }\n\n  draw() {\n    if (!this.isShattered || this.fadeAlpha <= 0) return;\n    \n    this.ctx.save();\n    \n    // Draw stress field (subtle background effect)\n    this.drawStressField();\n    \n    // Draw crack patterns\n    this.drawCracks();\n    \n    // Draw glass fragments\n    this.drawFragments();\n    \n    // Draw refraction effect\n    this.drawRefractionEffect();\n    \n    this.ctx.restore();\n  }\n\n  drawStressField() {\n    this.ctx.globalAlpha = this.fadeAlpha * 0.3;\n    this.stressPoints.forEach(point => {\n      const intensity = point.intensity * (1 + Math.sin(point.phase) * 0.3);\n      const radius = point.radius * intensity;\n      \n      const gradient = this.ctx.createRadialGradient(\n        point.x, point.y, 0,\n        point.x, point.y, radius\n      );\n      gradient.addColorStop(0, `rgba(255, 255, 255, ${intensity * 0.4})`);\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n      \n      this.ctx.fillStyle = gradient;\n      this.ctx.beginPath();\n      this.ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\n      this.ctx.fill();\n    });\n  }\n\n  drawCracks() {\n    this.ctx.globalAlpha = this.fadeAlpha;\n    this.ctx.lineCap = 'round';\n    this.ctx.lineJoin = 'round';\n    \n    this.cracks.forEach(crack => {\n      if (crack.points.length < 2) return;\n      \n      const drawLength = Math.min(crack.currentLength, crack.targetLength);\n      const pointsCount = Math.floor((drawLength / crack.targetLength) * crack.points.length);\n      \n      // Main crack line\n      this.ctx.strokeStyle = `rgba(255, 255, 255, ${crack.opacity})`;\n      this.ctx.lineWidth = crack.width;\n      this.ctx.shadowColor = 'rgba(255, 255, 255, 0.8)';\n      this.ctx.shadowBlur = crack.width * 2;\n      \n      this.ctx.beginPath();\n      if (pointsCount > 0) {\n        this.ctx.moveTo(crack.points[0].x, crack.points[0].y);\n        for (let i = 1; i < pointsCount; i++) {\n          const point = crack.points[i];\n          this.ctx.globalAlpha = this.fadeAlpha * point.opacity;\n          this.ctx.lineTo(point.x, point.y);\n        }\n      }\n      this.ctx.stroke();\n      \n      // Add shimmer effect\n      this.ctx.globalAlpha = this.fadeAlpha * 0.5 * (1 + Math.sin(this.effects.shimmerPhase) * 0.3);\n      this.ctx.strokeStyle = `rgba(180, 220, 255, 0.6)`;\n      this.ctx.lineWidth = crack.width * 0.5;\n      this.ctx.stroke();\n    });\n  }\n\n  drawFragments() {\n    this.fragments.forEach(fragment => {\n      this.ctx.save();\n      this.ctx.globalAlpha = fragment.opacity * this.fadeAlpha;\n      this.ctx.translate(fragment.x, fragment.y);\n      this.ctx.rotate(fragment.rotation);\n      \n      // Draw fragment with glass-like appearance\n      this.ctx.fillStyle = fragment.color;\n      this.ctx.beginPath();\n      this.ctx.rect(-fragment.size/2, -fragment.size/2, fragment.size, fragment.size);\n      this.ctx.fill();\n      \n      // Add highlight\n      this.ctx.globalAlpha = fragment.opacity * this.fadeAlpha * 0.8;\n      this.ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n      this.ctx.beginPath();\n      this.ctx.rect(-fragment.size/2, -fragment.size/2, fragment.size/3, fragment.size/3);\n      this.ctx.fill();\n      \n      this.ctx.restore();\n    });\n  }\n\n  drawRefractionEffect() {\n    if (this.effects.refractionIntensity <= 0) return;\n    \n    this.ctx.globalAlpha = this.fadeAlpha * this.effects.refractionIntensity * 0.3;\n    this.ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  reset() {\n    this.isShattered = false;\n    this.shatterTime = 0;\n    this.fadeAlpha = 0;\n    this.cracks = [];\n    this.fragments = [];\n    this.stressPoints = [];\n    this.effects.shimmerPhase = 0;\n  }\n\n  isActive() {\n    return this.isShattered;\n  }\n\n  triggerShatter(x, y, intensity = 1) {\n    this.createShatterEffect(x, y, intensity);\n  }\n}\n","export class ProgressManager {\n  constructor() {\n    this.storageKey = 'superstudent_progress';\n    this.levels = ['colors', 'shapes', 'alphabet', 'numbers', 'clcase'];\n    this.progress = this.loadProgress();\n  }\n\n  loadProgress() {\n    try {\n      const saved = localStorage.getItem(this.storageKey);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    } catch (error) {\n      console.warn('Failed to load progress:', error);\n    }\n    \n    // Default progress - ALL levels unlocked from start\n    return {\n      unlockedLevels: ['colors', 'shapes', 'alphabet', 'numbers', 'clcase'],\n      completedLevels: [],\n      scores: {},\n      totalScore: 0\n    };\n  }\n\n  saveProgress() {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(this.progress));\n    } catch (error) {\n      console.warn('Failed to save progress:', error);\n    }\n  }\n\n  isLevelUnlocked(levelName) {\n    return this.progress.unlockedLevels.includes(levelName);\n  }\n\n  isLevelCompleted(levelName) {\n    return this.progress.completedLevels.includes(levelName);\n  }\n\n  completeLevel(levelName, score = 0) {\n    // Mark as completed\n    if (!this.progress.completedLevels.includes(levelName)) {\n      this.progress.completedLevels.push(levelName);\n    }\n\n    // Update score\n    this.progress.scores[levelName] = Math.max(this.progress.scores[levelName] || 0, score);\n    this.progress.totalScore = Object.values(this.progress.scores).reduce((sum, s) => sum + s, 0);\n\n    // Unlock next level\n    const currentIndex = this.levels.indexOf(levelName);\n    if (currentIndex >= 0 && currentIndex < this.levels.length - 1) {\n      const nextLevel = this.levels[currentIndex + 1];\n      if (!this.progress.unlockedLevels.includes(nextLevel)) {\n        this.progress.unlockedLevels.push(nextLevel);\n      }\n    }\n\n    this.saveProgress();\n  }\n\n  getLevelScore(levelName) {\n    return this.progress.scores[levelName] || 0;\n  }\n\n  getProgress() {\n    return { ...this.progress };\n  }\n\n  resetProgress() {\n    this.progress = {\n      unlockedLevels: ['colors', 'shapes', 'alphabet', 'numbers', 'clcase'],\n      completedLevels: [],\n      scores: {},\n      totalScore: 0\n    };\n    this.saveProgress();\n  }\n\n  getCompletionPercentage() {\n    return Math.round((this.progress.completedLevels.length / this.levels.length) * 100);\n  }\n}\n","export class BaseLevel {\n  // Accept core level parameters\n  constructor(canvas, ctx, managers, helpers) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.managers = managers;\n    this.helpers = helpers;\n    this.running = false;\n    this.score = 0;\n  }\n\n  async init() {\n    throw new Error('init() must be implemented by subclass');\n  }\n\n  update(deltaTime) {\n    throw new Error('update() must be implemented by subclass');\n  }\n\n  render() {\n    throw new Error('render() must be implemented by subclass');\n  }\n\n  cleanup() {\n    throw new Error('cleanup() must be implemented by subclass');\n  }\n\n  async start() {\n    await this.init();\n    this.running = true;\n  }\n\n  end() {\n    this.running = false;\n    this.cleanup();\n    \n    // Trigger completion callback if available\n    if (this.helpers && this.helpers.onLevelComplete) {\n      this.helpers.onLevelComplete(this.score);\n    }\n  }\n\n  // Pause the level\n  pause() {\n    this.running = false;\n  }\n\n  // Resume the level\n  resume() {\n    this.running = true;\n  }\n\n  // Reset the level state\n  reset() {\n    // Clean up any existing entities or listeners\n    this.cleanup();\n    // Reset score and flags. Do NOT call init() here because restartGame()\n    // will subsequently invoke start(), which already performs the\n    // asynchronous init(). Calling init() twice caused duplicate listeners\n    // and state corruption.\n    this.score = 0;\n  }\n\n  // Update score\n  updateScore(points) {\n    this.score = Math.max(0, this.score + points);\n    if (this.managers && this.managers.hud) {\n      this.managers.hud.updateScore(points);\n    }\n  }\n\n  // Handle canvas resize\n  resize(canvas) {\n    this.canvas = canvas;\n  }\n}\n","import { GAME_CONFIG } from './constants.js';\n\n/**\n * Provides level-specific parameters and rules.\n */\nexport const LevelSettings = {\n  colors: {\n    totalDots: GAME_CONFIG.COLORS_LEVEL_CONFIG?.TOTAL_DOTS || 85,\n    targetDots: GAME_CONFIG.COLORS_LEVEL_CONFIG?.TARGET_DOTS || 17,\n    distractorDots: GAME_CONFIG.COLORS_LEVEL_CONFIG?.DISTRACTOR_DOTS || 68,\n    dispersionFrames: GAME_CONFIG.COLORS_LEVEL_CONFIG?.DISPERSION_FRAMES || 30,\n    bounceDampening: GAME_CONFIG.COLORS_LEVEL_CONFIG?.DOT_BOUNCE_DAMPENING || 0.98,\n    shimmerFreq: GAME_CONFIG.COLORS_LEVEL_CONFIG?.SHIMMER_FREQUENCY || 0.05,\n    glowFreq: GAME_CONFIG.COLORS_LEVEL_CONFIG?.GLOW_FREQUENCY || 0.1,\n    memoryTime: GAME_CONFIG.COLORS_LEVEL_CONFIG?.MEMORY_DISPLAY_TIME || 2000,\n    collisionDelay: GAME_CONFIG.COLORS_LEVEL_CONFIG?.COLLISION_ENABLED_DELAY || 250\n  },\n  text: {\n    centerFontSize: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CENTER_FONT_SIZE || 900,\n    fallingFontSize: GAME_CONFIG.TEXT_LEVEL_CONFIG?.FALLING_FONT_SIZE || 240,\n    spawnEdgeBuffer: GAME_CONFIG.TEXT_LEVEL_CONFIG?.SPAWN_EDGE_BUFFER || 50,\n    advanceCount: GAME_CONFIG.TEXT_LEVEL_CONFIG?.TARGET_ADVANCE_COUNT || 5,\n    checkpointInterval: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CHECKPOINT_INTERVAL || 5,\n    abilities: GAME_CONFIG.TEXT_LEVEL_CONFIG?.ABILITIES || ['laser','aoe','charge_up'],\n    aoeRadius: GAME_CONFIG.TEXT_LEVEL_CONFIG?.AOE_RADIUS || 200,\n    chargeDuration: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CHARGE_UP_DURATION || 60,\n    laserWidth: GAME_CONFIG.TEXT_LEVEL_CONFIG?.LASER_WIDTH || [3,5],\n    swirlCount: GAME_CONFIG.TEXT_LEVEL_CONFIG?.SWIRL_PARTICLE_COUNT || 30,\n    orbitRadius: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CENTER_PIECE_ORBIT_RADIUS || 100\n  }\n};\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../../config/constants.js';\nimport { LevelSettings } from '../../config/gameSettings.js';\n\nexport default class ColorsLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.memoryTime = LevelSettings.colors.memoryTime;\n    this.dots = [];\n    this.state = 'memory';\n    this.targetDotsRemaining = 0;\n    this.onPointerDown = this.onPointerDown.bind(this);\n    \n    // Enhanced features\n    this.correctStreak = 0;\n    this.lastCorrectTime = 0;\n    this.levelStartTime = 0;\n    \n    // Timer tracking for memory leak prevention\n    this.activeTimers = [];\n  }\n\n  async init() {\n    // Choose first color in sequence\n    const colorsList = GAME_CONFIG.COLORS.COLORS_LIST;\n    this.targetColor = colorsList[0];\n    const rgb = this.targetColor.join(',');\n    this.mother = {\n      x: this.canvas.width / 2,\n      y: this.canvas.height / 2,\n      radius: this.managers?.displaySettings?.motherRadius || GAME_CONFIG.DOT_RADIUS,\n      color: `rgb(${rgb})`\n    };\n    \n    // Enhanced sound feedback\n    if (this.managers.sound) {\n      // Play level start sound\n      this.managers.sound.playSuccess();\n      \n      // Resume audio context\n      await this.managers.sound.resumeContext();\n    }\n    \n    // Show memory dot then disperse\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.levelStartTime = performance.now();\n    \n    const disperseTimer = setTimeout(() => this.disperse(), this.memoryTime);\n    this.activeTimers.push(disperseTimer);\n  }\n\n  disperse() {\n    this.state = 'playing';\n    const cfg = LevelSettings.colors;\n    const total = cfg.totalDots;\n    const targetCount = cfg.targetDots;\n    this.targetDotsRemaining = targetCount;\n    const others = GAME_CONFIG.COLORS.COLORS_LIST.filter(c => c !== this.targetColor);\n    \n    // Generate target dots\n    for (let i = 0; i < targetCount; i++) {\n      this.addDot(this.targetColor, true);\n    }\n    \n    // Generate distractor dots\n    for (let i = 0; i < total - targetCount; i++) {\n      const color = others[Math.floor(Math.random() * others.length)];\n      this.addDot(color, false);\n    }\n    \n    // Play dispersion sound effect\n    if (this.managers.sound) {\n      this.managers.sound.playPop(0.8);\n    }\n  }\n\n  addDot(colArray, isTarget) {\n    const angle = Math.random() * Math.PI * 2;\n    const speed = Math.random() * (GAME_CONFIG.DOT_SPEED_RANGE[1] - GAME_CONFIG.DOT_SPEED_RANGE[0]) + GAME_CONFIG.DOT_SPEED_RANGE[0];\n    const dot = {\n      x: this.mother.x,\n      y: this.mother.y,\n      radius: GAME_CONFIG.DOT_RADIUS,\n      color: `rgb(${colArray.join(',')})`,\n      dx: Math.cos(angle) * speed,\n      dy: Math.sin(angle) * speed,\n      isTarget: isTarget,\n      shimmer: Math.random() * Math.PI * 2,\n      pulsePhase: Math.random() * Math.PI * 2,\n      trail: []\n    };\n    this.dots.push(dot);\n  }\n\n  update(deltaTime) {\n    if (this.state !== 'playing') return;\n    \n    const dt = deltaTime / 16;\n    this.dots.forEach(dot => {\n      // Update position\n      dot.x += dot.dx * dt;\n      dot.y += dot.dy * dt;\n      \n      // Update visual effects\n      dot.shimmer += 0.1 * dt;\n      dot.pulsePhase += 0.05 * dt;\n      \n      // Add trail effect for target dots\n      if (dot.isTarget) {\n        dot.trail.push({ x: dot.x, y: dot.y, alpha: 1.0 });\n        if (dot.trail.length > 10) {\n          dot.trail.shift();\n        }\n        \n        // Fade trail\n        dot.trail.forEach((point, index) => {\n          point.alpha = (index + 1) / dot.trail.length * 0.5;\n        });\n      }\n      \n      // Bounce on edges with sound\n      if (dot.x - dot.radius < 0 || dot.x + dot.radius > this.canvas.width) {\n        dot.dx *= -1;\n        if (this.managers.sound && Math.random() < 0.1) {\n          this.managers.sound.playPop(0.3);\n        }\n      }\n      if (dot.y - dot.radius < 0 || dot.y + dot.radius > this.canvas.height) {\n        dot.dy *= -1;\n        if (this.managers.sound && Math.random() < 0.1) {\n          this.managers.sound.playPop(0.3);\n        }\n      }\n    });\n  }\n\n  render() {\n    if (this.state === 'memory') {\n      // Draw mother dot with enhanced effects\n      this.drawEnhancedDot(this.mother, true, true);\n      \n      // Draw instruction text\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n      this.ctx.font = 'bold 24px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Remember this color!', this.canvas.width / 2, 50);\n      \n    } else if (this.state === 'playing') {\n      // Draw moving dots with enhanced visuals\n      this.dots.forEach(dot => {\n        this.drawEnhancedDot(dot, dot.isTarget);\n      });\n      \n      // Draw UI\n      this.drawUI();\n    }\n  }\n\n  drawEnhancedDot(dot, isTarget = false, isMemory = false) {\n    this.ctx.save();\n    \n    // Draw trail for target dots\n    if (isTarget && dot.trail) {\n      dot.trail.forEach(point => {\n        this.ctx.globalAlpha = point.alpha;\n        this.ctx.fillStyle = dot.color;\n        this.ctx.beginPath();\n        this.ctx.arc(point.x, point.y, dot.radius * 0.5, 0, Math.PI * 2);\n        this.ctx.fill();\n      });\n    }\n    \n    // Draw main dot with effects\n    this.ctx.globalAlpha = 1.0;\n    \n    // Glow effect for target dots\n    if (isTarget || isMemory) {\n      const glowIntensity = 0.5 + Math.sin(dot.pulsePhase || 0) * 0.3;\n      this.ctx.shadowColor = dot.color;\n      this.ctx.shadowBlur = 20 * glowIntensity;\n    }\n    \n    // Shimmer effect\n    const shimmerOffset = Math.sin(dot.shimmer || 0) * 5;\n    \n    this.ctx.fillStyle = dot.color;\n    this.ctx.beginPath();\n    this.ctx.arc(dot.x + shimmerOffset, dot.y, dot.radius, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Highlight for target dots\n    if (isTarget || isMemory) {\n      this.ctx.globalAlpha = 0.8;\n      this.ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\n      this.ctx.beginPath();\n      this.ctx.arc(dot.x + shimmerOffset - dot.radius * 0.3, dot.y - dot.radius * 0.3, dot.radius * 0.4, 0, Math.PI * 2);\n      this.ctx.fill();\n    }\n    \n    this.ctx.restore();\n  }\n\n  drawUI() {\n    // Draw progress\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText(`Target Dots Remaining: ${this.targetDotsRemaining}`, 20, 30);\n    \n    // Draw streak if active\n    if (this.correctStreak > 0) {\n      this.ctx.fillStyle = '#2ecc71';\n      this.ctx.fillText(`Streak: ${this.correctStreak}`, 20, 55);\n    }\n    \n    // Draw timer\n    const elapsed = performance.now() - this.levelStartTime;\n    const seconds = Math.floor(elapsed / 1000);\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    this.ctx.textAlign = 'right';\n    this.ctx.fillText(`Time: ${seconds}s`, this.canvas.width - 20, 30);\n  }\n\n  onPointerDown(event) {\n    if (this.state !== 'playing') return;\n    \n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    // Check for dot collision\n    for (let i = this.dots.length - 1; i >= 0; i--) {\n      const dot = this.dots[i];\n      const dx = x - dot.x;\n      const dy = y - dot.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance <= dot.radius) {\n        // Hit a dot\n        if (dot.isTarget) {\n          // Correct hit\n          this.handleCorrectHit(dot, i);\n        } else {\n          // Wrong hit\n          this.handleWrongHit(dot, i);\n        }\n        break;\n      }\n    }\n  }\n\n  handleCorrectHit(dot, index) {\n    this.correctStreak++;\n    this.lastCorrectTime = performance.now();\n    \n    // Enhanced explosion effect\n    this.helpers.createExplosion(dot.x, dot.y, dot.color, 1.5);\n    \n    // Sound feedback\n    if (this.managers.sound) {\n      this.managers.sound.playSuccess();\n      \n      // Additional pop sound\n      const soundTimer = setTimeout(() => {\n        this.managers.sound.playPop(1.2);\n      }, 100);\n      this.activeTimers.push(soundTimer);\n    }\n    \n    // Score calculation with streak bonus\n    const baseScore = 100;\n    const streakBonus = Math.min(this.correctStreak, 5) * 20;\n    const totalScore = baseScore + streakBonus;\n    \n    this.updateScore(totalScore);\n    this.targetDotsRemaining--;\n    this.dots.splice(index, 1);\n    \n    // Sparkle effect for high streaks\n    if (this.correctStreak >= 3) {\n      this.managers.particleManager.createSparkle(dot.x, dot.y, '#ffd700', 1.5);\n    }\n    \n    // Check if level complete\n    if (this.targetDotsRemaining <= 0) {\n      this.completeLevel();\n    }\n  }\n\n  handleWrongHit(dot, index) {\n    this.correctStreak = 0;\n    \n    // Glass shatter effect\n    this.helpers.applyExplosionEffect(dot.x, dot.y, 30, 1);\n    \n    // Sound feedback\n    if (this.managers.sound) {\n      this.managers.sound.playWrong();\n    }\n    \n    // Score penalty\n    this.updateScore(-50);\n    this.dots.splice(index, 1);\n    \n    // Screen shake effect\n    if (this.managers.centerPiece) {\n      // Trigger screen shake (if available)\n    }\n  }\n\n  completeLevel() {\n    // Final celebration\n    if (this.managers.sound) {\n      this.managers.sound.playSequence([\n        { type: 'sound', name: 'success', volume: 1.0 },\n        { type: 'sound', name: 'pop', volume: 0.8, pitch: 1.2 }\n      ], 300);\n    }\n    \n    // Fireworks effect\n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    \n    for (let i = 0; i < 3; i++) {\n      const fireworkTimer = setTimeout(() => {\n        this.managers.particleManager.createExplosion(\n          centerX + (Math.random() - 0.5) * 200,\n          centerY + (Math.random() - 0.5) * 200,\n          this.mother.color,\n          2.0,\n          30\n        );\n      }, i * 500);\n      this.activeTimers.push(fireworkTimer);\n    }\n    \n    // Calculate bonus score\n    const timeBonus = Math.max(0, 10000 - (performance.now() - this.levelStartTime)) / 100;\n    const accuracyBonus = this.correctStreak * 50;\n    \n    this.updateScore(Math.floor(timeBonus + accuracyBonus));\n    \n    // End level after celebration\n    const endTimer = setTimeout(() => {\n      this.end();\n    }, 3000);\n    this.activeTimers.push(endTimer);\n  }\n\n  cleanup() {\n    // Clear all active timers to prevent memory leaks\n    this.activeTimers.forEach(timer => clearTimeout(timer));\n    this.activeTimers = [];\n    \n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.dots = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../../config/constants.js';\nimport { LevelSettings } from '../../config/gameSettings.js';\n\nexport default class ShapesLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.shapes;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target shape\n    const size = LevelSettings.text.centerFontSize;\n    this.ctx.save();\n    this.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.fillStyle = '#FFFFFF';\n    this.drawShape(this.currentTarget, size);\n    this.ctx.restore();\n    // Draw falling shapes\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.translate(obj.x, obj.y);\n      this.ctx.fillStyle = obj.color;\n      this.drawShape(obj.shape, LevelSettings.text.fallingFontSize);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    \n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      default: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n    }\n\n    // Randomly choose what shape to spawn\n    const shapes = ['Circle', 'Square', 'Triangle', 'Rectangle', 'Pentagon'];\n    const shape = shapes[Math.floor(Math.random() * shapes.length)];\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    \n    this.objects.push({ shape, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const size = LevelSettings.text.fallingFontSize;\n      const dx = x - obj.x;\n      const dy = y - obj.y;\n      const radius = size / 2;\n      if (dx * dx + dy * dy <= radius * radius) {\n        if (obj.shape === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.managers.hud.updateScore(10);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, radius, 1);\n          this.managers.hud.updateScore(-5);\n        }\n        return false;\n      }\n      return true;\n    });\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  drawShape(shape, size) {\n    const half = size / 2;\n    this.ctx.beginPath();\n    switch (shape) {\n      case 'Circle':\n        this.ctx.arc(0, 0, half, 0, Math.PI * 2);\n        break;\n      case 'Square':\n        this.ctx.rect(-half, -half, size, size);\n        break;\n      case 'Triangle':\n        this.ctx.moveTo(0, -half);\n        this.ctx.lineTo(half, half);\n        this.ctx.lineTo(-half, half);\n        this.ctx.closePath();\n        break;\n      case 'Rectangle':\n        this.ctx.rect(-half, -half * 0.6, size, size * 0.6);\n        break;\n      case 'Pentagon':\n        for (let i = 0; i < 5; i++) {\n          const angle = ((Math.PI * 2) / 5) * i - Math.PI / 2;\n          const px = Math.cos(angle) * half;\n          const py = Math.sin(angle) * half;\n          if (i === 0) this.ctx.moveTo(px, py);\n          else this.ctx.lineTo(px, py);\n        }\n        this.ctx.closePath();\n        break;\n      default:\n        this.ctx.arc(0, 0, half, 0, Math.PI * 2);\n    }\n    this.ctx.fill();\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../../config/constants.js';\nimport { LevelSettings } from '../../config/gameSettings.js';\n\nexport default class AlphabetLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.alphabet;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    // Move objects\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    // Remove off-screen\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.textAlign = 'center';\n    this.ctx.font = `${LevelSettings.text.centerFontSize}px Arial`;\n    this.ctx.fillText(this.currentTarget, this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.restore();\n    // Draw falling objects\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.fillStyle = obj.color;\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${LevelSettings.text.fallingFontSize}px Arial`;\n      this.ctx.fillText(obj.char, obj.x, obj.y);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      case 3: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n    }\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    this.objects.push({ char: this.currentTarget, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const width = LevelSettings.text.fallingFontSize;\n      const height = LevelSettings.text.fallingFontSize;\n      if (x > obj.x - width / 2 && x < obj.x + width / 2 && y > obj.y - height && y < obj.y) {\n        if (obj.char === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.updateScore(100);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, 20, 1);\n          this.updateScore(-25);\n        }\n        return false;\n      }\n      return true;\n    });\n    // Advance or complete\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../../config/constants.js';\nimport { LevelSettings } from '../../config/gameSettings.js';\n\nexport default class NumbersLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.numbers;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.textAlign = 'center';\n    this.ctx.font = `${LevelSettings.text.centerFontSize}px Arial`;\n    this.ctx.fillText(this.currentTarget, this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.restore();\n\n    // Draw falling objects\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.fillStyle = obj.color;\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${LevelSettings.text.fallingFontSize}px Arial`;\n      this.ctx.fillText(obj.char, obj.x, obj.y);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    \n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      case 3: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n    }\n\n    // Randomly choose what number to spawn\n    const chars = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n    const char = chars[Math.floor(Math.random() * chars.length)];\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    \n    this.objects.push({ char, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const width = LevelSettings.text.fallingFontSize;\n      const height = LevelSettings.text.fallingFontSize;\n      \n      if (x > obj.x - width / 2 && x < obj.x + width / 2 && y > obj.y - height && y < obj.y) {\n        if (obj.char === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.updateScore(100);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, 20, 1);\n          this.updateScore(-25);\n        }\n        return false;\n      }\n      return true;\n    });\n\n    // Advance to next number or complete level\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../../config/constants.js';\nimport { LevelSettings } from '../../config/gameSettings.js';\n\nexport default class ClCaseLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.clcase;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.textAlign = 'center';\n    this.ctx.font = `${LevelSettings.text.centerFontSize}px Arial`;\n    this.ctx.fillText(this.currentTarget, this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.restore();\n\n    // Draw falling objects\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.fillStyle = obj.color;\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${LevelSettings.text.fallingFontSize}px Arial`;\n      this.ctx.fillText(obj.char, obj.x, obj.y);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    \n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      case 3: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n    }\n\n    // Randomly choose what letter to spawn\n    const chars = 'abcdefghijklmnopqrstuvwxyz'.split('');\n    const char = chars[Math.floor(Math.random() * chars.length)];\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    \n    this.objects.push({ char, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const width = LevelSettings.text.fallingFontSize;\n      const height = LevelSettings.text.fallingFontSize;\n      \n      if (x > obj.x - width / 2 && x < obj.x + width / 2 && y > obj.y - height && y < obj.y) {\n        if (obj.char === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.updateScore(100);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, 20, 1);\n          this.updateScore(-25);\n        }\n        return false;\n      }\n      return true;\n    });\n\n    // Advance to next letter or complete level\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","/**\n * Phonics Level Configuration\n * Optimized for educational value and smooth performance\n */\n\nexport const PhonicsConfig = {\n  // Performance settings\n  performance: {\n    maxBubbles: 12,\n    maxParticles: 100,\n    targetFPS: 60,\n    bubblePoolSize: 20,\n    particlePoolSize: 50\n  },\n  \n  // Bubble physics\n  physics: {\n    gravity: 0.1,\n    buoyancy: 0.15,\n    drag: 0.98,\n    pop: {\n      minForce: 0.5,\n      maxForce: 2.0,\n      particleCount: 8\n    },\n    bounce: {\n      damping: 0.7,\n      elasticity: 0.3\n    }\n  },\n  \n  // Visual settings\n  visuals: {\n    bubbleSize: {\n      min: 40,\n      max: 80\n    },\n    colors: {\n      bubbleBase: 'rgba(173, 216, 230, 0.8)',\n      bubbleHighlight: 'rgba(255, 255, 255, 0.9)',\n      bubbleShadow: 'rgba(0, 0, 0, 0.1)',\n      letterColor: '#2c3e50',\n      correctGlow: '#2ecc71',\n      wrongGlow: '#e74c3c',\n      background: '#f8f9fa'\n    },\n    effects: {\n      shimmer: {\n        enabled: true,\n        intensity: 0.3,\n        speed: 0.1\n      },\n      floating: {\n        enabled: true,\n        amplitude: 2,\n        frequency: 0.05\n      },\n      glow: {\n        enabled: true,\n        radius: 20,\n        intensity: 0.5\n      }\n    }\n  },\n  \n  // Educational settings\n  education: {\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(''),\n    phonicsMap: {\n      'A': { sound: 'ay', frequency: [800, 1200] },\n      'B': { sound: 'buh', frequency: [100, 200] },\n      'C': { sound: 'kuh', frequency: [200, 300] },\n      'D': { sound: 'duh', frequency: [150, 250] },\n      'E': { sound: 'ee', frequency: [500, 700] },\n      'F': { sound: 'fuh', frequency: [300, 400] },\n      'G': { sound: 'guh', frequency: [120, 220] },\n      'H': { sound: 'huh', frequency: [100, 150] },\n      'I': { sound: 'eye', frequency: [300, 500] },\n      'J': { sound: 'juh', frequency: [200, 400] },\n      'K': { sound: 'kuh', frequency: [250, 350] },\n      'L': { sound: 'luh', frequency: [400, 600] },\n      'M': { sound: 'muh', frequency: [150, 300] },\n      'N': { sound: 'nuh', frequency: [200, 400] },\n      'O': { sound: 'oh', frequency: [400, 600] },\n      'P': { sound: 'puh', frequency: [100, 200] },\n      'Q': { sound: 'kwuh', frequency: [250, 450] },\n      'R': { sound: 'ruh', frequency: [300, 500] },\n      'S': { sound: 'sss', frequency: [500, 800] },\n      'T': { sound: 'tuh', frequency: [400, 600] },\n      'U': { sound: 'ooo', frequency: [300, 500] },\n      'V': { sound: 'vuh', frequency: [200, 400] },\n      'W': { sound: 'wuh', frequency: [250, 450] },\n      'X': { sound: 'ks', frequency: [300, 600] },\n      'Y': { sound: 'yuh', frequency: [400, 700] },\n      'Z': { sound: 'zuh', frequency: [400, 800] }\n    },\n    difficulty: {\n      easy: {\n        letters: ['A', 'B', 'C', 'D', 'E'],\n        spawnRate: 2000,\n        bubbleSpeed: 0.5,\n        targetCount: 3\n      },\n      medium: {\n        letters: ['F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n        spawnRate: 1500,\n        bubbleSpeed: 0.7,\n        targetCount: 5\n      },\n      hard: {\n        letters: ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        spawnRate: 1200,\n        bubbleSpeed: 0.9,\n        targetCount: 7\n      }\n    },\n    progression: {\n      levelDuration: 60000, // 1 minute\n      correctScorePoints: 100,\n      wrongScorePenalty: -25,\n      streakMultiplier: 1.5,\n      maxStreak: 5\n    }\n  },\n  \n  // Game mechanics\n  gameplay: {\n    spawnZone: {\n      x: 0.1, // 10% from left\n      y: 0.9, // 90% from top (bottom)\n      width: 0.8, // 80% of screen width\n      height: 0.1 // 10% of screen height\n    },\n    targetZone: {\n      x: 0.2, // 20% from left\n      y: 0.1, // 10% from top\n      width: 0.6, // 60% of screen width\n      height: 0.3 // 30% of screen height\n    },\n    bubbleLifetime: 15000, // 15 seconds\n    comboWindow: 3000, // 3 seconds for combo\n    pauseOnWrong: 500, // 0.5 second pause on wrong answer\n    celebrationDuration: 2000 // 2 seconds celebration\n  },\n  \n  // Audio settings\n  audio: {\n    phonics: {\n      volume: 0.8,\n      pitch: 1.0,\n      playOnSpawn: true,\n      playOnPop: true,\n      repeatDelay: 1000\n    },\n    effects: {\n      bubblePop: { volume: 0.6, pitch: 1.0 },\n      correct: { volume: 0.7, pitch: 1.0 },\n      wrong: { volume: 0.5, pitch: 0.8 },\n      levelComplete: { volume: 0.8, pitch: 1.0 },\n      combo: { volume: 0.6, pitch: 1.2 }\n    }\n  }\n};","import { PhonicsConfig } from './PhonicsConfig.js';\n\n/**\n * BubbleSystem - Optimized bubble physics and management\n */\nexport class BubbleSystem {\n  constructor(canvas, ctx, particleManager, soundManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    this.soundManager = soundManager;\n    \n    // Configuration\n    this.config = PhonicsConfig;\n    \n    // Bubble management\n    this.bubbles = [];\n    this.bubblePool = [];\n    this.activeBubbles = 0;\n    \n    // Performance optimization\n    this.lastSpawnTime = 0;\n    this.spawnRate = this.config.education.difficulty.easy.spawnRate;\n    this.maxBubbles = this.config.performance.maxBubbles;\n    \n    // Visual effects\n    this.time = 0;\n    this.shimmerPhase = 0;\n    \n    // Initialize bubble pool\n    this.initializeBubblePool();\n    \n    // Target letter tracking\n    this.targetLetter = null;\n    this.targetLetterIndex = 0;\n    this.currentDifficulty = 'easy';\n    \n    // Game state\n    this.streak = 0;\n    this.combo = 0;\n    this.lastCorrectTime = 0;\n    \n    // Bind methods\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.setupEventListeners();\n  }\n\n  initializeBubblePool() {\n    // Pre-create bubbles for performance\n    for (let i = 0; i < this.config.performance.bubblePoolSize; i++) {\n      this.bubblePool.push(this.createBubbleObject());\n    }\n  }\n\n  createBubbleObject() {\n    return {\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0,\n      size: 0,\n      letter: '',\n      isTarget: false,\n      lifetime: 0,\n      maxLifetime: 0,\n      phase: Math.random() * Math.PI * 2,\n      popAnimation: 0,\n      isPopping: false,\n      glowIntensity: 0,\n      shimmerOffset: Math.random() * Math.PI * 2,\n      active: false,\n      age: 0,\n      bounceCount: 0,\n      lastSoundTime: 0\n    };\n  }\n\n  setupEventListeners() {\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.canvas.addEventListener('touchstart', this.onPointerDown);\n  }\n\n  removeEventListeners() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.canvas.removeEventListener('touchstart', this.onPointerDown);\n  }\n\n  setDifficulty(difficulty) {\n    this.currentDifficulty = difficulty;\n    this.spawnRate = this.config.education.difficulty[difficulty].spawnRate;\n    this.maxBubbles = Math.floor(this.config.performance.maxBubbles * \n      (difficulty === 'easy' ? 0.7 : difficulty === 'medium' ? 0.85 : 1.0));\n  }\n\n  setTargetLetter(letter) {\n    this.targetLetter = letter;\n    this.targetLetterIndex = this.config.education.alphabet.indexOf(letter);\n  }\n\n  getNextTargetLetter() {\n    const letters = this.config.education.difficulty[this.currentDifficulty].letters;\n    this.targetLetterIndex = (this.targetLetterIndex + 1) % letters.length;\n    return letters[this.targetLetterIndex];\n  }\n\n  spawnBubble(letter = null, isTarget = false) {\n    if (this.activeBubbles >= this.maxBubbles) return null;\n    \n    // Get bubble from pool\n    let bubble = this.bubblePool.find(b => !b.active);\n    if (!bubble) {\n      bubble = this.createBubbleObject();\n      this.bubblePool.push(bubble);\n    }\n    \n    // Configure bubble\n    const spawnZone = this.config.gameplay.spawnZone;\n    const size = this.config.visuals.bubbleSize.min + \n                Math.random() * (this.config.visuals.bubbleSize.max - this.config.visuals.bubbleSize.min);\n    \n    bubble.x = (spawnZone.x + Math.random() * spawnZone.width) * this.canvas.width;\n    bubble.y = spawnZone.y * this.canvas.height;\n    bubble.vx = (Math.random() - 0.5) * 0.5;\n    bubble.vy = -this.config.education.difficulty[this.currentDifficulty].bubbleSpeed;\n    bubble.size = size;\n    bubble.letter = letter || this.getRandomLetter();\n    bubble.isTarget = isTarget;\n    bubble.lifetime = 0;\n    bubble.maxLifetime = this.config.gameplay.bubbleLifetime;\n    bubble.phase = Math.random() * Math.PI * 2;\n    bubble.popAnimation = 0;\n    bubble.isPopping = false;\n    bubble.glowIntensity = isTarget ? 0.5 : 0;\n    bubble.shimmerOffset = Math.random() * Math.PI * 2;\n    bubble.active = true;\n    bubble.age = 0;\n    bubble.bounceCount = 0;\n    bubble.lastSoundTime = 0;\n    \n    this.bubbles.push(bubble);\n    this.activeBubbles++;\n    \n    // Play phonics sound if enabled\n    if (this.config.audio.phonics.playOnSpawn) {\n      this.soundManager.playPhonicsSound(bubble.letter, this.config.audio.phonics.volume);\n    }\n    \n    return bubble;\n  }\n\n  getRandomLetter() {\n    const letters = this.config.education.difficulty[this.currentDifficulty].letters;\n    return letters[Math.floor(Math.random() * letters.length)];\n  }\n\n  update(deltaTime) {\n    this.time += deltaTime;\n    this.shimmerPhase += this.config.visuals.effects.shimmer.speed * deltaTime / 16;\n    \n    // Spawn bubbles\n    this.updateSpawning(deltaTime);\n    \n    // Update existing bubbles\n    this.updateBubbles(deltaTime);\n    \n    // Check for expired bubbles\n    this.cleanupBubbles();\n    \n    // Update combo timer\n    this.updateCombo(deltaTime);\n  }\n\n  updateSpawning(deltaTime) {\n    const now = performance.now();\n    if (now - this.lastSpawnTime >= this.spawnRate) {\n      const shouldSpawnTarget = this.targetLetter && \n                               Math.random() < 0.4 && \n                               !this.bubbles.some(b => b.isTarget);\n      \n      if (shouldSpawnTarget) {\n        this.spawnBubble(this.targetLetter, true);\n      } else {\n        this.spawnBubble();\n      }\n      \n      this.lastSpawnTime = now;\n    }\n  }\n\n  updateBubbles(deltaTime) {\n    const dt = deltaTime / 16; // Normalize to 60fps\n    \n    this.bubbles.forEach(bubble => {\n      if (!bubble.active) return;\n      \n      // Update lifetime\n      bubble.lifetime += deltaTime;\n      bubble.age += deltaTime;\n      \n      if (bubble.isPopping) {\n        bubble.popAnimation += deltaTime / 200;\n        if (bubble.popAnimation >= 1) {\n          this.deactivateBubble(bubble);\n        }\n        return;\n      }\n      \n      // Physics update\n      this.updateBubblePhysics(bubble, dt);\n      \n      // Visual effects update\n      this.updateBubbleEffects(bubble, dt);\n      \n      // Check boundaries\n      this.checkBoundaries(bubble);\n      \n      // Check if bubble should be removed\n      if (bubble.lifetime >= bubble.maxLifetime) {\n        this.popBubble(bubble, false);\n      }\n    });\n  }\n\n  updateBubblePhysics(bubble, dt) {\n    // Apply buoyancy (bubbles float up)\n    bubble.vy -= this.config.physics.buoyancy * dt;\n    \n    // Apply gravity (slight downward force)\n    bubble.vy += this.config.physics.gravity * dt;\n    \n    // Apply drag\n    bubble.vx *= this.config.physics.drag;\n    bubble.vy *= this.config.physics.drag;\n    \n    // Add floating motion\n    if (this.config.visuals.effects.floating.enabled) {\n      const floatOffset = Math.sin(this.time * this.config.visuals.effects.floating.frequency + bubble.phase) * \n                         this.config.visuals.effects.floating.amplitude;\n      bubble.vx += floatOffset * 0.01;\n    }\n    \n    // Update position\n    bubble.x += bubble.vx * dt;\n    bubble.y += bubble.vy * dt;\n  }\n\n  updateBubbleEffects(bubble, dt) {\n    // Update phase for animations\n    bubble.phase += 0.02 * dt;\n    \n    // Update glow for target letters\n    if (bubble.isTarget) {\n      bubble.glowIntensity = 0.5 + Math.sin(this.time * 0.005) * 0.3;\n    }\n    \n    // Update shimmer effect\n    bubble.shimmerOffset += this.config.visuals.effects.shimmer.speed * dt;\n  }\n\n  checkBoundaries(bubble) {\n    const radius = bubble.size / 2;\n    \n    // Side boundaries\n    if (bubble.x - radius < 0) {\n      bubble.x = radius;\n      bubble.vx = -bubble.vx * this.config.physics.bounce.elasticity;\n      bubble.bounceCount++;\n    } else if (bubble.x + radius > this.canvas.width) {\n      bubble.x = this.canvas.width - radius;\n      bubble.vx = -bubble.vx * this.config.physics.bounce.elasticity;\n      bubble.bounceCount++;\n    }\n    \n    // Top boundary (bubbles escape here)\n    if (bubble.y + radius < 0) {\n      this.deactivateBubble(bubble);\n    }\n    \n    // Bottom boundary (bubbles bounce)\n    if (bubble.y + radius > this.canvas.height) {\n      bubble.y = this.canvas.height - radius;\n      bubble.vy = -bubble.vy * this.config.physics.bounce.elasticity;\n      bubble.bounceCount++;\n    }\n    \n    // Apply bounce damping\n    if (bubble.bounceCount > 0) {\n      bubble.vx *= this.config.physics.bounce.damping;\n      bubble.vy *= this.config.physics.bounce.damping;\n    }\n  }\n\n  cleanupBubbles() {\n    this.bubbles = this.bubbles.filter(bubble => bubble.active);\n    this.activeBubbles = this.bubbles.length;\n  }\n\n  updateCombo(deltaTime) {\n    const now = performance.now();\n    if (now - this.lastCorrectTime > this.config.gameplay.comboWindow) {\n      this.combo = 0;\n    }\n  }\n\n  onPointerDown(event) {\n    event.preventDefault();\n    \n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    // Check for bubble collision\n    const clickedBubble = this.findBubbleAtPoint(x, y);\n    if (clickedBubble) {\n      this.handleBubbleClick(clickedBubble);\n    }\n  }\n\n  findBubbleAtPoint(x, y) {\n    // Check bubbles in reverse order (top to bottom)\n    for (let i = this.bubbles.length - 1; i >= 0; i--) {\n      const bubble = this.bubbles[i];\n      if (!bubble.active || bubble.isPopping) continue;\n      \n      const dx = x - bubble.x;\n      const dy = y - bubble.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance <= bubble.size / 2) {\n        return bubble;\n      }\n    }\n    return null;\n  }\n\n  handleBubbleClick(bubble) {\n    const isCorrect = bubble.letter === this.targetLetter;\n    \n    if (isCorrect) {\n      this.handleCorrectAnswer(bubble);\n    } else {\n      this.handleWrongAnswer(bubble);\n    }\n    \n    this.popBubble(bubble, isCorrect);\n  }\n\n  handleCorrectAnswer(bubble) {\n    // Update streak and combo\n    this.streak++;\n    this.combo++;\n    this.lastCorrectTime = performance.now();\n    \n    // Calculate score with multipliers\n    const baseScore = this.config.education.progression.correctScorePoints;\n    const streakMultiplier = Math.min(this.streak, this.config.education.progression.maxStreak) * \n                            this.config.education.progression.streakMultiplier;\n    const comboMultiplier = Math.min(this.combo, 3) * 0.5;\n    \n    const score = Math.floor(baseScore * (1 + streakMultiplier + comboMultiplier));\n    \n    // Play success sound\n    this.soundManager.playSuccess();\n    \n    // Play phonics sound\n    if (this.config.audio.phonics.playOnPop) {\n      this.soundManager.playPhonicsSound(bubble.letter, this.config.audio.phonics.volume);\n    }\n    \n    // Trigger visual effects\n    this.createSuccessEffect(bubble);\n    \n    // Notify parent level\n    if (this.onCorrectAnswer) {\n      this.onCorrectAnswer(bubble.letter, score);\n    }\n  }\n\n  handleWrongAnswer(bubble) {\n    // Reset streak but keep combo for educational value\n    this.streak = 0;\n    \n    // Play wrong sound\n    this.soundManager.playWrong();\n    \n    // Trigger visual effects\n    this.createWrongEffect(bubble);\n    \n    // Notify parent level\n    if (this.onWrongAnswer) {\n      this.onWrongAnswer(bubble.letter, this.config.education.progression.wrongScorePenalty);\n    }\n  }\n\n  popBubble(bubble, isCorrect) {\n    if (bubble.isPopping) return;\n    \n    bubble.isPopping = true;\n    bubble.popAnimation = 0;\n    \n    // Play pop sound\n    this.soundManager.playPop(1.0);\n    \n    // Create pop particles\n    this.createPopParticles(bubble, isCorrect);\n    \n    // Remove from active bubbles immediately\n    this.activeBubbles--;\n  }\n\n  createSuccessEffect(bubble) {\n    // Create green glow particles\n    const particleCount = this.config.physics.pop.particleCount;\n    for (let i = 0; i < particleCount; i++) {\n      const angle = (i / particleCount) * Math.PI * 2;\n      const speed = 2 + Math.random() * 3;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 2 + Math.random() * 3;\n      const duration = 800 + Math.random() * 400;\n      \n      this.particleManager.createParticle(\n        bubble.x, bubble.y,\n        this.config.visuals.colors.correctGlow,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  createWrongEffect(bubble) {\n    // Create red glow particles\n    const particleCount = this.config.physics.pop.particleCount;\n    for (let i = 0; i < particleCount; i++) {\n      const angle = (i / particleCount) * Math.PI * 2;\n      const speed = 1 + Math.random() * 2;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 1 + Math.random() * 2;\n      const duration = 600 + Math.random() * 300;\n      \n      this.particleManager.createParticle(\n        bubble.x, bubble.y,\n        this.config.visuals.colors.wrongGlow,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  createPopParticles(bubble, isCorrect) {\n    const particleCount = this.config.physics.pop.particleCount;\n    const color = isCorrect ? this.config.visuals.colors.correctGlow : this.config.visuals.colors.bubbleBase;\n    \n    for (let i = 0; i < particleCount; i++) {\n      const angle = (i / particleCount) * Math.PI * 2;\n      const speed = 1 + Math.random() * 2;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 1 + Math.random() * 2;\n      const duration = 500 + Math.random() * 500;\n      \n      this.particleManager.createParticle(\n        bubble.x, bubble.y,\n        color,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  deactivateBubble(bubble) {\n    bubble.active = false;\n    bubble.isPopping = false;\n    bubble.popAnimation = 0;\n    bubble.glowIntensity = 0;\n    bubble.lifetime = 0;\n    bubble.age = 0;\n    bubble.bounceCount = 0;\n  }\n\n  draw(ctx) {\n    this.bubbles.forEach(bubble => {\n      if (!bubble.active) return;\n      \n      ctx.save();\n      \n      if (bubble.isPopping) {\n        this.drawPoppingBubble(ctx, bubble);\n      } else {\n        this.drawBubble(ctx, bubble);\n      }\n      \n      ctx.restore();\n    });\n  }\n\n  drawBubble(ctx, bubble) {\n    // Draw glow effect for target letters\n    if (bubble.isTarget && this.config.visuals.effects.glow.enabled) {\n      ctx.globalAlpha = bubble.glowIntensity * 0.5;\n      ctx.fillStyle = this.config.visuals.colors.correctGlow;\n      ctx.beginPath();\n      ctx.arc(bubble.x, bubble.y, bubble.size / 2 + 10, 0, Math.PI * 2);\n      ctx.fill();\n    }\n    \n    // Draw bubble shadow\n    ctx.globalAlpha = 0.3;\n    ctx.fillStyle = this.config.visuals.colors.bubbleShadow;\n    ctx.beginPath();\n    ctx.arc(bubble.x + 2, bubble.y + 2, bubble.size / 2, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw main bubble\n    ctx.globalAlpha = 0.8;\n    const gradient = ctx.createRadialGradient(\n      bubble.x - bubble.size / 4, bubble.y - bubble.size / 4, 0,\n      bubble.x, bubble.y, bubble.size / 2\n    );\n    gradient.addColorStop(0, this.config.visuals.colors.bubbleHighlight);\n    gradient.addColorStop(1, this.config.visuals.colors.bubbleBase);\n    \n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(bubble.x, bubble.y, bubble.size / 2, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw bubble highlight\n    ctx.globalAlpha = 0.9;\n    ctx.fillStyle = this.config.visuals.colors.bubbleHighlight;\n    ctx.beginPath();\n    ctx.arc(bubble.x - bubble.size / 4, bubble.y - bubble.size / 4, bubble.size / 8, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw shimmer effect\n    if (this.config.visuals.effects.shimmer.enabled) {\n      ctx.globalAlpha = 0.4 + Math.sin(this.shimmerPhase + bubble.shimmerOffset) * 0.2;\n      ctx.fillStyle = this.config.visuals.colors.bubbleHighlight;\n      ctx.beginPath();\n      ctx.arc(bubble.x + bubble.size / 6, bubble.y - bubble.size / 6, bubble.size / 12, 0, Math.PI * 2);\n      ctx.fill();\n    }\n    \n    // Draw letter\n    ctx.globalAlpha = 1.0;\n    ctx.fillStyle = this.config.visuals.colors.letterColor;\n    ctx.font = `bold ${bubble.size / 2}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(bubble.letter, bubble.x, bubble.y);\n  }\n\n  drawPoppingBubble(ctx, bubble) {\n    const progress = bubble.popAnimation;\n    const scale = 1 + progress * 0.5;\n    const alpha = 1 - progress;\n    \n    ctx.globalAlpha = alpha;\n    ctx.scale(scale, scale);\n    \n    // Draw expanded bubble\n    ctx.fillStyle = this.config.visuals.colors.bubbleBase;\n    ctx.beginPath();\n    ctx.arc(bubble.x / scale, bubble.y / scale, (bubble.size / 2) / scale, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw letter\n    ctx.fillStyle = this.config.visuals.colors.letterColor;\n    ctx.font = `bold ${(bubble.size / 2) / scale}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(bubble.letter, bubble.x / scale, bubble.y / scale);\n  }\n\n  reset() {\n    // Deactivate all bubbles\n    this.bubbles.forEach(bubble => this.deactivateBubble(bubble));\n    this.bubbles = [];\n    this.activeBubbles = 0;\n    \n    // Reset state\n    this.streak = 0;\n    this.combo = 0;\n    this.lastCorrectTime = 0;\n    this.lastSpawnTime = 0;\n    this.time = 0;\n    this.shimmerPhase = 0;\n  }\n\n  cleanup() {\n    this.removeEventListeners();\n    this.reset();\n  }\n\n  // Event handlers that can be set by parent level\n  onCorrectAnswer = null;\n  onWrongAnswer = null;\n}","import { BaseLevel } from '../baseLevel.js';\nimport { BubbleSystem } from './BubbleSystem.js';\nimport { PhonicsConfig } from './PhonicsConfig.js';\n\n/**\n * PhonicsLevel - Educational bubble-popping game focused on letter sounds\n * Simple, robust, and appealing design with optimized performance\n */\nexport class PhonicsLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    \n    this.config = PhonicsConfig;\n    this.bubbleSystem = null;\n    \n    // Game state\n    this.currentDifficulty = 'easy';\n    this.targetLetter = 'A';\n    this.correctCount = 0;\n    this.totalAttempts = 0;\n    this.streak = 0;\n    this.timeRemaining = this.config.education.progression.levelDuration;\n    this.gameStartTime = 0;\n    \n    // UI state\n    this.showingInstructions = true;\n    this.celebrationTime = 0;\n    this.instructionAlpha = 1.0;\n    this.backgroundGradient = null;\n    \n    // Performance tracking\n    this.lastFrameTime = 0;\n    this.frameCount = 0;\n    this.avgFPS = 60;\n    \n    // Visual effects\n    this.backgroundPhase = 0;\n    this.targetLetterPulse = 0;\n    \n    // Bind methods\n    this.onCorrectAnswer = this.onCorrectAnswer.bind(this);\n    this.onWrongAnswer = this.onWrongAnswer.bind(this);\n  }\n\n  async init() {\n    console.log('🫧 Initializing Phonics Level...');\n    \n    // Initialize bubble system\n    this.bubbleSystem = new BubbleSystem(\n      this.canvas, \n      this.ctx, \n      this.managers.particleManager,\n      this.managers.sound\n    );\n    \n    // Set up event handlers\n    this.bubbleSystem.onCorrectAnswer = this.onCorrectAnswer;\n    this.bubbleSystem.onWrongAnswer = this.onWrongAnswer;\n    \n    // Set initial difficulty and target\n    this.setDifficulty(this.currentDifficulty);\n    this.setNewTarget();\n    \n    // Create background gradient\n    this.createBackgroundGradient();\n    \n    // Resume audio context for user interaction\n    await this.managers.sound.resumeContext();\n    \n    // Show instructions\n    this.showInstructions();\n    \n    console.log('✅ Phonics Level initialized successfully!');\n  }\n\n  createBackgroundGradient() {\n    this.backgroundGradient = this.ctx.createLinearGradient(\n      0, 0, 0, this.canvas.height\n    );\n    this.backgroundGradient.addColorStop(0, '#e3f2fd');\n    this.backgroundGradient.addColorStop(0.5, '#f8f9fa');\n    this.backgroundGradient.addColorStop(1, '#fff3e0');\n  }\n\n  setDifficulty(difficulty) {\n    this.currentDifficulty = difficulty;\n    if (this.bubbleSystem) {\n      this.bubbleSystem.setDifficulty(difficulty);\n    }\n    console.log(`📊 Difficulty set to: ${difficulty}`);\n  }\n\n  setNewTarget() {\n    const letters = this.config.education.difficulty[this.currentDifficulty].letters;\n    this.targetLetter = letters[Math.floor(Math.random() * letters.length)];\n    \n    if (this.bubbleSystem) {\n      this.bubbleSystem.setTargetLetter(this.targetLetter);\n    }\n    \n    // Play target letter sound\n    this.managers.sound.playPhonicsSound(this.targetLetter, 0.8);\n    \n    console.log(`🎯 New target letter: ${this.targetLetter}`);\n  }\n\n  showInstructions() {\n    this.showingInstructions = true;\n    this.instructionAlpha = 1.0;\n    \n    // Auto-hide instructions after 3 seconds\n    setTimeout(() => {\n      this.hideInstructions();\n    }, 3000);\n  }\n\n  hideInstructions() {\n    this.showingInstructions = false;\n    this.gameStartTime = performance.now();\n    \n    // Start the game timer\n    this.timeRemaining = this.config.education.progression.levelDuration;\n  }\n\n  onCorrectAnswer(letter, score) {\n    this.correctCount++;\n    this.totalAttempts++;\n    this.streak++;\n    \n    // Update score\n    this.updateScore(score);\n    \n    // Check if we need to advance difficulty\n    const targetCount = this.config.education.difficulty[this.currentDifficulty].targetCount;\n    if (this.correctCount >= targetCount) {\n      this.advanceDifficulty();\n    } else {\n      // Set new target letter\n      this.setNewTarget();\n    }\n    \n    // Show celebration effect\n    this.showCelebration();\n    \n    // Update HUD\n    if (this.managers.hud) {\n      this.managers.hud.updateStats(`Target: ${this.targetLetter} | Streak: ${this.streak} | ${this.correctCount}/${targetCount}`);\n    }\n    \n    console.log(`✅ Correct! ${letter} - Score: ${score}, Streak: ${this.streak}`);\n  }\n\n  onWrongAnswer(letter, penalty) {\n    this.totalAttempts++;\n    this.streak = 0;\n    \n    // Update score\n    this.updateScore(penalty);\n    \n    // Brief pause for feedback\n    setTimeout(() => {\n      // Repeat target letter sound\n      this.managers.sound.playPhonicsSound(this.targetLetter, 0.8);\n    }, this.config.gameplay.pauseOnWrong);\n    \n    // Update HUD\n    if (this.managers.hud) {\n      this.managers.hud.updateStats(`Target: ${this.targetLetter} | Streak: ${this.streak} | ${this.correctCount}/${this.config.education.difficulty[this.currentDifficulty].targetCount}`);\n    }\n    \n    console.log(`❌ Wrong! ${letter} - Penalty: ${penalty}, Target was: ${this.targetLetter}`);\n  }\n\n  advanceDifficulty() {\n    const difficulties = ['easy', 'medium', 'hard'];\n    const currentIndex = difficulties.indexOf(this.currentDifficulty);\n    \n    if (currentIndex < difficulties.length - 1) {\n      this.currentDifficulty = difficulties[currentIndex + 1];\n      this.setDifficulty(this.currentDifficulty);\n      this.correctCount = 0; // Reset progress for new difficulty\n      this.setNewTarget();\n      \n      // Show advancement message\n      this.showAdvancementMessage();\n      \n      console.log(`🎉 Advanced to ${this.currentDifficulty} difficulty!`);\n    } else {\n      // Completed all difficulties\n      this.completeLevel();\n    }\n  }\n\n  showCelebration() {\n    this.celebrationTime = this.config.gameplay.celebrationDuration;\n    \n    // Create celebration particles\n    this.createCelebrationParticles();\n  }\n\n  showAdvancementMessage() {\n    if (this.managers.checkpoint) {\n      this.managers.checkpoint.showCheckpoint(`Level Up!<br>Now playing: ${this.currentDifficulty.toUpperCase()} mode`);\n    }\n  }\n\n  createCelebrationParticles() {\n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    \n    for (let i = 0; i < 20; i++) {\n      const angle = (i / 20) * Math.PI * 2;\n      const speed = 3 + Math.random() * 5;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 2 + Math.random() * 4;\n      const duration = 1000 + Math.random() * 1000;\n      \n      this.managers.particleManager.createParticle(\n        centerX, centerY,\n        this.config.visuals.colors.correctGlow,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  completeLevel() {\n    console.log('🎉 Level completed!');\n    \n    // Calculate final score bonus\n    const accuracy = this.correctCount / Math.max(1, this.totalAttempts);\n    const timeBonus = Math.floor(this.timeRemaining / 1000) * 10;\n    const accuracyBonus = Math.floor(accuracy * 500);\n    \n    this.updateScore(timeBonus + accuracyBonus);\n    \n    // Show completion message\n    if (this.managers.checkpoint) {\n      this.managers.checkpoint.showCheckpoint(\n        `Phonics Master!<br>Accuracy: ${Math.floor(accuracy * 100)}%<br>Time Bonus: ${timeBonus}<br>Accuracy Bonus: ${accuracyBonus}`\n      );\n    }\n    \n    // End the level after celebration\n    setTimeout(() => {\n      this.end();\n    }, 3000);\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    \n    // Update performance tracking\n    this.updatePerformanceStats(deltaTime);\n    \n    // Update visual effects\n    this.updateVisualEffects(deltaTime);\n    \n    // Update game timer\n    this.updateGameTimer(deltaTime);\n    \n    // Update bubble system\n    if (this.bubbleSystem) {\n      this.bubbleSystem.update(deltaTime);\n    }\n    \n    // Update instruction fade\n    if (this.showingInstructions) {\n      this.updateInstructions(deltaTime);\n    }\n    \n    // Update celebration\n    if (this.celebrationTime > 0) {\n      this.celebrationTime -= deltaTime;\n    }\n    \n    // Check for level completion conditions\n    this.checkLevelCompletion();\n  }\n\n  updatePerformanceStats(deltaTime) {\n    this.frameCount++;\n    const now = performance.now();\n    \n    if (now - this.lastFrameTime >= 1000) {\n      this.avgFPS = this.frameCount;\n      this.frameCount = 0;\n      this.lastFrameTime = now;\n      \n      // Adjust quality based on performance\n      if (this.avgFPS < 45) {\n        this.reducedQuality = true;\n      } else if (this.avgFPS > 55) {\n        this.reducedQuality = false;\n      }\n    }\n  }\n\n  updateVisualEffects(deltaTime) {\n    this.backgroundPhase += deltaTime * 0.001;\n    this.targetLetterPulse += deltaTime * 0.005;\n  }\n\n  updateGameTimer(deltaTime) {\n    if (!this.showingInstructions && this.timeRemaining > 0) {\n      this.timeRemaining -= deltaTime;\n      \n      if (this.timeRemaining <= 0) {\n        this.timeRemaining = 0;\n        this.completeLevel();\n      }\n    }\n  }\n\n  updateInstructions(deltaTime) {\n    // Fade out instructions over time\n    if (this.instructionAlpha > 0) {\n      this.instructionAlpha -= deltaTime / 1000;\n      this.instructionAlpha = Math.max(0, this.instructionAlpha);\n    }\n  }\n\n  checkLevelCompletion() {\n    // Check if all difficulties completed\n    if (this.currentDifficulty === 'hard' && \n        this.correctCount >= this.config.education.difficulty.hard.targetCount) {\n      this.completeLevel();\n    }\n  }\n\n  render() {\n    if (!this.running) return;\n    \n    // Clear and draw background\n    this.drawBackground();\n    \n    // Draw bubble system\n    if (this.bubbleSystem) {\n      this.bubbleSystem.draw(this.ctx);\n    }\n    \n    // Draw UI elements\n    this.drawUI();\n    \n    // Draw instructions if showing\n    if (this.showingInstructions) {\n      this.drawInstructions();\n    }\n    \n    // Draw celebration effects\n    if (this.celebrationTime > 0) {\n      this.drawCelebration();\n    }\n    \n    // Draw debug info if needed\n    if (this.showDebugInfo) {\n      this.drawDebugInfo();\n    }\n  }\n\n  drawBackground() {\n    // Animated gradient background\n    this.ctx.fillStyle = this.backgroundGradient;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Subtle animated patterns\n    this.ctx.save();\n    this.ctx.globalAlpha = 0.1;\n    \n    // Draw floating circles\n    for (let i = 0; i < 5; i++) {\n      const x = (i * 0.2 + 0.1) * this.canvas.width;\n      const y = this.canvas.height * 0.5 + Math.sin(this.backgroundPhase + i) * 50;\n      const radius = 20 + Math.sin(this.backgroundPhase * 0.5 + i) * 10;\n      \n      this.ctx.fillStyle = this.config.visuals.colors.bubbleBase;\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, radius, 0, Math.PI * 2);\n      this.ctx.fill();\n    }\n    \n    this.ctx.restore();\n  }\n\n  drawUI() {\n    this.ctx.save();\n    \n    // Draw target letter display\n    this.drawTargetLetter();\n    \n    // Draw progress bar\n    this.drawProgress();\n    \n    // Draw timer\n    this.drawTimer();\n    \n    // Draw score and streak\n    this.drawScoreInfo();\n    \n    this.ctx.restore();\n  }\n\n  drawTargetLetter() {\n    const centerX = this.canvas.width / 2;\n    const y = 80;\n    \n    // Draw background for target letter\n    this.ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    this.ctx.fillRect(centerX - 60, y - 40, 120, 80);\n    \n    // Draw border\n    this.ctx.strokeStyle = this.config.visuals.colors.correctGlow;\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeRect(centerX - 60, y - 40, 120, 80);\n    \n    // Draw \"Find:\" label\n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 16px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText('Find:', centerX, y - 20);\n    \n    // Draw target letter with pulsing effect\n    const pulseScale = 1 + Math.sin(this.targetLetterPulse) * 0.1;\n    this.ctx.save();\n    this.ctx.scale(pulseScale, pulseScale);\n    \n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 32px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(this.targetLetter, centerX / pulseScale, (y + 15) / pulseScale);\n    \n    this.ctx.restore();\n  }\n\n  drawProgress() {\n    const targetCount = this.config.education.difficulty[this.currentDifficulty].targetCount;\n    const progress = this.correctCount / targetCount;\n    \n    const barWidth = 200;\n    const barHeight = 20;\n    const x = this.canvas.width / 2 - barWidth / 2;\n    const y = 150;\n    \n    // Draw background\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n    this.ctx.fillRect(x, y, barWidth, barHeight);\n    \n    // Draw progress\n    this.ctx.fillStyle = this.config.visuals.colors.correctGlow;\n    this.ctx.fillRect(x, y, barWidth * progress, barHeight);\n    \n    // Draw text\n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 14px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(`${this.correctCount}/${targetCount} - ${this.currentDifficulty.toUpperCase()}`, \n                      this.canvas.width / 2, y + 35);\n  }\n\n  drawTimer() {\n    const minutes = Math.floor(this.timeRemaining / 60000);\n    const seconds = Math.floor((this.timeRemaining % 60000) / 1000);\n    const timeString = `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    \n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'right';\n    this.ctx.fillText(timeString, this.canvas.width - 20, 30);\n  }\n\n  drawScoreInfo() {\n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 16px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText(`Score: ${this.score}`, 20, 30);\n    \n    if (this.streak > 0) {\n      this.ctx.fillStyle = this.config.visuals.colors.correctGlow;\n      this.ctx.fillText(`Streak: ${this.streak}`, 20, 55);\n    }\n  }\n\n  drawInstructions() {\n    if (this.instructionAlpha <= 0) return;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = this.instructionAlpha;\n    \n    // Draw semi-transparent background\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Draw instructions\n    this.ctx.fillStyle = 'white';\n    this.ctx.font = 'bold 24px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText('Phonics Bubbles', this.canvas.width / 2, this.canvas.height / 2 - 80);\n    \n    this.ctx.font = '18px Arial';\n    this.ctx.fillText('Pop the bubbles with the target letter!', this.canvas.width / 2, this.canvas.height / 2 - 40);\n    this.ctx.fillText('Listen to the letter sounds and learn!', this.canvas.width / 2, this.canvas.height / 2 - 10);\n    this.ctx.fillText('Click or tap to start...', this.canvas.width / 2, this.canvas.height / 2 + 40);\n    \n    this.ctx.restore();\n  }\n\n  drawCelebration() {\n    const intensity = this.celebrationTime / this.config.gameplay.celebrationDuration;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = intensity * 0.5;\n    \n    // Draw celebration glow\n    const gradient = this.ctx.createRadialGradient(\n      this.canvas.width / 2, this.canvas.height / 2, 0,\n      this.canvas.width / 2, this.canvas.height / 2, 200\n    );\n    gradient.addColorStop(0, this.config.visuals.colors.correctGlow);\n    gradient.addColorStop(1, 'transparent');\n    \n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    this.ctx.restore();\n  }\n\n  drawDebugInfo() {\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    this.ctx.fillRect(10, this.canvas.height - 100, 200, 90);\n    \n    this.ctx.fillStyle = 'white';\n    this.ctx.font = '12px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText(`FPS: ${this.avgFPS}`, 15, this.canvas.height - 80);\n    this.ctx.fillText(`Bubbles: ${this.bubbleSystem ? this.bubbleSystem.activeBubbles : 0}`, 15, this.canvas.height - 65);\n    this.ctx.fillText(`Target: ${this.targetLetter}`, 15, this.canvas.height - 50);\n    this.ctx.fillText(`Difficulty: ${this.currentDifficulty}`, 15, this.canvas.height - 35);\n    this.ctx.fillText(`Progress: ${this.correctCount}`, 15, this.canvas.height - 20);\n  }\n\n  // Handle user input to start game\n  handleInput() {\n    if (this.showingInstructions) {\n      this.hideInstructions();\n    }\n  }\n\n  pause() {\n    super.pause();\n    if (this.bubbleSystem) {\n      this.bubbleSystem.removeEventListeners();\n    }\n  }\n\n  resume() {\n    super.resume();\n    if (this.bubbleSystem) {\n      this.bubbleSystem.setupEventListeners();\n    }\n  }\n\n  reset() {\n    super.reset();\n    \n    // Reset game state\n    this.currentDifficulty = 'easy';\n    this.correctCount = 0;\n    this.totalAttempts = 0;\n    this.streak = 0;\n    this.timeRemaining = this.config.education.progression.levelDuration;\n    this.celebrationTime = 0;\n    \n    // Reset bubble system\n    if (this.bubbleSystem) {\n      this.bubbleSystem.reset();\n      this.bubbleSystem.setDifficulty(this.currentDifficulty);\n    }\n    \n    // Reset UI\n    this.showingInstructions = true;\n    this.instructionAlpha = 1.0;\n    \n    // Set new target\n    this.setNewTarget();\n  }\n\n  cleanup() {\n    super.cleanup();\n    \n    if (this.bubbleSystem) {\n      this.bubbleSystem.cleanup();\n    }\n  }\n\n  // Getters for level status\n  get accuracy() {\n    return this.correctCount / Math.max(1, this.totalAttempts);\n  }\n\n  get progress() {\n    const targetCount = this.config.education.difficulty[this.currentDifficulty].targetCount;\n    return this.correctCount / targetCount;\n  }\n\n  get levelInfo() {\n    return {\n      name: 'Phonics Bubbles',\n      difficulty: this.currentDifficulty,\n      progress: this.progress,\n      accuracy: this.accuracy,\n      score: this.score,\n      streak: this.streak\n    };\n  }\n}","import { ProgressManager } from '../../game/managers/progressManager.js';\n\n// Level selection menu UI\nexport class LevelMenu {\n  constructor(containerId, onSelect) {\n    this.container = document.getElementById(containerId);\n    this.onSelect = onSelect;\n    this.progressManager = new ProgressManager();\n    \n    // Define available levels with descriptions\n    this.levels = [\n      { \n        name: 'colors', \n        label: 'Colors Level', \n        description: 'Match the target color from memory',\n        difficulty: '★☆☆'\n      },\n      { \n        name: 'shapes', \n        label: 'Shapes Level', \n        description: 'Target shapes in sequence',\n        difficulty: '★★☆'\n      },\n      { \n        name: 'alphabet', \n        label: 'Alphabet Level', \n        description: 'A through Z in order',\n        difficulty: '★★☆'\n      },\n      { \n        name: 'numbers', \n        label: 'Numbers Level', \n        description: '1 through 10 in order',\n        difficulty: '★★☆'\n      },\n      { \n        name: 'clcase', \n        label: 'Case Level', \n        description: 'a through z in order',\n        difficulty: '★★★'\n      },\n      { \n        name: 'phonics', \n        label: 'Phonics Bubbles', \n        description: 'Pop bubbles and learn letter sounds! 🫧',\n        difficulty: '★☆☆'\n      }\n    ];\n  }\n\n  show() {\n    const progress = this.progressManager.getProgress();\n    \n    // Build menu markup with progress indicators\n    const html = [\n      `<div class=\"level-menu\">`,\n      `<h2>Select Level</h2>`,\n      `<div class=\"progress-summary\">`,\n      `<p>Completion: ${this.progressManager.getCompletionPercentage()}%</p>`,\n      `<p>Total Score: ${progress.totalScore}</p>`,\n      `</div>`,\n      `<div class=\"level-grid\">`,\n      this.levels.map(level => {\n        const isUnlocked = this.progressManager.isLevelUnlocked(level.name);\n        const isCompleted = this.progressManager.isLevelCompleted(level.name);\n        const score = this.progressManager.getLevelScore(level.name);\n        \n        const statusClass = isCompleted ? 'completed' : (isUnlocked ? 'unlocked' : 'locked');\n        const statusIcon = isCompleted ? '✓' : (isUnlocked ? '●' : '🔒');\n        \n        return `\n          <div class=\"level-card ${statusClass}\" ${isUnlocked ? `data-level=\"${level.name}\"` : ''}>\n            <div class=\"level-status\">${statusIcon}</div>\n            <h3>${level.label}</h3>\n            <p class=\"level-description\">${level.description}</p>\n            <p class=\"level-difficulty\">Difficulty: ${level.difficulty}</p>\n            ${isCompleted ? `<p class=\"level-score\">Best: ${score}</p>` : ''}\n            ${!isUnlocked ? '<p class=\"level-locked\">Complete previous level to unlock</p>' : ''}\n          </div>\n        `;\n      }).join(''),\n      `</div>`,\n      `<div class=\"menu-actions\">`,\n      `<button class=\"back-button\">Back</button>`,\n      `<button class=\"reset-button\">Reset Progress</button>`,\n      `</div>`,\n      `</div>`\n    ].join('');\n    \n    this.container.innerHTML = html;\n    this.container.style.display = 'flex';\n    \n    // Attach event listeners\n    this.levels.forEach(level => {\n      const card = this.container.querySelector(`[data-level=\"${level.name}\"]`);\n      if (card) {\n        card.addEventListener('click', () => this.selectLevel(level.name));\n        card.style.cursor = 'pointer';\n      }\n    });\n    \n    const backBtn = this.container.querySelector('.back-button');\n    if (backBtn) backBtn.addEventListener('click', () => this.back());\n    \n    const resetBtn = this.container.querySelector('.reset-button');\n    if (resetBtn) resetBtn.addEventListener('click', () => this.resetProgress());\n  }\n\n  selectLevel(name) {\n    if (this.progressManager.isLevelUnlocked(name) && typeof this.onSelect === 'function') {\n      this.container.style.display = 'none';\n      this.onSelect(name);\n    }\n  }\n\n  resetProgress() {\n    if (confirm('Are you sure you want to reset all progress? This cannot be undone.')) {\n      this.progressManager.resetProgress();\n      this.show(); // Refresh the menu\n    }\n  }\n\n  back() {\n    // Reload page or reset to welcome screen\n    window.location.reload();\n  }\n}\n","// InputHandler: unified pointer and keyboard input management\nexport class InputHandler {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.pointerDownListeners = [];\n    this.pointerUpListeners = [];\n    this.pointerMoveListeners = [];\n    this.keyDownListeners = [];\n\n    // Bind methods to preserve 'this' context\n    this._boundHandlePointerDown = (e) => this._handlePointerDown(e);\n    this._boundHandlePointerUp = (e) => this._handlePointerUp(e);\n    this._boundHandlePointerMove = (e) => this._handlePointerMove(e);\n    this._boundHandleKeyDown = (e) => this._handleKeyDown(e);\n\n    // Bind events\n    canvas.addEventListener('pointerdown', this._boundHandlePointerDown);\n    canvas.addEventListener('pointerup', this._boundHandlePointerUp);\n    canvas.addEventListener('pointermove', this._boundHandlePointerMove);\n    window.addEventListener('keydown', this._boundHandleKeyDown);\n  }\n\n  _handlePointerDown(event) {\n    const pos = this._getPointerPosition(event);\n    this.pointerDownListeners.forEach(cb => cb(pos, event));\n  }\n\n  _handlePointerUp(event) {\n    const pos = this._getPointerPosition(event);\n    this.pointerUpListeners.forEach(cb => cb(pos, event));\n  }\n\n  _handlePointerMove(event) {\n    const pos = this._getPointerPosition(event);\n    this.pointerMoveListeners.forEach(cb => cb(pos, event));\n  }\n\n  _handleKeyDown(event) {\n    this.keyDownListeners.forEach(cb => cb(event.code, event));\n  }\n\n  _getPointerPosition(event) {\n    if (!this.canvas) {\n      console.warn('Canvas not available for pointer position calculation');\n      return { x: 0, y: 0 };\n    }\n    \n    const rect = this.canvas.getBoundingClientRect();\n    if (!rect) {\n      console.warn('Could not get canvas bounding rect');\n      return { x: 0, y: 0 };\n    }\n    \n    // Prevent division by zero\n    const scaleX = rect.width > 0 ? this.canvas.width / rect.width : 1;\n    const scaleY = rect.height > 0 ? this.canvas.height / rect.height : 1;\n    \n    return {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n  }\n\n  onPointerDown(callback) {\n    this.pointerDownListeners.push(callback);\n  }\n\n  onPointerUp(callback) {\n    this.pointerUpListeners.push(callback);\n  }\n\n  onPointerMove(callback) {\n    this.pointerMoveListeners.push(callback);\n  }\n\n  onKeyDown(callback) {\n    this.keyDownListeners.push(callback);\n  }\n\n  // Cleanup method to prevent memory leaks\n  destroy() {\n    // Always attempt to remove event listeners, even if canvas is null\n    // Store the original canvas reference before clearing\n    const originalCanvas = this.canvas;\n    \n    if (originalCanvas) {\n      originalCanvas.removeEventListener('pointerdown', this._boundHandlePointerDown);\n      originalCanvas.removeEventListener('pointerup', this._boundHandlePointerUp);\n      originalCanvas.removeEventListener('pointermove', this._boundHandlePointerMove);\n    }\n    \n    // Always remove window event listener\n    window.removeEventListener('keydown', this._boundHandleKeyDown);\n    \n    // Clear all listeners arrays to prevent memory leaks\n    this.pointerDownListeners.length = 0;\n    this.pointerUpListeners.length = 0;\n    this.pointerMoveListeners.length = 0;\n    this.keyDownListeners.length = 0;\n    \n    // Clear bound function references\n    this._boundHandlePointerDown = null;\n    this._boundHandlePointerUp = null;\n    this._boundHandlePointerMove = null;\n    this._boundHandleKeyDown = null;\n    \n    // Clear canvas reference\n    this.canvas = null;\n  }\n}\n","import { GAME_CONFIG } from './constants.js';\n\n/**\n * Detects whether to use DEFAULT or QBOARD mode based on screen resolution.\n * @returns {'DEFAULT'|'QBOARD'}\n */\nexport function detectDisplayMode() {\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n  return (width > 2560 && height > 1440) ? 'QBOARD' : 'DEFAULT';\n}\n\n/**\n * Returns display-specific settings from GAME_CONFIG.\n */\nexport function getDisplaySettings() {\n  const mode = detectDisplayMode();\n  return {\n    fontSizes: GAME_CONFIG.FONT_SIZES[mode],\n    maxParticles: GAME_CONFIG.MAX_PARTICLES[mode],\n    maxExplosions: GAME_CONFIG.MAX_EXPLOSIONS[mode],\n    motherRadius: GAME_CONFIG.MOTHER_RADIUS[mode],\n    collisionFrequency: GAME_CONFIG.COLLISION_CHECK_FREQUENCY[mode]\n  };\n}\n","/**\n * Welcome Screen with Animated Background\n * As specified in SuperStudentHTML.md\n */\nexport class WelcomeScreen {\n  constructor(canvas, ctx, resourceManager) {\n    this.canvas = canvas;\n    this.bgCanvas = document.createElement('canvas');\n    this.bgCanvas.className = 'welcome-bg-canvas';\n    this.bgCtx = this.bgCanvas.getContext('2d');\n    this.syncCanvasSize();\n    this.resourceManager = resourceManager;\n    this.particles = [];\n    this.animationId = null;\n    this.isVisible = false;\n    \n    // Animation properties\n    this.time = 0;\n    this.maxParticles = 150;\n    this.particleSpeed = 0.5;\n    \n    // Callbacks\n    this.onStartGame = null;\n    this.onShowOptions = null;\n    \n    this.particleColors = ['#ff595e','#ffca3a','#8ac926','#1982c4','#6a4c93'];\n    \n    this.setupParticles();\n    this.setupUI();\n\n    // Keep background canvas in sync on resize\n    window.addEventListener('resize', () => this.onResize());\n  }\n  \n  setupParticles() {\n    // Create animated background particles (color confetti style)\n    for (let i = 0; i < this.maxParticles; i++) {\n      this.particles.push({\n        x: Math.random() * this.bgCanvas.width,\n        y: Math.random() * this.bgCanvas.height,\n        size: Math.random() * 6 + 2,\n        speed: Math.random() * this.particleSpeed + 0.3,\n        opacity: Math.random() * 0.9 + 0.1,\n        color: this.particleColors[Math.floor(Math.random()*this.particleColors.length)]\n      });\n    }\n  }\n  \n  setupUI() {\n    // Create DOM elements for welcome screen UI\n    this.createWelcomeScreenHTML();\n    this.attachEventListeners();\n  }\n  \n  createWelcomeScreenHTML() {\n    // Remove existing welcome screen if present\n    const existing = document.getElementById('welcome-screen');\n    if (existing) existing.remove();\n\n    const welcomeDiv = document.createElement('div');\n    welcomeDiv.id = 'welcome-screen';\n    welcomeDiv.className = 'welcome-screen-overlay';\n\n    // Insert background canvas first\n    welcomeDiv.appendChild(this.bgCanvas);\n\n    welcomeDiv.innerHTML += `\n      <div class=\"welcome-content\">\n        <h1 class=\"game-title\">Super Student</h1>\n        <div class=\"display-size-section\">\n          <p class=\"choose-text\">Choose Display Size</p>\n          <div class=\"display-btn-group\">\n            <button class=\"display-btn default\" data-mode=\"DEFAULT\">Default</button>\n            <button class=\"display-btn qboard\" data-mode=\"QBOARD\">QBoard</button>\n          </div>\n          <p class=\"mode-selected-text\" style=\"display:none;\"></p>\n        </div>\n        <footer class=\"collaboration-footer\">\n          <p>In collaboration with <span class=\"highlight\">SANGSOM Kindergarten</span></p>\n        </footer>\n      </div>`;\n\n    document.body.appendChild(welcomeDiv);\n    this.addWelcomeScreenCSS();\n  }\n  \n  addWelcomeScreenCSS() {\n    const style = document.createElement('style');\n    style.textContent = `\n      .welcome-screen-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        background: rgba(0,0,0,0.8);\n        backdrop-filter: blur(2px);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 1000;\n        opacity: 0;\n        transition: opacity 0.5s ease-in-out;\n      }\n      .welcome-screen-overlay.visible { opacity:1; }\n      .welcome-content { text-align:center; color:white; max-width:90vw; }\n      .game-title { font-size:10vw; margin:0 0 40px 0; color:#ffd700; font-weight:900; text-shadow:3px 3px 8px rgba(0,0,0,0.6); }\n      .choose-text { font-size:1.2rem; margin-bottom:16px; letter-spacing:1px; }\n      .display-btn-group { display:flex; gap:40px; justify-content:center; flex-wrap:wrap; margin-bottom:30px; }\n      .display-btn {\n        width:200px; height:60px; font-size:1.1rem; font-weight:600; background:transparent; border:3px solid currentColor; color:white; cursor:pointer; transition:transform 0.2s, opacity 0.3s;\n      }\n      .display-btn.default { color:#00bfff; }\n      .display-btn.qboard { color:#ff4080; }\n      .display-btn:hover { transform:translateY(-4px); }\n      .display-btn.selected { opacity:0.6; cursor:default; }\n      .collaboration-footer { position:absolute; bottom:40px; left:50%; transform:translateX(-50%); font-size:2vw; }\n      .highlight { color:#ffd700; }\n      @media(max-width:768px){ .game-title { font-size:12vw; } .display-btn { width:160px; height:50px; } .collaboration-footer{ font-size:4vw;} }\n      /* Background canvas */\n      .welcome-bg-canvas { position:absolute; top:0; left:0; width:100%; height:100%; z-index:-1; }\n    `;\n    document.head.appendChild(style);\n  }\n  \n  attachEventListeners() {\n    const updateSelection = (button) => {\n      document.querySelectorAll('.display-btn').forEach(btn => btn.classList.remove('selected'));\n      button.classList.add('selected');\n      const mode = button.dataset.mode;\n      this.resourceManager.setDisplayMode(mode);\n      const textEl = document.querySelector('.mode-selected-text');\n      if (textEl){\n        textEl.style.display='block';\n        textEl.textContent=`Display mode set to ${mode}. Loading...`;\n      }\n      setTimeout(()=>{ if(this.onStartGame){ this.hide(); this.onStartGame(); } }, 1200);\n    };\n\n    setTimeout(()=>{\n      document.querySelectorAll('.display-btn').forEach(btn => {\n        btn.addEventListener('click',()=> updateSelection(btn));\n      });\n    },100);\n  }\n  \n  show() {\n    this.isVisible = true;\n    this.startAnimation();\n    \n    setTimeout(() => {\n      const welcomeScreen = document.getElementById('welcome-screen');\n      if (welcomeScreen) {\n        welcomeScreen.classList.add('visible');\n      }\n    }, 100);\n  }\n  \n  hide() {\n    this.isVisible = false;\n    this.stopAnimation();\n    \n    const welcomeScreen = document.getElementById('welcome-screen');\n    if (welcomeScreen) {\n      welcomeScreen.classList.remove('visible');\n      setTimeout(() => {\n        welcomeScreen.remove();\n      }, 500);\n    }\n  }\n  \n  startAnimation() {\n    if (this.animationId) return;\n    \n    const animate = () => {\n      if (!this.isVisible) return;\n      \n      this.updateAnimatedBackground();\n      this.renderAnimatedBackground();\n      \n      this.animationId = requestAnimationFrame(animate);\n    };\n    \n    animate();\n  }\n  \n  stopAnimation() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n  }\n  \n  updateAnimatedBackground() {\n    this.time += 0.01;\n    \n    this.particles.forEach(particle => {\n      particle.y -= particle.speed;\n      \n      if (particle.y < -10) {\n        particle.y = this.bgCanvas.height + 10;\n        particle.x = Math.random() * this.bgCanvas.width;\n      }\n      \n      particle.opacity = 0.5 + Math.sin(this.time * 0.1) * 0.3;\n    });\n  }\n  \n  renderAnimatedBackground() {\n    const ctx = this.bgCtx;\n    ctx.fillStyle = 'rgba(0,0,0,0.9)';\n    ctx.fillRect(0,0,this.bgCanvas.width,this.bgCanvas.height);\n    this.particles.forEach(p=>{\n      ctx.save();\n      ctx.globalAlpha = p.opacity;\n      ctx.fillStyle = p.color;\n      ctx.beginPath();\n      ctx.arc(p.x,p.y,p.size,0,Math.PI*2);\n      ctx.fill();\n      ctx.restore();\n    });\n  }\n  \n  onResize() {\n    this.syncCanvasSize();\n    // Re-position particles within new bounds\n    this.particles.forEach(particle => {\n      if (particle.x > this.bgCanvas.width) {\n        particle.x = Math.random() * this.bgCanvas.width;\n      }\n      if (particle.y > this.bgCanvas.height) {\n        particle.y = Math.random() * this.bgCanvas.height;\n      }\n    });\n  }\n  \n  syncCanvasSize() {\n    this.bgCanvas.width = window.innerWidth;\n    this.bgCanvas.height = window.innerHeight;\n  }\n  \n  setCallbacks(startGameCallback, showOptionsCallback) {\n    this.onStartGame = startGameCallback;\n    this.onShowOptions = showOptionsCallback;\n  }\n} ","// Error Tracker Utility\n// Lightweight helper to capture global JavaScript errors and unhandled promise\n// rejections at runtime.  It logs them to the console (or custom logger) and\n// can optionally display a small overlay at the top of the page so testers\n// immediately see when something went wrong without opening DevTools.\n\nexport function initializeErrorTracker(options = {}) {\n  const {\n    overlay = true,\n    logger = console.error\n  } = options;\n\n  const errorLog = [];\n  let overlayEl = null;\n\n  function appendOverlay(line) {\n    if (!overlay) return;\n    if (!overlayEl) {\n      overlayEl = document.createElement('div');\n      overlayEl.id = 'error-overlay';\n      overlayEl.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        z-index: 99999;\n        background: rgba(200, 0, 0, 0.9);\n        color: #fff;\n        font: 12px/1.4 monospace;\n        max-height: 200px;\n        overflow-y: auto;\n        padding: 6px 8px;\n        white-space: pre-wrap;`;\n      document.body.appendChild(overlayEl);\n    }\n    const div = document.createElement('div');\n    div.textContent = line;\n    overlayEl.appendChild(div);\n  }\n\n  function record(type, message, source, lineno, colno, error) {\n    const entry = {\n      type,\n      message,\n      source,\n      lineno,\n      colno,\n      stack: error && error.stack,\n      timestamp: Date.now()\n    };\n    errorLog.push(entry);\n\n    const time = new Date(entry.timestamp).toLocaleTimeString();\n    const line = `[${time}] ${type}: ${message}${source ? ` (${source}:${lineno}:${colno})` : ''}`;\n    logger(line);\n    if (error && error.stack) logger(error.stack);\n    appendOverlay(line);\n  }\n\n  window.addEventListener('error', (e) => {\n    record('Error', e.message, e.filename, e.lineno, e.colno, e.error);\n  });\n\n  window.addEventListener('unhandledrejection', (e) => {\n    record('Unhandled Promise', e.reason?.message || String(e.reason), '', 0, 0, e.reason);\n  });\n\n  return {\n    getErrors() {\n      return errorLog.slice();\n    },\n    clear() {\n      errorLog.length = 0;\n      if (overlayEl) overlayEl.innerHTML = '';\n    }\n  };\n} ","import ResourceManager from './resources/resourceManager.js';\nimport ParticleManager from './graphics/particleSystem.js';\nimport SoundManager from './audio/soundManager.js';\nimport { Renderer } from './engine/renderer.js';\nimport { GameLoop } from './engine/gameLoop.js';\nimport HudManager from '../game/managers/hudManager.js';\nimport CheckpointManager from '../game/managers/checkpointManager.js';\nimport FlamethrowerManager from '../game/managers/flamethrowerManager.js';\nimport CenterPieceManager from '../game/managers/centerPieceManager.js';\nimport MultiTouchManager from '../game/managers/multiTouchManager.js';\nimport GlassShatterManager from '../game/managers/glassShatterManager.js';\nimport { ProgressManager } from '../game/managers/progressManager.js';\nimport ColorsLevel from '../game/levels/colorsLevel.js';\nimport ShapesLevel from '../game/levels/shapesLevel.js';\nimport AlphabetLevel from '../game/levels/alphabetLevel.js';\nimport NumbersLevel from '../game/levels/numbersLevel.js';\nimport ClCaseLevel from '../game/levels/clCaseLevel.js';\nimport { PhonicsLevel } from '../game/levels/phonics/PhonicsLevel.js';\nimport { LevelMenu } from '../ui/components/levelMenu.js';\nimport { InputHandler } from '../inputHandler.js';\nimport { getDisplaySettings } from '../config/displayModes.js';\nimport { getAudioConfig } from './audio/audioConfig.js';\nimport { GAME_CONFIG } from '../config/constants.js';\nimport { WelcomeScreen } from '../ui/components/welcomeScreen.js';\nimport { initializeErrorTracker } from '../utils/errorTracker.js';\n\nlet canvas;\nlet renderer;\nlet ctx;\n\n// Current display-specific settings\nlet displaySettings;\nlet resourceManager;\nlet particleManager;\nlet soundManager;\nlet progressManager;\nlet managers = {};\nlet currentLevel = null;\nlet currentLevelName = '';\nlet gameState = 'menu'; // menu, playing, paused, gameOver\nlet lastTime = 0;\nlet gameLoop;\nlet welcomeScreen;\nlet levelCompletionTimer = null; // Track level completion timer\n\nfunction resizeCanvas() {\n  renderer.setupCanvas();\n  // Update managers and level with new canvas size\n  if (managers.hud) managers.hud.resize(renderer.canvas);\n  if (managers.centerPiece) managers.centerPiece.resize(renderer.canvas);\n  if (currentLevel && typeof currentLevel.resize === 'function') {\n    currentLevel.resize(renderer.canvas);\n  }\n}\n\n// Initialize and show welcome screen with animated background\nfunction initializeWelcomeScreen() {\n  console.log('🏠 Initializing WelcomeScreen class with animated background...');\n  \n  // Create WelcomeScreen instance as specified in SuperStudentHTML.md\n  welcomeScreen = new WelcomeScreen(canvas, ctx, resourceManager);\n  welcomeScreen.setCallbacks(showLevelMenu, showOptions);\n  welcomeScreen.show();\n  \n  console.log('✅ WelcomeScreen initialized with animated background!');\n}\n\n// Show level selection menu\nfunction showLevelMenu() {\n  console.log('🎮 Showing level menu...');\n  \n  // Hide the welcome screen first\n  if (welcomeScreen) {\n    welcomeScreen.hide();\n  }\n  \n  // Create a temporary container for level menu\n  const menuContainer = document.createElement('div');\n  menuContainer.id = 'level-menu-container';\n  menuContainer.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.9);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n    color: white;\n  `;\n  document.body.appendChild(menuContainer);\n  \n  const menu = new LevelMenu('level-menu-container', startLevel);\n  menu.show();\n  gameState = 'menu';\n}\n\n// Start the selected level\nfunction startLevel(levelName) {\n  console.log(`🎯 Starting level: ${levelName}`);\n  \n  // Clear any pending level completion timer\n  if (levelCompletionTimer) {\n    clearTimeout(levelCompletionTimer);\n    levelCompletionTimer = null;\n  }\n  \n  // Remove level menu container\n  const menuContainer = document.getElementById('level-menu-container');\n  if (menuContainer) {\n    menuContainer.remove();\n  }\n  \n  gameState = 'playing';\n  currentLevelName = levelName;\n  initializeManagers();\n  \n  // Define common helpers for levels\n  const helpers = {\n    createExplosion: (x, y, color, intensity) => {\n      const count = Math.floor(20 * intensity);\n      for (let i = 0; i < count; i++) {\n        const angle = Math.random() * Math.PI * 2;\n        const speed = 2 + Math.random() * 4;\n        const dx = Math.cos(angle) * speed;\n        const dy = Math.sin(angle) * speed;\n        const size = 2 + Math.random() * 3;\n        const duration = 500 + Math.random() * 1000;\n        particleManager.createParticle(x, y, color, size, dx, dy, duration);\n      }\n    },\n    applyExplosionEffect: (x, y, radius, force) => {\n      managers.glassShatter.triggerShatter(x, y, force * 0.5);\n    },\n    onLevelComplete: (score) => {\n      handleLevelComplete(levelName, score);\n    }\n  };\n  \n  lastTime = performance.now();\n  \n  // Choose level class based on name\n  switch (levelName) {\n    case 'colors':\n      currentLevel = new ColorsLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'shapes':\n      currentLevel = new ShapesLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'alphabet':\n      currentLevel = new AlphabetLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'numbers':\n      currentLevel = new NumbersLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'clcase':\n      currentLevel = new ClCaseLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'phonics':\n      currentLevel = new PhonicsLevel(canvas, ctx, managers, helpers);\n      break;\n    default:\n      currentLevel = new ColorsLevel(canvas, ctx, managers, helpers);\n  }\n  \n  currentLevel.start();\n  // GameLoop is already running, no need to call loop()\n}\n\n// Show options menu\nfunction showOptions() {\n  const modal = document.getElementById('settings-modal');\n  modal.innerHTML = `\n    <div class=\"modal-background\"></div>\n    <div class=\"modal-content\">\n      <h2>Options</h2>\n      <label>Display Mode:</label>\n      <select id=\"display-mode-select\">\n        <option value=\"DEFAULT\">Default</option>\n        <option value=\"QBOARD\">QBoard</option>\n      </select>\n      <label>Volume:</label>\n      <input type=\"range\" id=\"volume-range\" min=\"0\" max=\"1\" step=\"0.01\">\n      <button id=\"save-options\">Save</button>\n      <button id=\"close-options\">Close</button>\n    </div>\n  `;\n  modal.style.display = 'block';\n\n  const select = document.getElementById('display-mode-select');\n  select.value = resourceManager.getDisplayMode();\n  document.getElementById('volume-range').value = soundManager.volume;\n\n  document.getElementById('save-options').addEventListener('click', () => {\n    resourceManager.setDisplayMode(select.value);\n    soundManager.setGlobalVolume(parseFloat(document.getElementById('volume-range').value));\n    modal.style.display = 'none';\n  });\n  document.getElementById('close-options').addEventListener('click', () => {\n    modal.style.display = 'none';\n  });\n}\n\nfunction initializeManagers() {\n  managers.hud = new HudManager(canvas, ctx);\n  managers.checkpoint = new CheckpointManager(canvas, ctx);\n  managers.flamethrower = new FlamethrowerManager(canvas, ctx, particleManager);\n  managers.centerPiece = new CenterPieceManager(canvas, ctx, particleManager);\n  managers.multiTouch = new MultiTouchManager(canvas);\n  managers.glassShatter = new GlassShatterManager(canvas, ctx, particleManager);\n  managers.particleManager = particleManager;\n  managers.sound = soundManager;\n}\n\nfunction setupGlobalEventListeners() {\n  // Keyboard controls\n  window.addEventListener('keydown', (e) => {\n    switch (e.code) {\n      case 'Space':\n        e.preventDefault();\n        if (gameState === 'playing') {\n          togglePause();\n        }\n        break;\n      case 'KeyR':\n        if (gameState === 'gameOver' || gameState === 'paused') {\n          restartGame();\n        }\n        break;\n      case 'Escape':\n        if (gameState === 'playing') {\n          pauseGame();\n        } else if (gameState === 'paused') {\n          resumeGame();\n        }\n        break;\n    }\n  });\n  \n  // Prevent right-click context menu\n  canvas.addEventListener('contextmenu', (e) => e.preventDefault());\n}\n\nfunction togglePause() {\n  if (gameState === 'playing') {\n    pauseGame();\n  } else if (gameState === 'paused') {\n    resumeGame();\n  }\n}\n\nfunction pauseGame() {\n  if (gameState === 'playing') {\n    gameState = 'paused';\n    if (currentLevel) {\n      currentLevel.pause();\n    }\n    managers.checkpoint.showCheckpoint('Game Paused');\n  }\n}\n\nfunction resumeGame() {\n  if (gameState === 'paused') {\n    gameState = 'playing';\n    if (currentLevel) {\n      currentLevel.resume();\n    }\n  }\n}\n\nfunction restartGame() {\n  gameState = 'playing';\n  if (currentLevel) {\n    currentLevel.reset();\n    currentLevel.start();\n  }\n}\n\nfunction cleanupGame() {\n  // Cleanup current level\n  if (currentLevel && typeof currentLevel.destroy === 'function') {\n    currentLevel.destroy();\n  }\n  \n  // Cleanup managers\n  if (managers.input && typeof managers.input.destroy === 'function') {\n    managers.input.destroy();\n  }\n  if (managers.multiTouch && typeof managers.multiTouch.destroy === 'function') {\n    managers.multiTouch.destroy();\n  }\n}\n\nfunction handleLevelComplete(levelName, score) {\n  progressManager.completeLevel(levelName, score);\n  gameState = 'completed';\n  \n  // Clear any existing completion timer\n  if (levelCompletionTimer) {\n    clearTimeout(levelCompletionTimer);\n    levelCompletionTimer = null;\n  }\n  \n  // Show completion celebration\n  managers.checkpoint.showCheckpoint(`Level Complete!<br>Score: ${score}<br>Next level unlocked!`);\n  \n  levelCompletionTimer = setTimeout(() => {\n    // Only show menu if still in completed state\n    if (gameState === 'completed') {\n      showLevelMenu();\n    }\n    levelCompletionTimer = null;\n  }, 3000);\n}\n\nwindow.addEventListener('resize', resizeCanvas);\n\n// Game loop functions\nfunction update(deltaTime) {\n  if (gameState === 'playing' && currentLevel) {\n    currentLevel.update(deltaTime);\n  }\n  \n  // Update managers\n  if (managers.centerPiece) managers.centerPiece.update(deltaTime);\n  if (managers.flamethrower) managers.flamethrower.update(deltaTime);\n  if (managers.glassShatter) managers.glassShatter.update(deltaTime);\n  if (managers.hud) managers.hud.update(deltaTime);\n  if (managers.checkpoint) managers.checkpoint.update(deltaTime);\n}\n\nfunction render() {\n  renderer.clear();\n  \n  if (gameState === 'playing' && currentLevel) {\n    currentLevel.render();\n  }\n  \n  // Render managers\n  if (managers.centerPiece) managers.centerPiece.draw(ctx);\n  if (managers.particleManager) managers.particleManager.updateAndDraw(ctx, gameLoop ? gameLoop.lastDeltaTime : 16);\n  if (managers.flamethrower) managers.flamethrower.draw(ctx);\n  if (managers.glassShatter) managers.glassShatter.draw(ctx);\n  if (managers.hud) managers.hud.draw(ctx);\n  if (managers.checkpoint) managers.checkpoint.draw(ctx);\n}\n\nwindow.onload = async () => {\n  console.log('🎮 Super Student: Starting initialization...');\n  \n  try {\n    // Initialize canvas and renderer first\n    canvas = document.getElementById('game-canvas');\n    if (!canvas) {\n      throw new Error('Canvas element with id \"game-canvas\" not found!');\n    }\n    renderer = new Renderer(canvas);\n    ctx = renderer.ctx;\n    console.log('✅ Canvas and renderer initialized');\n    \n    resizeCanvas();\n    console.log('✅ Canvas resized');\n    \n    // Determine display settings\n    displaySettings = getDisplaySettings();\n    console.log('✅ Display settings loaded');\n    \n    // Initialize core managers\n    resourceManager = new ResourceManager();\n    particleManager = new ParticleManager(displaySettings.maxParticles);\n    soundManager = new SoundManager();\n    progressManager = new ProgressManager();\n    console.log('✅ Core managers initialized');\n    \n    // Setup input handler\n    managers.input = new InputHandler(canvas);\n    console.log('✅ Input handler setup');\n\n     let resources = {};\n     try {\n       resources = await resourceManager.initializeGameResources();\n       console.log('✅ Resources loaded successfully');\n       // Register preloaded audio with SoundManager\n       if (resources.audio) {\n         soundManager.sounds = resources.audio;\n         // Set initial global volume\n         soundManager.setGlobalVolume(soundManager.volume);\n       }\n     } catch (error) {\n       console.error('⚠️ Failed to load resources:', error);\n     }\n     \n     // Configure audio settings\n     const audioConf = getAudioConfig();\n     soundManager.setGlobalVolume(audioConf.masterVolume);\n     console.log('✅ Audio configured');\n     \n     // Add display settings to managers\n     managers.displaySettings = displaySettings;\n     \n     // Initialize and start game loop\n     gameLoop = new GameLoop(update, render);\n     gameLoop.start();\n     console.log('✅ Game loop started');\n     \n     console.log('🎯 Showing welcome screen...');\n     welcomeScreen = new WelcomeScreen(canvas, ctx, resourceManager);\n     welcomeScreen.setCallbacks(showLevelMenu, showOptions);\n     welcomeScreen.show();\n     setupGlobalEventListeners();\n     console.log('✅ Welcome screen should be visible now!');\n     \n     // Initialize global error tracker immediately so early errors are captured\n     initializeErrorTracker();\n     \n  } catch (error) {\n    console.error('❌ CRITICAL ERROR during initialization:', error);\n    console.error('Stack trace:', error.stack);\n  }\n};\n"],"names":["ResourceManager","constructor","this","fonts","images","audio","allowedDomains","window","location","hostname","allowedExtensions","validateUrl","url","type","startsWith","validateFileExtension","urlObj","URL","includes","protocol","console","warn","error","allowedExts","lowerUrl","toLowerCase","some","ext","endsWith","loadFont","name","Error","font","FontFace","load","document","add","loadImage","Promise","resolve","reject","img","Image","onload","onerror","src","loadAudio","Audio","oncanplaythrough","initializeGameResources","e","setDisplayMode","mode","localStorage","setItem","getDisplayMode","getItem","testResourceLoading","log","Object","keys","placeholder","width","height","fontsCount","length","imagesCount","audioCount","ParticleManager","maxParticles","particles","lastUpdateTime","performance","now","particlePool","activeParticles","lastCleanupTime","cleanupInterval","renderBatch","colorCache","Map","globalEffects","wind","x","y","gravity","turbulence","performanceMode","frameTimeHistory","avgFrameTime","initializePool","i","push","createParticleObject","vx","vy","size","color","opacity","life","maxLife","age","rotation","rotationSpeed","scale","scaleVelocity","active","trail","trailPositions","physics","bounce","friction","setPerformanceMode","Math","min","createParticle","dx","dy","duration","options","removeOldestParticle","particle","find","p","createExplosion","intensity","count","angle","PI","speed","random","cos","sin","createTrail","createSparkle","floor","createBubbleParticles","oldestIndex","oldestAge","deactivateParticle","updateAndDraw","ctx","deltaTime","actualDeltaTime","updateParticles","cleanupInactiveParticles","drawParticles","monitorPerformance","dt","shift","updateParticlePhysics","updateParticleVisuals","max","batches","circle","star","bubble","save","drawTrailParticles","drawCircleParticles","drawStarParticles","drawBubbleParticles","restore","forEach","globalAlpha","translate","rotate","fillStyle","beginPath","arc","fill","moveTo","lineTo","closePath","gradient","createRadialGradient","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","stroke","filter","frameTime","lastFrameTime","splice","sum","reduce","a","b","setWind","setGravity","setTurbulence","clear","getActiveParticleCount","getPerformanceInfo","fps","round","destroy","GAME_CONFIG","freeze","DISPLAY_MODES","DEFAULT_MODE","FONT_SIZES","DEFAULT","regular","large","QBOARD","MAX_PARTICLES","MAX_EXPLOSIONS","MAX_SWIRL_PARTICLES","MOTHER_RADIUS","COLORS","WHITE","BLACK","FLAME_COLORS","COLORS_LIST","SEQUENCES","alphabet","split","numbers","clcase","shapes","colors","LETTER_SPAWN_INTERVAL","GROUP_SIZE","COLORS_COLLISION_DELAY","TOUCH_COOLDOWN","DOT_RADIUS","DOT_SPEED_RANGE","EXPLOSION_EXPANSION_RATE","SCREEN_SHAKE_DURATION","SPATIAL_GRID_SIZE","COLLISION_CHECK_FREQUENCY","CULLING_DISTANCE_MULTIPLIER","COLORS_LEVEL_CONFIG","TOTAL_DOTS","TARGET_DOTS","DISTRACTOR_DOTS","DISPERSION_FRAMES","DOT_BOUNCE_DAMPENING","SHIMMER_FREQUENCY","GLOW_FREQUENCY","MEMORY_DISPLAY_TIME","COLLISION_ENABLED_DELAY","GRID_OPTIMIZATION","TEXT_LEVEL_CONFIG","CENTER_FONT_SIZE","FALLING_FONT_SIZE","SPAWN_EDGE_BUFFER","TARGET_ADVANCE_COUNT","CHECKPOINT_INTERVAL","ABILITIES","AOE_RADIUS","CHARGE_UP_DURATION","LASER_WIDTH","SWIRL_PARTICLE_COUNT","CENTER_PIECE_ORBIT_RADIUS","AUDIO_CONFIG","MASTER_VOLUME","SFX_VOLUME","MUSIC_VOLUME","SOUNDS","laser","file","volume","completion","AMBIENT","space","loop","WEB_AUDIO_CONTEXT","BUFFER_PRELOAD","getAudioConfig","masterVolume","sfxVolume","musicVolume","sounds","ambient","webAudioContext","bufferPreload","SoundManager","audioConfig","audioContext","AudioContext","webkitAudioContext","masterGain","createGain","gain","value","connect","destination","gains","sfx","music","phonics","values","stubGain","buffers","activeSources","phonicsCache","soundQueue","isProcessingQueue","maxConcurrentSounds","activeSoundsCount","activeSoundsList","Set","initializeDefaultSounds","createSyntheticSounds","sampleRate","popBuffer","createBuffer","popData","getChannelData","t","exp","buffer","successBuffer","successData","envelope","wrongBuffer","wrongData","explosionBuffer","explosionData","noise","loadSound","response","fetch","arrayBuffer","decodeAudioData","playSound","pitch","state","resume","catch","err","entry","source","createBufferSource","gainNode","playbackRate","onended","delete","start","playPhonicsSound","letter","soundName","has","generateSyntheticPhonicsSound","data","freqs","c","d","f","g","h","j","k","l","m","n","o","q","r","s","u","v","w","z","set","playMusic","stop","playAmbient","playExplosion","playPop","playSuccess","playWrong","playSequence","delay","processQueue","sound","setTimeout","stopAll","setMasterVolume","clampedValue","setGlobalVolume","setCategoryVolume","category","resumeContext","fadeCategoryVolume","target","currentTime","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","mute","unmute","toggleMute","createDynamicSound","frequency","oscillator","createOscillator","exponentialRampToValueAtTime","getAudioContext","hasSounds","getAvailableSounds","Renderer","canvas","getContext","setupCanvas","rect","getBoundingClientRect","offsetWidth","offsetHeight","minWidth","minHeight","devicePixelRatio","style","setTransform","clearRect","GameLoop","updateFn","renderFn","lastTime","running","_loop","lastDeltaTime","requestAnimationFrame","HudManager","score","level","lives","abilities","flamethrower","cooldown","maxCooldown","explosion","fontSize","updateScore","points","updateLevel","newLevel","updateLives","newLives","updateAbilityCooldown","abilityName","isAbilityReady","draw","textAlign","fillText","yOffset","entries","ability","cooldownPercent","toFixed","update","resize","CheckpointManager","isActive","currentMessage","fadeAlpha","fadeDirection","displayTime","maxDisplayTime","showCheckpoint","message","fillRect","textBaseline","centerX","centerY","shadowColor","shadowBlur","subtitleFontSize","isDisplaying","skipCheckpoint","FlamethrowerManager","particleManager","activeFlames","maxFlames","createFlamethrower","startX","startY","endX","endY","flame","generateFlameParticles","distance","sqrt","pow","particleCount","progress","offsetX","offsetY","checkCollision","targetX","targetY","targetRadius","A","B","C","abs","CenterPieceManager","radius","pulsePhase","swirlParticles","lastParticleTime","generateSwirlParticle","radiusSpeed","getRandomColor","pulseSize","startRadius","endRadius","alpha","reset","MultiTouchManager","pointers","callbacks","pointerdown","pointermove","pointerup","_onPointerDown","handlePointerDown","bind","_onPointerMove","handlePointerMove","_onPointerUp","handlePointerUp","_preventDefault","preventDefault","setupEventListeners","addEventListener","pointer","id","pointerId","clientX","left","clientY","top","pointerType","pressure","startTime","triggerCallbacks","get","endTime","eventType","originalEvent","callback","removeEventListener","index","indexOf","getActivePointers","Array","from","getPointerCount","getPointer","isMultiTouch","getPinchDistance","p1","p2","getPinchCenter","GlassShatterManager","isShattered","shatterTime","maxShatterTime","cracks","fragments","stressPoints","elasticity","fragmentCount","crackPropagationSpeed","stressFieldRadius","effects","refractionIntensity","reflectionIntensity","glowIntensity","shimmerPhase","performanceLevel","detectPerformanceLevel","adjustSettingsForPerformance","pixelCount","test","navigator","userAgent","createShatterEffect","impactX","impactY","impactPoint","generateRealisticCracks","generateGlassFragments","createStressField","createAdvancedParticles","numPrimary","crack","createCrackLine","numSecondary","numCircular","createCircularCrack","propagationSpeed","currentLength","targetLength","segments","currentX","currentY","currentAngle","segmentLength","branchAngle","branchLength","branchX","branchY","isBranch","deviation","fragment","getGlassColor","decay","stressCount","phase","getGlassParticleColor","fadeProgress","updateCrackPropagation","updateFragments","updateStressField","point","drawStressField","drawCracks","drawFragments","drawRefractionEffect","drawLength","pointsCount","triggerShatter","ProgressManager","storageKey","levels","loadProgress","saved","JSON","parse","unlockedLevels","completedLevels","scores","totalScore","saveProgress","stringify","isLevelUnlocked","levelName","isLevelCompleted","completeLevel","currentIndex","nextLevel","getLevelScore","getProgress","resetProgress","getCompletionPercentage","BaseLevel","managers","helpers","init","render","cleanup","end","onLevelComplete","pause","hud","LevelSettings","totalDots","targetDots","distractorDots","dispersionFrames","bounceDampening","shimmerFreq","glowFreq","memoryTime","collisionDelay","text","centerFontSize","fallingFontSize","spawnEdgeBuffer","advanceCount","checkpointInterval","aoeRadius","chargeDuration","laserWidth","swirlCount","orbitRadius","ColorsLevel","super","dots","targetDotsRemaining","onPointerDown","correctStreak","lastCorrectTime","levelStartTime","activeTimers","colorsList","targetColor","rgb","join","mother","displaySettings","motherRadius","disperseTimer","disperse","cfg","total","targetCount","others","addDot","colArray","isTarget","dot","shimmer","drawEnhancedDot","drawUI","isMemory","shimmerOffset","elapsed","seconds","event","handleCorrectHit","handleWrongHit","soundTimer","applyExplosionEffect","centerPiece","fireworkTimer","timeBonus","accuracyBonus","endTimer","timer","clearTimeout","ShapesLevel","sequence","objects","groupCount","spawnTimer","spawnInterval","currentTarget","spawnObject","obj","drawShape","shape","side","hit","half","px","py","AlphabetLevel","char","NumbersLevel","chars","ClCaseLevel","PhonicsConfig","maxBubbles","targetFPS","bubblePoolSize","particlePoolSize","buoyancy","drag","pop","minForce","maxForce","damping","visuals","bubbleSize","bubbleBase","bubbleHighlight","bubbleShadow","letterColor","correctGlow","wrongGlow","background","enabled","floating","amplitude","glow","education","phonicsMap","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","difficulty","easy","letters","spawnRate","bubbleSpeed","medium","hard","progression","levelDuration","correctScorePoints","wrongScorePenalty","streakMultiplier","maxStreak","gameplay","spawnZone","targetZone","bubbleLifetime","comboWindow","pauseOnWrong","celebrationDuration","playOnSpawn","playOnPop","repeatDelay","bubblePop","correct","wrong","levelComplete","combo","BubbleSystem","soundManager","__publicField","config","bubbles","bubblePool","activeBubbles","lastSpawnTime","time","initializeBubblePool","targetLetter","targetLetterIndex","currentDifficulty","streak","createBubbleObject","lifetime","maxLifetime","popAnimation","isPopping","bounceCount","lastSoundTime","removeEventListeners","setDifficulty","setTargetLetter","getNextTargetLetter","spawnBubble","getRandomLetter","updateSpawning","updateBubbles","cleanupBubbles","updateCombo","deactivateBubble","updateBubblePhysics","updateBubbleEffects","checkBoundaries","popBubble","floatOffset","clickedBubble","findBubbleAtPoint","handleBubbleClick","isCorrect","handleCorrectAnswer","handleWrongAnswer","baseScore","comboMultiplier","createSuccessEffect","onCorrectAnswer","createWrongEffect","onWrongAnswer","createPopParticles","drawPoppingBubble","drawBubble","PhonicsLevel","bubbleSystem","correctCount","totalAttempts","timeRemaining","gameStartTime","showingInstructions","celebrationTime","instructionAlpha","backgroundGradient","frameCount","avgFPS","backgroundPhase","targetLetterPulse","setNewTarget","createBackgroundGradient","showInstructions","createLinearGradient","hideInstructions","advanceDifficulty","showCelebration","updateStats","penalty","difficulties","showAdvancementMessage","createCelebrationParticles","checkpoint","toUpperCase","accuracy","updatePerformanceStats","updateVisualEffects","updateGameTimer","updateInstructions","checkLevelCompletion","reducedQuality","drawBackground","drawInstructions","drawCelebration","showDebugInfo","drawDebugInfo","drawTargetLetter","drawProgress","drawTimer","drawScoreInfo","strokeRect","pulseScale","barWidth","timeString","toString","padStart","handleInput","levelInfo","LevelMenu","containerId","onSelect","container","getElementById","progressManager","label","description","show","html","map","isUnlocked","isCompleted","statusIcon","innerHTML","display","card","querySelector","selectLevel","cursor","backBtn","back","resetBtn","confirm","reload","InputHandler","pointerDownListeners","pointerUpListeners","pointerMoveListeners","keyDownListeners","_boundHandlePointerDown","_handlePointerDown","_boundHandlePointerUp","_handlePointerUp","_boundHandlePointerMove","_handlePointerMove","_boundHandleKeyDown","_handleKeyDown","pos","_getPointerPosition","cb","code","scaleX","scaleY","onPointerUp","onPointerMove","onKeyDown","originalCanvas","getDisplaySettings","innerWidth","innerHeight","detectDisplayMode","fontSizes","maxExplosions","collisionFrequency","WelcomeScreen","resourceManager","bgCanvas","createElement","className","bgCtx","syncCanvasSize","animationId","isVisible","particleSpeed","onStartGame","onShowOptions","particleColors","setupParticles","setupUI","onResize","createWelcomeScreenHTML","attachEventListeners","existing","remove","welcomeDiv","appendChild","body","addWelcomeScreenCSS","textContent","head","updateSelection","button","querySelectorAll","btn","classList","dataset","textEl","hide","startAnimation","welcomeScreen","stopAnimation","animate","updateAnimatedBackground","renderAnimatedBackground","cancelAnimationFrame","setCallbacks","startGameCallback","showOptionsCallback","initializeErrorTracker","overlay","logger","errorLog","overlayEl","record","lineno","colno","stack","timestamp","Date","line","toLocaleTimeString","cssText","div","appendOverlay","filename","reason","String","getErrors","slice","renderer","gameLoop","currentLevel","gameState","levelCompletionTimer","resizeCanvas","showLevelMenu","menuContainer","startLevel","multiTouch","glassShatter","force","handleLevelComplete","showOptions","modal","select","parseFloat","setupGlobalEventListeners","pauseGame","resumeGame","async","input","resources","audioConf"],"mappings":"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"}