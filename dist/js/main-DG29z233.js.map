{"version":3,"file":"main-DG29z233.js","sources":["../../src/js/core/resourceManager.js","../../src/js/core/particleSystem.js","../../src/js/config/constants.js","../../src/js/config/audioConfig.js","../../src/js/core/soundManager.js","../../src/js/gameLoop.js","../../src/js/managers/hudManager.js","../../src/js/managers/checkpointManager.js","../../src/js/managers/flamethrowerManager.js","../../src/js/managers/centerPieceManager.js","../../src/js/managers/multiTouchManager.js","../../src/js/managers/glassShatterManager.js","../../src/js/managers/progressManager.js","../../src/js/levels/baseLevel.js","../../src/js/config/gameSettings.js","../../src/js/levels/colorsLevel.js","../../src/js/levels/shapesLevel.js","../../src/js/levels/alphabetLevel.js","../../src/js/levels/numbersLevel.js","../../src/js/levels/clCaseLevel.js","../../src/js/levels/phonics/PhonicsConfig.js","../../src/js/levels/phonics/BubbleSystem.js","../../src/js/levels/phonics/PhonicsLevel.js","../../src/js/ui/levelMenu.js","../../src/js/inputHandler.js","../../src/js/config/displayModes.js","../../src/js/core/main.js","../../src/js/core/renderer.js"],"sourcesContent":["export default class ResourceManager {\n  constructor() {\n    this.fonts = {};\n    this.images = {};\n    this.audio = {};\n  }\n\n  async loadFont(name, url) {\n    const font = new FontFace(name, `url(${url})`);\n    await font.load();\n    document.fonts.add(font);\n    this.fonts[name] = font;\n  }\n\n  async loadImage(name, url) {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => { this.images[name] = img; resolve(img); };\n      img.onerror = reject;\n      img.src = url;\n    });\n  }\n\n  async loadAudio(name, url) {\n    return new Promise((resolve, reject) => {\n      const audio = new Audio();\n      audio.oncanplaythrough = () => { this.audio[name] = audio; resolve(audio); };\n      audio.onerror = reject;\n      audio.src = url;\n    });\n  }\n\n  async initializeGameResources() {\n    // Try to load resources, but don't fail if they're not available\n    try {\n      await this.loadFont('TitleFont', 'assets/fonts/title.ttf');\n    } catch (e) {\n      console.warn('Could not load title font, using fallback');\n    }\n    \n    try {\n      await this.loadFont('SubtitleFont', 'assets/fonts/subtitle.ttf');\n    } catch (e) {\n      console.warn('Could not load subtitle font, using fallback');\n    }\n    \n    try {\n      await this.loadFont('BodyFont', 'assets/fonts/body.ttf');\n    } catch (e) {\n      console.warn('Could not load body font, using fallback');\n    }\n    \n    try {\n      await this.loadImage('placeholder', 'assets/images/placeholder.svg');\n    } catch (e) {\n      console.warn('Could not load placeholder image');\n    }\n    \n    try {\n      await this.loadAudio('laser', 'assets/sounds/laser.mp3');\n    } catch (e) {\n      console.warn('Could not load laser sound');\n    }\n    try {\n      await this.loadAudio('completion', 'assets/sounds/completion.mp3');\n    } catch (e) {\n      console.warn('Could not load completion sound');\n    }\n    try {\n      await this.loadAudio('ambient_space', 'assets/sounds/ambient_space.mp3');\n    } catch (e) {\n      console.warn('Could not load ambient space sound');\n    }\n    \n    return { fonts: this.fonts, images: this.images, audio: this.audio };\n  }\n\n  setDisplayMode(mode) {\n    localStorage.setItem('displayMode', mode);\n  }\n\n  getDisplayMode() {\n    return localStorage.getItem('displayMode') || 'DEFAULT';\n  }\n\n  // Test method to verify resource loading functionality\n  testResourceLoading() {\n    console.log('Testing resource loading...');\n    console.log('Loaded fonts:', Object.keys(this.fonts));\n    console.log('Loaded images:', Object.keys(this.images));\n    console.log('Loaded audio:', Object.keys(this.audio));\n    \n    // Test if placeholder image is loaded and accessible\n    if (this.images.placeholder) {\n      console.log('✓ Placeholder image loaded successfully');\n      console.log('  - Width:', this.images.placeholder.width || 'Not loaded yet');\n      console.log('  - Height:', this.images.placeholder.height || 'Not loaded yet');\n    } else {\n      console.log('✗ Placeholder image not loaded');\n    }\n    \n    return {\n      fontsCount: Object.keys(this.fonts).length,\n      imagesCount: Object.keys(this.images).length,\n      audioCount: Object.keys(this.audio).length\n    };\n  }\n}\n","/**\n * Enhanced Particle System with Object Pooling and Performance Optimization\n * Prioritizes smooth 60fps performance while providing rich visual effects\n */\nexport default class ParticleManager {\n  constructor(maxParticles = 500) {\n    this.maxParticles = maxParticles;\n    this.particles = [];\n    this.lastUpdateTime = performance.now();\n\n    this.particlePool = [];\n    this.activeParticles = 0;\n    \n    // Performance optimization\n    this.lastCleanupTime = 0;\n    this.cleanupInterval = 100; // Cleanup every 100ms\n    this.renderBatch = [];\n    this.colorCache = new Map();\n    \n    // Visual effects\n    this.globalEffects = {\n      wind: { x: 0, y: 0 },\n      gravity: 0.1,\n      turbulence: 0\n    };\n    \n    // Performance monitoring\n    this.performanceMode = 'high'; // high, medium, low\n    this.frameTimeHistory = [];\n    this.avgFrameTime = 16; // Target 60fps\n    \n    // Initialize particle pool\n    this.initializePool();\n  }\n\n  initializePool() {\n    // Pre-allocate particles for performance\n    for (let i = 0; i < this.maxParticles; i++) {\n      this.particlePool.push(this.createParticleObject());\n    }\n  }\n\n  createParticleObject() {\n    return {\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0,\n      size: 1,\n      color: '#ffffff',\n      opacity: 1,\n      life: 1,\n      maxLife: 1000,\n      age: 0,\n      rotation: 0,\n      rotationSpeed: 0,\n      scale: 1,\n      scaleVelocity: 0,\n      active: false,\n      type: 'circle',\n      trail: false,\n      trailPositions: [],\n      physics: {\n        gravity: true,\n        bounce: false,\n        friction: 0.99\n      }\n    };\n  }\n\n  setPerformanceMode(mode) {\n    this.performanceMode = mode;\n    \n    // Adjust settings based on performance\n    switch (mode) {\n      case 'low':\n        this.maxParticles = Math.min(100, this.maxParticles);\n        this.cleanupInterval = 200;\n        break;\n      case 'medium':\n        this.maxParticles = Math.min(250, this.maxParticles);\n        this.cleanupInterval = 150;\n        break;\n      case 'high':\n        // Use defaults\n        break;\n    }\n  }\n\n  createParticle(x, y, color, size, dx, dy, duration, options = {}) {\n    if (this.activeParticles >= this.maxParticles) {\n      // Remove oldest particle to make room\n      this.removeOldestParticle();\n      if (this.activeParticles >= this.maxParticles) {\n        // Still at capacity, don't create new particle\n        return null;\n      }\n    }\n    \n    // Get particle from pool\n    let particle = this.particlePool.find(p => !p.active);\n    if (!particle) {\n      particle = this.createParticleObject();\n      this.particlePool.push(particle);\n    }\n    \n    // Configure particle\n    particle.x = x;\n    particle.y = y;\n    particle.vx = dx;\n    particle.vy = dy;\n    particle.size = size;\n    particle.color = color;\n    particle.opacity = options.opacity || 1;\n    particle.life = 1;\n    particle.maxLife = duration;\n    particle.age = 0;\n    particle.rotation = options.rotation || 0;\n    particle.rotationSpeed = options.rotationSpeed || 0;\n    particle.scale = options.scale || 1;\n    particle.scaleVelocity = options.scaleVelocity || 0;\n    particle.active = true;\n    particle.type = options.type || 'circle';\n    particle.trail = options.trail || false;\n    particle.trailPositions = [];\n    \n    // Physics options\n    particle.physics.gravity = options.gravity !== undefined ? options.gravity : true;\n    particle.physics.bounce = options.bounce || false;\n    particle.physics.friction = options.friction || 0.99;\n    \n    // Only add to particles array if not already there\n    if (!this.particles.includes(particle)) {\n      this.particles.push(particle);\n    }\n    this.activeParticles++;\n    \n    return particle;\n  }\n\n  // Enhanced particle creation methods\n  createExplosion(x, y, color, intensity = 1, count = 20) {\n    for (let i = 0; i < count * intensity; i++) {\n      const angle = (Math.PI * 2 * i) / (count * intensity);\n      const speed = 2 + Math.random() * 4 * intensity;\n      const size = 1 + Math.random() * 3 * intensity;\n      const duration = 500 + Math.random() * 1000;\n      \n      this.createParticle(\n        x, y, color, size,\n        Math.cos(angle) * speed,\n        Math.sin(angle) * speed,\n        duration,\n        {\n          scaleVelocity: -0.01,\n          rotationSpeed: (Math.random() - 0.5) * 0.2,\n          gravity: true\n        }\n      );\n    }\n  }\n\n  createTrail(x, y, color, size, dx, dy, duration) {\n    this.createParticle(x, y, color, size, dx, dy, duration, {\n      trail: true,\n      gravity: false,\n      friction: 0.95,\n      scaleVelocity: -0.005\n    });\n  }\n\n  createSparkle(x, y, color, intensity = 1) {\n    const count = 5 + Math.floor(Math.random() * 10 * intensity);\n    for (let i = 0; i < count; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = 0.5 + Math.random() * 2 * intensity;\n      const size = 1 + Math.random() * 2;\n      const duration = 800 + Math.random() * 600;\n      \n      this.createParticle(\n        x + (Math.random() - 0.5) * 20,\n        y + (Math.random() - 0.5) * 20,\n        color, size,\n        Math.cos(angle) * speed,\n        Math.sin(angle) * speed,\n        duration,\n        {\n          type: 'star',\n          rotationSpeed: (Math.random() - 0.5) * 0.3,\n          scaleVelocity: -0.003,\n          gravity: false\n        }\n      );\n    }\n  }\n\n  createBubbleParticles(x, y, count = 10) {\n    for (let i = 0; i < count; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = 0.5 + Math.random() * 1.5;\n      const size = 2 + Math.random() * 4;\n      const duration = 1000 + Math.random() * 2000;\n      \n      this.createParticle(\n        x, y,\n        `hsla(${200 + Math.random() * 60}, 70%, 80%, 0.7)`,\n        size,\n        Math.cos(angle) * speed,\n        Math.sin(angle) * speed - 1, // Float upward\n        duration,\n        {\n          type: 'bubble',\n          gravity: false,\n          friction: 0.98,\n          scaleVelocity: 0.001 // Grow slightly\n        }\n      );\n    }\n  }\n\n  removeOldestParticle() {\n    let oldestIndex = -1;\n    let oldestAge = 0;\n    \n    for (let i = 0; i < this.particles.length; i++) {\n      if (this.particles[i].active && this.particles[i].age > oldestAge) {\n        oldestAge = this.particles[i].age;\n        oldestIndex = i;\n      }\n    }\n    \n    if (oldestIndex >= 0) {\n      this.deactivateParticle(this.particles[oldestIndex]);\n    }\n  }\n\n  deactivateParticle(particle) {\n    particle.active = false;\n    particle.trailPositions = [];\n    this.activeParticles--;\n  }\n\n  updateAndDraw(ctx, deltaTime) {\n    const now = performance.now();\n    const actualDeltaTime = deltaTime !== undefined ? deltaTime : 16; // Default to 16ms\n    \n    // Update particles\n    this.updateParticles(actualDeltaTime);\n    \n    // Clean up inactive particles periodically\n    if (now - this.lastCleanupTime > this.cleanupInterval) {\n      this.cleanupInactiveParticles();\n      this.lastCleanupTime = now;\n    }\n    \n    // Draw particles\n    this.drawParticles(ctx);\n    \n    // Performance monitoring\n    this.monitorPerformance(now);\n  }\n\n  updateParticles(deltaTime) {\n    const dt = deltaTime / 16; // Normalize to 60fps\n    \n    for (let i = 0; i < this.particles.length; i++) {\n      const particle = this.particles[i];\n      if (!particle.active) continue;\n      \n      // Update age and life\n      particle.age += deltaTime;\n      particle.life = 1 - (particle.age / particle.maxLife);\n      \n      // Remove expired particles\n      if (particle.life <= 0) {\n        this.deactivateParticle(particle);\n        continue;\n      }\n      \n      // Update trail positions\n      if (particle.trail) {\n        particle.trailPositions.push({ x: particle.x, y: particle.y });\n        if (particle.trailPositions.length > 10) {\n          particle.trailPositions.shift();\n        }\n      }\n      \n      // Apply physics\n      this.updateParticlePhysics(particle, dt);\n      \n      // Update visual properties\n      this.updateParticleVisuals(particle, dt);\n    }\n  }\n\n  updateParticlePhysics(particle, dt) {\n    // Apply global effects\n    particle.vx += this.globalEffects.wind.x * dt;\n    particle.vy += this.globalEffects.wind.y * dt;\n    \n    if (particle.physics.gravity) {\n      particle.vy += this.globalEffects.gravity * dt;\n    }\n    \n    // Apply turbulence\n    if (this.globalEffects.turbulence > 0) {\n      particle.vx += (Math.random() - 0.5) * this.globalEffects.turbulence * dt;\n      particle.vy += (Math.random() - 0.5) * this.globalEffects.turbulence * dt;\n    }\n    \n    // Apply friction\n    particle.vx *= particle.physics.friction;\n    particle.vy *= particle.physics.friction;\n    \n    // Update position\n    particle.x += particle.vx * dt;\n    particle.y += particle.vy * dt;\n    \n    // Boundary handling\n    if (particle.physics.bounce) {\n      // Simple boundary bouncing (can be enhanced)\n      if (particle.x < 0 || particle.x > 800) { // Assuming canvas width\n        particle.vx *= -0.5;\n      }\n      if (particle.y > 600) { // Assuming canvas height\n        particle.vy *= -0.5;\n        particle.y = 600;\n      }\n    }\n  }\n\n  updateParticleVisuals(particle, dt) {\n    // Update rotation\n    particle.rotation += particle.rotationSpeed * dt;\n    \n    // Update scale\n    particle.scale += particle.scaleVelocity * dt;\n    particle.scale = Math.max(0.1, particle.scale);\n    \n    // Update opacity based on life\n    particle.opacity = particle.life;\n  }\n\n  drawParticles(ctx) {\n    // Group particles by type for batch rendering\n    const batches = {\n      circle: [],\n      star: [],\n      bubble: [],\n      trail: []\n    };\n    \n    // Sort particles into batches\n    for (let i = 0; i < this.particles.length; i++) {\n      const particle = this.particles[i];\n      if (!particle.active) continue;\n      \n      if (batches[particle.type]) {\n        batches[particle.type].push(particle);\n      } else {\n        batches.circle.push(particle);\n      }\n    }\n    \n    // Draw each batch\n    ctx.save();\n    \n    // Draw trails first (behind other particles)\n    this.drawTrailParticles(ctx, batches.trail);\n    \n    // Draw main particles\n    this.drawCircleParticles(ctx, batches.circle);\n    this.drawStarParticles(ctx, batches.star);\n    this.drawBubbleParticles(ctx, batches.bubble);\n    \n    ctx.restore();\n  }\n\n  drawCircleParticles(ctx, particles) {\n    particles.forEach(particle => {\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.translate(particle.x, particle.y);\n      ctx.scale(particle.scale, particle.scale);\n      ctx.rotate(particle.rotation);\n      \n      ctx.fillStyle = particle.color;\n      ctx.beginPath();\n      ctx.arc(0, 0, particle.size, 0, Math.PI * 2);\n      ctx.fill();\n      \n      ctx.restore();\n    });\n  }\n\n  drawStarParticles(ctx, particles) {\n    particles.forEach(particle => {\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.translate(particle.x, particle.y);\n      ctx.scale(particle.scale, particle.scale);\n      ctx.rotate(particle.rotation);\n      \n      // Draw star shape\n      ctx.fillStyle = particle.color;\n      ctx.beginPath();\n      for (let i = 0; i < 5; i++) {\n        const angle = (i * Math.PI * 2) / 5;\n        const x = Math.cos(angle) * particle.size;\n        const y = Math.sin(angle) * particle.size;\n        if (i === 0) ctx.moveTo(x, y);\n        else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.fill();\n      \n      ctx.restore();\n    });\n  }\n\n  drawBubbleParticles(ctx, particles) {\n    particles.forEach(particle => {\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.translate(particle.x, particle.y);\n      ctx.scale(particle.scale, particle.scale);\n      \n      // Draw bubble with highlight\n      const gradient = ctx.createRadialGradient(\n        -particle.size * 0.3, -particle.size * 0.3, 0,\n        0, 0, particle.size\n      );\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 0.8)');\n      gradient.addColorStop(0.7, particle.color);\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.2)');\n      \n      ctx.fillStyle = gradient;\n      ctx.beginPath();\n      ctx.arc(0, 0, particle.size, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Add bubble highlight\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.beginPath();\n      ctx.arc(-particle.size * 0.3, -particle.size * 0.3, particle.size * 0.3, 0, Math.PI * 2);\n      ctx.fill();\n      \n      ctx.restore();\n    });\n  }\n\n  drawTrailParticles(ctx, particles) {\n    particles.forEach(particle => {\n      if (particle.trailPositions.length < 2) return;\n      \n      ctx.save();\n      ctx.globalAlpha = particle.opacity * 0.5;\n      ctx.strokeStyle = particle.color;\n      ctx.lineWidth = particle.size;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      \n      ctx.beginPath();\n      ctx.moveTo(particle.trailPositions[0].x, particle.trailPositions[0].y);\n      \n      for (let i = 1; i < particle.trailPositions.length; i++) {\n        ctx.lineTo(particle.trailPositions[i].x, particle.trailPositions[i].y);\n      }\n      \n      ctx.stroke();\n      ctx.restore();\n      \n      // Draw current particle\n      ctx.save();\n      ctx.globalAlpha = particle.opacity;\n      ctx.fillStyle = particle.color;\n      ctx.beginPath();\n      ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n    });\n  }\n\n  cleanupInactiveParticles() {\n    this.particles = this.particles.filter(particle => particle.active);\n  }\n\n  monitorPerformance(now) {\n    const frameTime = now - (this.lastFrameTime || now);\n    this.frameTimeHistory.push(frameTime);\n    \n    if (this.frameTimeHistory.length > 60) {\n      this.frameTimeHistory.shift();\n      \n      // Calculate average frame time\n      const sum = this.frameTimeHistory.reduce((a, b) => a + b, 0);\n      this.avgFrameTime = sum / this.frameTimeHistory.length;\n      \n      // Adjust performance if needed\n      if (this.avgFrameTime > 20 && this.performanceMode === 'high') { // Below 50fps\n        this.setPerformanceMode('medium');\n        console.log('🐌 Reduced to medium performance mode');\n      } else if (this.avgFrameTime > 25 && this.performanceMode === 'medium') { // Below 40fps\n        this.setPerformanceMode('low');\n        console.log('🐌 Reduced to low performance mode');\n      } else if (this.avgFrameTime < 17 && this.performanceMode !== 'high') { // Above 58fps\n        this.setPerformanceMode('high');\n        console.log('🚀 Increased to high performance mode');\n      }\n    }\n    \n    this.lastFrameTime = now;\n  }\n\n  // Global effects control\n  setWind(x, y) {\n    this.globalEffects.wind.x = x;\n    this.globalEffects.wind.y = y;\n  }\n\n  setGravity(gravity) {\n    this.globalEffects.gravity = gravity;\n  }\n\n  setTurbulence(turbulence) {\n    this.globalEffects.turbulence = turbulence;\n  }\n\n  // Utility methods\n  clear() {\n    this.particles.forEach(particle => this.deactivateParticle(particle));\n    this.activeParticles = 0;\n  }\n\n  getActiveParticleCount() {\n    return this.activeParticles;\n  }\n\n  getPerformanceInfo() {\n    return {\n      activeParticles: this.activeParticles,\n      maxParticles: this.maxParticles,\n      avgFrameTime: this.avgFrameTime,\n      performanceMode: this.performanceMode,\n      fps: Math.round(1000 / this.avgFrameTime)\n    };\n  }\n}\n","export const GAME_CONFIG = Object.freeze({\n    // Display modes\n    DISPLAY_MODES: Object.freeze(['DEFAULT', 'QBOARD']),\n    DEFAULT_MODE: 'DEFAULT',\n\n    // Font sizes by display mode\n    FONT_SIZES: Object.freeze({\n        DEFAULT: Object.freeze({ regular: 24, large: 48 }),\n        QBOARD: Object.freeze({ regular: 30, large: 60 })\n    }),\n\n    // Performance settings by display mode\n    MAX_PARTICLES: Object.freeze({ DEFAULT: 100, QBOARD: 150 }),\n    MAX_EXPLOSIONS: Object.freeze({ DEFAULT: 5, QBOARD: 8 }),\n    MAX_SWIRL_PARTICLES: Object.freeze({ DEFAULT: 30, QBOARD: 15 }),\n    MOTHER_RADIUS: Object.freeze({ DEFAULT: 90, QBOARD: 120 }),\n\n    // Colors\n    COLORS: Object.freeze({\n        WHITE: Object.freeze([255, 255, 255]),\n        BLACK: Object.freeze([0, 0, 0]),\n        FLAME_COLORS: Object.freeze([\n            Object.freeze([255, 69, 0]),   // Red-orange\n            Object.freeze([255, 215, 0]),  // Gold\n            Object.freeze([0, 191, 255])   // Bright blue\n        ]),\n        COLORS_LIST: Object.freeze([\n            Object.freeze([0, 0, 255]),    // Blue\n            Object.freeze([255, 0, 0]),    // Red\n            Object.freeze([0, 200, 0]),    // Green\n            Object.freeze([255, 255, 0]),  // Yellow\n            Object.freeze([128, 0, 255])   // Purple\n        ])\n    }),\n\n    // Game sequences\n    SEQUENCES: Object.freeze({\n        alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(''),\n        numbers: Object.freeze(['1','2','3','4','5','6','7','8','9','10']),\n        clcase: 'abcdefghijklmnopqrstuvwxyz'.split(''),\n        shapes: Object.freeze(['Circle','Square','Triangle','Rectangle','Pentagon']),\n        colors: Object.freeze(['Blue','Red','Green','Yellow','Purple'])\n    }),\n\n    // Timing and gameplay\n    LETTER_SPAWN_INTERVAL: 60,  // frames\n    GROUP_SIZE: 5,\n    COLORS_COLLISION_DELAY: 250,  // milliseconds\n    TOUCH_COOLDOWN: 50,  // milliseconds\n\n    // Physics and movement\n    DOT_RADIUS: 48,\n    DOT_SPEED_RANGE: Object.freeze([3, 6]),\n    EXPLOSION_EXPANSION_RATE: 0.1,\n    SCREEN_SHAKE_DURATION: 10,\n\n    // Performance optimizations\n    SPATIAL_GRID_SIZE: 120,\n    COLLISION_CHECK_FREQUENCY: Object.freeze({ DEFAULT: 1, QBOARD: 2 }),\n    CULLING_DISTANCE_MULTIPLIER: 1.0,\n\n    // Level-specific configurations for colors and text levels\n    COLORS_LEVEL_CONFIG: Object.freeze({\n        TOTAL_DOTS: 85,\n        TARGET_DOTS: 17,\n        DISTRACTOR_DOTS: 68,\n        DISPERSION_FRAMES: 30,\n        DOT_BOUNCE_DAMPENING: 0.98,\n        SHIMMER_FREQUENCY: 0.05,\n        GLOW_FREQUENCY: 0.1,\n        MEMORY_DISPLAY_TIME: 2000,\n        COLLISION_ENABLED_DELAY: 250,\n        GRID_OPTIMIZATION: true\n    }),\n\n    TEXT_LEVEL_CONFIG: Object.freeze({\n        CENTER_FONT_SIZE: 900,\n        FALLING_FONT_SIZE: 240,\n        SPAWN_EDGE_BUFFER: 50,\n        TARGET_ADVANCE_COUNT: 5,\n        CHECKPOINT_INTERVAL: 5,\n        ABILITIES: Object.freeze(['laser', 'aoe', 'charge_up']),\n        AOE_RADIUS: 200,\n        CHARGE_UP_DURATION: 60,\n        LASER_WIDTH: Object.freeze([3, 5]),\n        SWIRL_PARTICLE_COUNT: 30,\n        CENTER_PIECE_ORBIT_RADIUS: 100\n    }),\n\n    // Audio configuration\n    AUDIO_CONFIG: Object.freeze({\n        MASTER_VOLUME: 0.7,\n        SFX_VOLUME: 0.8,\n        MUSIC_VOLUME: 0.3,\n        SOUNDS: Object.freeze({\n            laser: Object.freeze({ file: 'laser.mp3', volume: 0.6 }),\n            completion: Object.freeze({ file: 'completion.mp3', volume: 1.0 })\n        }),\n        AMBIENT: Object.freeze({\n            space: Object.freeze({ file: 'ambient_space.mp3', volume: 0.2, loop: true })\n        }),\n        WEB_AUDIO_CONTEXT: true,\n        BUFFER_PRELOAD: true\n    })\n});\n","import { GAME_CONFIG } from './constants.js';\n\n/**\n * Returns audio configuration settings.\n */\nexport function getAudioConfig() {\n  return {\n    masterVolume: GAME_CONFIG.AUDIO_CONFIG?.MASTER_VOLUME ?? 0.7,\n    sfxVolume: GAME_CONFIG.AUDIO_CONFIG?.SFX_VOLUME ?? 0.8,\n    musicVolume: GAME_CONFIG.AUDIO_CONFIG?.MUSIC_VOLUME ?? 0.3,\n    sounds: GAME_CONFIG.AUDIO_CONFIG?.SOUNDS ?? {},\n    ambient: GAME_CONFIG.AUDIO_CONFIG?.AMBIENT ?? {},\n    webAudioContext: GAME_CONFIG.AUDIO_CONFIG?.WEB_AUDIO_CONTEXT ?? true,\n    bufferPreload: GAME_CONFIG.AUDIO_CONFIG?.BUFFER_PRELOAD ?? true\n  };\n}\n","import { getAudioConfig } from '../config/audioConfig.js';\n\nexport default class SoundManager {\n  constructor() {\n    const audioConfig = getAudioConfig();\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    // Store current volume for reference\n    this.volume = audioConfig.masterVolume;\n    \n    // Master gain\n    this.masterGain = this.audioContext.createGain();\n    this.masterGain.gain.value = this.volume;\n    this.masterGain.connect(this.audioContext.destination);\n    \n    // Category gains\n    this.gains = {\n      sfx: this.audioContext.createGain(),\n      music: this.audioContext.createGain(),\n      ambient: this.audioContext.createGain(),\n      phonics: this.audioContext.createGain() // Added for phonics sounds\n    };\n    \n    this.gains.sfx.gain.value = audioConfig.sfxVolume;\n    this.gains.music.gain.value = audioConfig.musicVolume;\n    this.gains.ambient.gain.value = audioConfig.musicVolume;\n    this.gains.phonics.gain.value = audioConfig.sfxVolume;\n    \n    // Connect all gains to master\n    Object.values(this.gains).forEach(gain => gain.connect(this.masterGain));\n    \n    // Buffers storage\n    this.buffers = {}; // { name: { buffer, type } }\n    this.activeSources = {};\n    this.sounds = {}; // For preloaded audio compatibility\n\n    // Enhanced features\n    this.sounds = {}; // Direct sound access for ResourceManager\n    this.phonicsCache = new Map(); // Cache for phonics sounds\n    this.soundQueue = []; // Queue for sequenced sounds\n    this.isProcessingQueue = false;\n    \n    // Performance optimization\n    this.maxConcurrentSounds = 8;\n    this.activeSoundsCount = 0;\n    \n    // Initialize default sounds\n    this.initializeDefaultSounds();\n  }\n\n  initializeDefaultSounds() {\n    // Create synthetic sounds for immediate gameplay\n    this.createSyntheticSounds();\n  }\n\n  createSyntheticSounds() {\n    // Create basic synthetic sounds for immediate use\n    const sampleRate = this.audioContext.sampleRate;\n    \n    // Pop sound for bubbles\n    const popBuffer = this.audioContext.createBuffer(1, sampleRate * 0.1, sampleRate);\n    const popData = popBuffer.getChannelData(0);\n    for (let i = 0; i < popData.length; i++) {\n      const t = i / sampleRate;\n      popData[i] = Math.sin(2 * Math.PI * 800 * t) * Math.exp(-t * 20) * 0.3;\n    }\n    this.buffers['pop'] = { buffer: popBuffer, type: 'sfx' };\n    \n    // Success sound\n    const successBuffer = this.audioContext.createBuffer(1, sampleRate * 0.3, sampleRate);\n    const successData = successBuffer.getChannelData(0);\n    for (let i = 0; i < successData.length; i++) {\n      const t = i / sampleRate;\n      const envelope = Math.exp(-t * 3);\n      successData[i] = (\n        Math.sin(2 * Math.PI * 440 * t) * 0.3 +\n        Math.sin(2 * Math.PI * 554 * t) * 0.2 +\n        Math.sin(2 * Math.PI * 659 * t) * 0.1\n      ) * envelope;\n    }\n    this.buffers['success'] = { buffer: successBuffer, type: 'sfx' };\n    \n    // Wrong sound\n    const wrongBuffer = this.audioContext.createBuffer(1, sampleRate * 0.2, sampleRate);\n    const wrongData = wrongBuffer.getChannelData(0);\n    for (let i = 0; i < wrongData.length; i++) {\n      const t = i / sampleRate;\n      wrongData[i] = Math.sin(2 * Math.PI * 150 * t) * Math.exp(-t * 10) * 0.4;\n    }\n    this.buffers['wrong'] = { buffer: wrongBuffer, type: 'sfx' };\n    \n    // Explosion sound\n    const explosionBuffer = this.audioContext.createBuffer(1, sampleRate * 0.4, sampleRate);\n    const explosionData = explosionBuffer.getChannelData(0);\n    for (let i = 0; i < explosionData.length; i++) {\n      const t = i / sampleRate;\n      const noise = (Math.random() - 0.5) * 2;\n      const envelope = Math.exp(-t * 5);\n      explosionData[i] = noise * envelope * 0.3;\n    }\n    this.buffers['explosion'] = { buffer: explosionBuffer, type: 'sfx' };\n  }\n\n  async loadSound(name, url, type = 'sfx') {\n    try {\n      const response = await fetch(url);\n      const arrayBuffer = await response.arrayBuffer();\n      const buffer = await this.audioContext.decodeAudioData(arrayBuffer);\n      this.buffers[name] = { buffer, type };\n      this.sounds[name] = buffer; // For ResourceManager compatibility\n      return buffer;\n    } catch (error) {\n      console.warn(`Failed to load sound ${name}:`, error);\n      return null;\n    }\n  }\n\n  playSound(name, volume = 1.0, pitch = 1.0) {\n    if (this.activeSoundsCount >= this.maxConcurrentSounds) {\n      return null; // Skip if too many sounds playing\n    }\n    \n    const entry = this.buffers[name];\n    if (!entry) {\n      console.warn(`Sound ${name} not found`);\n      return null;\n    }\n    \n    const source = this.audioContext.createBufferSource();\n    source.buffer = entry.buffer;\n    \n    // Add volume control\n    const gainNode = this.audioContext.createGain();\n    gainNode.gain.value = volume;\n    source.connect(gainNode);\n    gainNode.connect(this.gains[entry.type] || this.gains.sfx);\n    \n    // Add pitch control\n    source.playbackRate.value = pitch;\n    \n    source.start(0);\n    this.activeSoundsCount++;\n    \n    source.onended = () => {\n      this.activeSoundsCount--;\n    };\n    \n    return source;\n  }\n\n  playPhonicsSound(letter, volume = 1.0) {\n    // Play phonetic sound for a letter\n    const soundName = `phonics_${letter.toLowerCase()}`;\n    \n    // Check cache first\n    if (this.phonicsCache.has(soundName)) {\n      return this.playSound(soundName, volume);\n    }\n    \n    // Generate synthetic phonics sound if not available\n    return this.generateSyntheticPhonicsSound(letter, volume);\n  }\n\n  generateSyntheticPhonicsSound(letter, volume = 1.0) {\n    // Create a simple synthetic phonics sound\n    const sampleRate = this.audioContext.sampleRate;\n    const duration = 0.5;\n    const buffer = this.audioContext.createBuffer(1, sampleRate * duration, sampleRate);\n    const data = buffer.getChannelData(0);\n    \n    // Basic phonics mapping to frequencies\n    const phonicsMap = {\n      'a': [800, 1200], 'b': [100, 200], 'c': [200, 300], 'd': [150, 250],\n      'e': [500, 700], 'f': [300, 400], 'g': [120, 220], 'h': [100, 150],\n      'i': [300, 500], 'j': [200, 400], 'k': [250, 350], 'l': [400, 600],\n      'm': [150, 300], 'n': [200, 400], 'o': [400, 600], 'p': [100, 200],\n      'q': [250, 450], 'r': [300, 500], 's': [500, 800], 't': [400, 600],\n      'u': [300, 500], 'v': [200, 400], 'w': [250, 450], 'x': [300, 600],\n      'y': [400, 700], 'z': [400, 800]\n    };\n    \n    const freqs = phonicsMap[letter.toLowerCase()] || [400, 600];\n    \n    for (let i = 0; i < data.length; i++) {\n      const t = i / sampleRate;\n      const envelope = Math.exp(-t * 2) * (1 - Math.exp(-t * 10));\n      data[i] = (\n        Math.sin(2 * Math.PI * freqs[0] * t) * 0.3 +\n        Math.sin(2 * Math.PI * freqs[1] * t) * 0.2\n      ) * envelope * volume;\n    }\n    \n    // Cache the generated sound\n    const soundName = `phonics_${letter.toLowerCase()}`;\n    this.buffers[soundName] = { buffer, type: 'phonics' };\n    this.phonicsCache.set(soundName, buffer);\n    \n    return this.playSound(soundName, volume);\n  }\n\n  playMusic(name, loop = true, volume = 1.0) {\n    const entry = this.buffers[name];\n    if (!entry) return null;\n    \n    if (this.activeSources[name]) {\n      this.activeSources[name].stop();\n    }\n    \n    const source = this.audioContext.createBufferSource();\n    source.buffer = entry.buffer;\n    source.loop = loop;\n    \n    const gainNode = this.audioContext.createGain();\n    gainNode.gain.value = volume;\n    source.connect(gainNode);\n    gainNode.connect(this.gains.music);\n    \n    source.start(0);\n    this.activeSources[name] = source;\n    \n    return source;\n  }\n\n  playAmbient(name, loop = true, volume = 1.0) {\n    const entry = this.buffers[name];\n    if (!entry) return null;\n    \n    if (this.activeSources[name]) {\n      this.activeSources[name].stop();\n    }\n    \n    const source = this.audioContext.createBufferSource();\n    source.buffer = entry.buffer;\n    source.loop = loop;\n    \n    const gainNode = this.audioContext.createGain();\n    gainNode.gain.value = volume;\n    source.connect(gainNode);\n    gainNode.connect(this.gains.ambient);\n    \n    source.start(0);\n    this.activeSources[name] = source;\n    \n    return source;\n  }\n\n  // Enhanced sound effects for game interactions\n  playExplosion(intensity = 1.0) {\n    return this.playSound('explosion', intensity, 0.8 + Math.random() * 0.4);\n  }\n\n  playPop(intensity = 1.0) {\n    return this.playSound('pop', intensity, 0.9 + Math.random() * 0.2);\n  }\n\n  playSuccess() {\n    return this.playSound('success', 1.0);\n  }\n\n  playWrong() {\n    return this.playSound('wrong', 1.0);\n  }\n\n  // Sound sequencing for educational feedback\n  playSequence(sounds, delay = 200) {\n    this.soundQueue.push({ sounds, delay });\n    if (!this.isProcessingQueue) {\n      this.processQueue();\n    }\n  }\n\n  async processQueue() {\n    this.isProcessingQueue = true;\n    \n    while (this.soundQueue.length > 0) {\n      const { sounds, delay } = this.soundQueue.shift();\n      \n      for (let i = 0; i < sounds.length; i++) {\n        const sound = sounds[i];\n        if (typeof sound === 'string') {\n          this.playSound(sound);\n        } else if (sound.type === 'phonics') {\n          this.playPhonicsSound(sound.letter, sound.volume);\n        } else if (sound.type === 'sound') {\n          this.playSound(sound.name, sound.volume, sound.pitch);\n        }\n        \n        if (i < sounds.length - 1) {\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n    \n    this.isProcessingQueue = false;\n  }\n\n  stop(name) {\n    const source = this.activeSources[name];\n    if (source) {\n      source.stop();\n      delete this.activeSources[name];\n    }\n  }\n\n  stopAll() {\n    Object.values(this.activeSources).forEach(source => {\n      if (source && typeof source.stop === 'function') {\n        source.stop();\n      }\n    });\n    this.activeSources = {};\n    this.activeSoundsCount = 0;\n  }\n\n  setMasterVolume(value) {\n    this.volume = value; // Keep volume property in sync\n    this.masterGain.gain.value = value;\n  }\n\n  setGlobalVolume(value) {\n    this.setMasterVolume(value);\n  }\n\n  setCategoryVolume(category, value) {\n    if (this.gains[category]) {\n      this.gains[category].gain.value = value;\n    }\n  }\n\n  // Ensure AudioContext is running after user interaction\n  async resumeContext() {\n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n    }\n  }\n\n  /**\n   * Fade a category gain to a target volume over a duration (ms)\n   * @param {string} category - 'sfx'|'music'|'ambient'|'phonics'\n   * @param {number} target - target gain value\n   * @param {number} duration - fade duration in milliseconds\n   */\n  fadeCategoryVolume(category, target, duration = 500) {\n    const gainNode = this.gains[category] || this.masterGain;\n    const now = this.audioContext.currentTime;\n    gainNode.gain.cancelScheduledValues(now);\n    gainNode.gain.setValueAtTime(gainNode.gain.value, now);\n    gainNode.gain.linearRampToValueAtTime(target, now + duration / 1000);\n  }\n\n  /**\n   * Mute all sounds (instant)\n   */\n  mute() {\n    this.setMasterVolume(0);\n  }\n\n  /**\n   * Unmute all sounds (restore to config master volume)\n   */\n  unmute() {\n    const { masterVolume } = getAudioConfig();\n    this.setMasterVolume(masterVolume);\n  }\n\n  /**\n   * Toggle mute state\n   */\n  toggleMute() {\n    if (this.masterGain.gain.value > 0) {\n      this.mute();\n    } else {\n      this.unmute();\n    }\n  }\n\n  /**\n   * Create dynamic sound effect\n   */\n  createDynamicSound(frequency, duration, type = 'sine', volume = 0.3) {\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    \n    oscillator.type = type;\n    oscillator.frequency.value = frequency;\n    \n    gainNode.gain.value = volume;\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(this.gains.sfx);\n    \n    oscillator.start();\n    oscillator.stop(this.audioContext.currentTime + duration);\n    \n    return oscillator;\n  }\n\n  /**\n   * Get audio context for advanced audio processing\n   */\n  getAudioContext() {\n    return this.audioContext;\n  }\n\n  /**\n   * Check if sound is available\n   */\n  hasSounds() {\n    return Object.keys(this.buffers).length > 0;\n  }\n\n  /**\n   * Get available sounds list\n   */\n  getAvailableSounds() {\n    return Object.keys(this.buffers);\n  }\n}\n","// gameLoop.js: centralize main game loop control and timing\nexport class GameLoop {\n  constructor(updateFn, renderFn) {\n    this.updateFn = updateFn;\n    this.renderFn = renderFn;\n    this.lastTime = 0;\n    this.running = false;\n  }\n\n  start() {\n    this.running = true;\n    this.lastTime = performance.now();\n    this._loop();\n  }\n\n  stop() {\n    this.running = false;\n  }\n\n  _loop() {\n    if (!this.running) return;\n    const now = performance.now();\n    const deltaTime = now - this.lastTime;\n    this.lastTime = now;\n    this.lastDeltaTime = deltaTime; // Store for use by particle system\n    this.updateFn(deltaTime);\n    this.renderFn();\n    requestAnimationFrame(() => this._loop());\n  }\n}\n","export default class HudManager {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.score = 0;\n    this.level = 1;\n    this.lives = 3;\n    this.abilities = {\n      flamethrower: { cooldown: 0, maxCooldown: 5000 },\n      explosion: { cooldown: 0, maxCooldown: 3000 }\n    };\n    this.fontSize = Math.min(canvas.width, canvas.height) * 0.03;\n  }\n\n  updateScore(points) {\n    this.score += points;\n  }\n\n  updateLevel(newLevel) {\n    this.level = newLevel;\n  }\n\n  updateLives(newLives) {\n    this.lives = newLives;\n  }\n\n  updateAbilityCooldown(abilityName, cooldown) {\n    if (this.abilities[abilityName]) {\n      this.abilities[abilityName].cooldown = Math.max(0, cooldown);\n    }\n  }\n\n  isAbilityReady(abilityName) {\n    return this.abilities[abilityName]?.cooldown === 0;\n  }\n\n  draw() {\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.font = `${this.fontSize}px Arial`;\n    this.ctx.textAlign = 'left';\n\n    // Score\n    this.ctx.fillText(`Score: ${this.score}`, 20, 40);\n    \n    // Level\n    this.ctx.fillText(`Level: ${this.level}`, 20, 80);\n    \n    // Lives\n    this.ctx.fillText(`Lives: ${this.lives}`, 20, 120);\n\n    // Ability cooldowns\n    let yOffset = 160;\n    Object.entries(this.abilities).forEach(([name, ability]) => {\n      const cooldownPercent = ability.cooldown / ability.maxCooldown;\n      const color = cooldownPercent > 0 ? '#FF6B6B' : '#4ECDC4';\n      \n      this.ctx.fillStyle = color;\n      this.ctx.fillText(`${name}: ${cooldownPercent > 0 ? (ability.cooldown / 1000).toFixed(1) + 's' : 'Ready'}`, 20, yOffset);\n      yOffset += 40;\n    });\n\n    this.ctx.restore();\n  }\n\n  update(deltaTime) {\n    // Update ability cooldowns\n    Object.values(this.abilities).forEach(ability => {\n      if (ability.cooldown > 0) {\n        ability.cooldown = Math.max(0, ability.cooldown - deltaTime);\n      }\n    });\n  }\n\n  resize(canvas) {\n    this.canvas = canvas;\n    this.fontSize = Math.min(canvas.width, canvas.height) * 0.03;\n  }\n}\n","export default class CheckpointManager {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.isActive = false;\n    this.currentMessage = '';\n    this.fadeAlpha = 0;\n    this.fadeDirection = 1;\n    this.displayTime = 0;\n    this.maxDisplayTime = 3000; // 3 seconds\n  }\n\n  showCheckpoint(message) {\n    this.isActive = true;\n    this.currentMessage = message;\n    this.fadeAlpha = 0;\n    this.fadeDirection = 1;\n    this.displayTime = 0;\n  }\n\n  update(deltaTime) {\n    if (!this.isActive) return;\n\n    this.displayTime += deltaTime;\n\n    // Fade in/out animation\n    if (this.fadeDirection === 1) {\n      this.fadeAlpha += deltaTime * 0.003; // Fade in speed\n      if (this.fadeAlpha >= 1) {\n        this.fadeAlpha = 1;\n        this.fadeDirection = 0; // Hold\n      }\n    } else if (this.fadeDirection === 0) {\n      // Hold for a moment\n      if (this.displayTime > this.maxDisplayTime * 0.7) {\n        this.fadeDirection = -1; // Start fade out\n      }\n    } else if (this.fadeDirection === -1) {\n      this.fadeAlpha -= deltaTime * 0.003; // Fade out speed\n      if (this.fadeAlpha <= 0) {\n        this.fadeAlpha = 0;\n        this.isActive = false;\n      }\n    }\n  }\n\n  draw() {\n    if (!this.isActive || this.fadeAlpha === 0) return;\n\n    this.ctx.save();\n    \n    // Semi-transparent overlay\n    this.ctx.fillStyle = `rgba(0, 0, 0, ${0.5 * this.fadeAlpha})`;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Checkpoint message\n    const fontSize = Math.min(this.canvas.width, this.canvas.height) * 0.08;\n    this.ctx.font = `${fontSize}px Arial`;\n    this.ctx.fillStyle = `rgba(255, 255, 255, ${this.fadeAlpha})`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    \n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    \n    // Add glow effect\n    this.ctx.shadowColor = '#4ECDC4';\n    this.ctx.shadowBlur = 20 * this.fadeAlpha;\n    \n    this.ctx.fillText(this.currentMessage, centerX, centerY);\n\n    // Subtitle\n    const subtitleFontSize = fontSize * 0.4;\n    this.ctx.font = `${subtitleFontSize}px Arial`;\n    this.ctx.shadowBlur = 10 * this.fadeAlpha;\n    this.ctx.fillText('Checkpoint Reached!', centerX, centerY + fontSize);\n\n    this.ctx.restore();\n  }\n\n  isDisplaying() {\n    return this.isActive;\n  }\n\n  skipCheckpoint() {\n    this.isActive = false;\n    this.fadeAlpha = 0;\n  }\n}\n","export default class FlamethrowerManager {\n  constructor(canvas, ctx, particleManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    this.activeFlames = [];\n    this.maxFlames = 10;\n  }\n\n  createFlamethrower(startX, startY, endX, endY, color = '#FF6B6B', duration = 1000) {\n    if (this.activeFlames.length >= this.maxFlames) return;\n\n    const flame = {\n      startX,\n      startY,\n      endX,\n      endY,\n      color,\n      duration,\n      age: 0,\n      intensity: 1,\n      particles: []\n    };\n\n    this.activeFlames.push(flame);\n    this.generateFlameParticles(flame);\n  }\n\n  generateFlameParticles(flame) {\n    const distance = Math.sqrt(\n      Math.pow(flame.endX - flame.startX, 2) + \n      Math.pow(flame.endY - flame.startY, 2)\n    );\n    \n    const particleCount = Math.min(Math.floor(distance / 10), 50);\n    \n    for (let i = 0; i < particleCount; i++) {\n      const progress = i / particleCount;\n      const x = flame.startX + (flame.endX - flame.startX) * progress;\n      const y = flame.startY + (flame.endY - flame.startY) * progress;\n      \n      // Add some randomness\n      const offsetX = (Math.random() - 0.5) * 20;\n      const offsetY = (Math.random() - 0.5) * 20;\n      \n      // Particle velocity\n      const dx = (Math.random() - 0.5) * 2;\n      const dy = (Math.random() - 0.5) * 2;\n      \n      // Color variations\n      const colors = ['#FF6B6B', '#FF8E53', '#FF6B35', '#FFD93D'];\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      \n      this.particleManager.createParticle(\n        x + offsetX,\n        y + offsetY,\n        color,\n        Math.random() * 4 + 2, // size\n        dx,\n        dy,\n        500 + Math.random() * 500 // duration\n      );\n    }\n  }\n\n  update(deltaTime) {\n    this.activeFlames = this.activeFlames.filter(flame => {\n      flame.age += deltaTime;\n      flame.intensity = Math.max(0, 1 - (flame.age / flame.duration));\n      \n      // Generate more particles during the flame's lifetime\n      if (flame.intensity > 0.3 && Math.random() < 0.1) {\n        this.generateFlameParticles(flame);\n      }\n      \n      return flame.age < flame.duration;\n    });\n  }\n\n  draw() {\n    this.ctx.save();\n    \n    this.activeFlames.forEach(flame => {\n      if (flame.intensity <= 0) return;\n      \n      // Draw laser beam\n      this.ctx.globalAlpha = flame.intensity * 0.8;\n      this.ctx.strokeStyle = flame.color;\n      this.ctx.lineWidth = 4 * flame.intensity;\n      this.ctx.shadowColor = flame.color;\n      this.ctx.shadowBlur = 10 * flame.intensity;\n      \n      this.ctx.beginPath();\n      this.ctx.moveTo(flame.startX, flame.startY);\n      this.ctx.lineTo(flame.endX, flame.endY);\n      this.ctx.stroke();\n      \n      // Draw core beam\n      this.ctx.globalAlpha = flame.intensity;\n      this.ctx.strokeStyle = '#FFFFFF';\n      this.ctx.lineWidth = 2 * flame.intensity;\n      this.ctx.shadowBlur = 5 * flame.intensity;\n      \n      this.ctx.beginPath();\n      this.ctx.moveTo(flame.startX, flame.startY);\n      this.ctx.lineTo(flame.endX, flame.endY);\n      this.ctx.stroke();\n    });\n    \n    this.ctx.restore();\n  }\n\n  checkCollision(targetX, targetY, targetRadius) {\n    return this.activeFlames.some(flame => {\n      if (flame.intensity <= 0) return false;\n      \n      // Check if target intersects with flame line\n      const A = flame.endY - flame.startY;\n      const B = flame.startX - flame.endX;\n      const C = flame.endX * flame.startY - flame.startX * flame.endY;\n      \n      const distance = Math.abs(A * targetX + B * targetY + C) / Math.sqrt(A * A + B * B);\n      \n      return distance <= targetRadius;\n    });\n  }\n\n  clear() {\n    this.activeFlames = [];\n  }\n}\n","export default class CenterPieceManager {\n  constructor(canvas, ctx, particleManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    this.centerX = canvas.width / 2;\n    this.centerY = canvas.height / 2;\n    this.radius = Math.min(canvas.width, canvas.height) * 0.1;\n    this.rotation = 0;\n    this.pulsePhase = 0;\n    this.swirlParticles = [];\n    this.lastParticleTime = 0;\n  }\n\n  update(deltaTime) {\n    this.rotation += deltaTime * 0.002;\n    this.pulsePhase += deltaTime * 0.003;\n    \n    // Generate swirl particles\n    this.lastParticleTime += deltaTime;\n    if (this.lastParticleTime > 100) { // Every 100ms\n      this.generateSwirlParticle();\n      this.lastParticleTime = 0;\n    }\n    \n    // Update swirl particles\n    this.swirlParticles = this.swirlParticles.filter(particle => {\n      particle.angle += particle.speed;\n      particle.radius += particle.radiusSpeed;\n      particle.life -= deltaTime;\n      \n      particle.x = this.centerX + Math.cos(particle.angle) * particle.radius;\n      particle.y = this.centerY + Math.sin(particle.angle) * particle.radius;\n      \n      return particle.life > 0 && particle.radius < this.canvas.width;\n    });\n  }\n\n  generateSwirlParticle() {\n    const particle = {\n      angle: Math.random() * Math.PI * 2,\n      radius: this.radius,\n      radiusSpeed: 0.5 + Math.random() * 1,\n      speed: 0.02 + Math.random() * 0.03,\n      x: this.centerX,\n      y: this.centerY,\n      color: this.getRandomColor(),\n      size: 2 + Math.random() * 3,\n      life: 3000 + Math.random() * 2000\n    };\n    \n    this.swirlParticles.push(particle);\n  }\n\n  getRandomColor() {\n    const colors = ['#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57', '#FF6B6B'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  draw() {\n    this.ctx.save();\n    \n    // Draw center piece\n    const pulseSize = this.radius + Math.sin(this.pulsePhase) * 10;\n    \n    // Outer glow\n    this.ctx.shadowColor = '#4ECDC4';\n    this.ctx.shadowBlur = 20;\n    this.ctx.fillStyle = 'rgba(78, 205, 196, 0.3)';\n    this.ctx.beginPath();\n    this.ctx.arc(this.centerX, this.centerY, pulseSize * 1.5, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Main center piece\n    this.ctx.shadowBlur = 10;\n    this.ctx.fillStyle = '#4ECDC4';\n    this.ctx.beginPath();\n    this.ctx.arc(this.centerX, this.centerY, pulseSize, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Inner core\n    this.ctx.shadowBlur = 5;\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.beginPath();\n    this.ctx.arc(this.centerX, this.centerY, pulseSize * 0.6, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Rotating spokes\n    this.ctx.strokeStyle = '#FFFFFF';\n    this.ctx.lineWidth = 2;\n    this.ctx.shadowBlur = 8;\n    \n    for (let i = 0; i < 8; i++) {\n      const angle = this.rotation + (i * Math.PI / 4);\n      const startRadius = pulseSize * 0.7;\n      const endRadius = pulseSize * 1.2;\n      \n      const startX = this.centerX + Math.cos(angle) * startRadius;\n      const startY = this.centerY + Math.sin(angle) * startRadius;\n      const endX = this.centerX + Math.cos(angle) * endRadius;\n      const endY = this.centerY + Math.sin(angle) * endRadius;\n      \n      this.ctx.beginPath();\n      this.ctx.moveTo(startX, startY);\n      this.ctx.lineTo(endX, endY);\n      this.ctx.stroke();\n    }\n    \n    // Draw swirl particles\n    this.swirlParticles.forEach(particle => {\n      const alpha = particle.life / 3000;\n      this.ctx.globalAlpha = alpha;\n      this.ctx.fillStyle = particle.color;\n      this.ctx.shadowBlur = 5;\n      this.ctx.shadowColor = particle.color;\n      \n      this.ctx.beginPath();\n      this.ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n      this.ctx.fill();\n    });\n    \n    this.ctx.restore();\n  }\n\n  checkCollision(x, y, radius) {\n    const distance = Math.sqrt(\n      Math.pow(x - this.centerX, 2) + \n      Math.pow(y - this.centerY, 2)\n    );\n    return distance < (this.radius + radius);\n  }\n\n  resize(canvas) {\n    this.canvas = canvas;\n    this.centerX = canvas.width / 2;\n    this.centerY = canvas.height / 2;\n    this.radius = Math.min(canvas.width, canvas.height) * 0.1;\n  }\n\n  reset() {\n    this.swirlParticles = [];\n    this.rotation = 0;\n    this.pulsePhase = 0;\n  }\n}\n","export default class MultiTouchManager {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.pointers = new Map();\n    this.callbacks = {\n      pointerdown: [],\n      pointermove: [],\n      pointerup: []\n    };\n    \n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n    // Pointer events (supports mouse, touch, pen)\n    this.canvas.addEventListener('pointerdown', (e) => this.handlePointerDown(e));\n    this.canvas.addEventListener('pointermove', (e) => this.handlePointerMove(e));\n    this.canvas.addEventListener('pointerup', (e) => this.handlePointerUp(e));\n    this.canvas.addEventListener('pointercancel', (e) => this.handlePointerUp(e));\n    \n    // Prevent default touch behaviors\n    this.canvas.addEventListener('touchstart', (e) => e.preventDefault());\n    this.canvas.addEventListener('touchmove', (e) => e.preventDefault());\n    this.canvas.addEventListener('touchend', (e) => e.preventDefault());\n  }\n\n  handlePointerDown(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const pointer = {\n      id: e.pointerId,\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n      startX: e.clientX - rect.left,\n      startY: e.clientY - rect.top,\n      type: e.pointerType,\n      pressure: e.pressure || 1,\n      startTime: performance.now()\n    };\n    \n    this.pointers.set(e.pointerId, pointer);\n    this.triggerCallbacks('pointerdown', pointer, e);\n  }\n\n  handlePointerMove(e) {\n    if (!this.pointers.has(e.pointerId)) return;\n    \n    const rect = this.canvas.getBoundingClientRect();\n    const pointer = this.pointers.get(e.pointerId);\n    \n    pointer.x = e.clientX - rect.left;\n    pointer.y = e.clientY - rect.top;\n    pointer.pressure = e.pressure || 1;\n    \n    this.triggerCallbacks('pointermove', pointer, e);\n  }\n\n  handlePointerUp(e) {\n    if (!this.pointers.has(e.pointerId)) return;\n    \n    const pointer = this.pointers.get(e.pointerId);\n    pointer.endTime = performance.now();\n    \n    this.triggerCallbacks('pointerup', pointer, e);\n    this.pointers.delete(e.pointerId);\n  }\n\n  triggerCallbacks(eventType, pointer, originalEvent) {\n    this.callbacks[eventType].forEach(callback => {\n      try {\n        callback(pointer, originalEvent);\n      } catch (error) {\n        console.error(`Error in ${eventType} callback:`, error);\n      }\n    });\n  }\n\n  addEventListener(eventType, callback) {\n    if (this.callbacks[eventType]) {\n      this.callbacks[eventType].push(callback);\n    }\n  }\n\n  removeEventListener(eventType, callback) {\n    if (this.callbacks[eventType]) {\n      const index = this.callbacks[eventType].indexOf(callback);\n      if (index > -1) {\n        this.callbacks[eventType].splice(index, 1);\n      }\n    }\n  }\n\n  getActivePointers() {\n    return Array.from(this.pointers.values());\n  }\n\n  getPointerCount() {\n    return this.pointers.size;\n  }\n\n  getPointer(id) {\n    return this.pointers.get(id);\n  }\n\n  isMultiTouch() {\n    return this.pointers.size > 1;\n  }\n\n  getPinchDistance() {\n    const pointers = this.getActivePointers();\n    if (pointers.length < 2) return null;\n    \n    const [p1, p2] = pointers;\n    return Math.sqrt(\n      Math.pow(p2.x - p1.x, 2) + \n      Math.pow(p2.y - p1.y, 2)\n    );\n  }\n\n  getPinchCenter() {\n    const pointers = this.getActivePointers();\n    if (pointers.length < 2) return null;\n    \n    const [p1, p2] = pointers;\n    return {\n      x: (p1.x + p2.x) / 2,\n      y: (p1.y + p2.y) / 2\n    };\n  }\n\n  clear() {\n    this.pointers.clear();\n  }\n\n  destroy() {\n    this.canvas.removeEventListener('pointerdown', this.handlePointerDown);\n    this.canvas.removeEventListener('pointermove', this.handlePointerMove);\n    this.canvas.removeEventListener('pointerup', this.handlePointerUp);\n    this.canvas.removeEventListener('pointercancel', this.handlePointerUp);\n    this.canvas.removeEventListener('touchstart', (e) => e.preventDefault());\n    this.canvas.removeEventListener('touchmove', (e) => e.preventDefault());\n    this.canvas.removeEventListener('touchend', (e) => e.preventDefault());\n    this.clear();\n  }\n}\n","export default class GlassShatterManager {\n  constructor(canvas, ctx, particleManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    \n    // State management\n    this.isShattered = false;\n    this.shatterTime = 0;\n    this.maxShatterTime = 3000;\n    this.fadeAlpha = 0;\n    \n    // Advanced crack system\n    this.cracks = [];\n    this.fragments = [];\n    this.stressPoints = [];\n    \n    // Physics parameters\n    this.physics = {\n      gravity: 0.3,\n      friction: 0.98,\n      elasticity: 0.4,\n      fragmentCount: 25,\n      crackPropagationSpeed: 300,\n      stressFieldRadius: 150\n    };\n    \n    // Visual effects\n    this.effects = {\n      refractionIntensity: 0.8,\n      reflectionIntensity: 0.6,\n      glowIntensity: 0.4,\n      shimmerPhase: 0\n    };\n    \n    // Performance optimization\n    this.performanceLevel = this.detectPerformanceLevel();\n    this.adjustSettingsForPerformance();\n  }\n\n  detectPerformanceLevel() {\n    // Simple performance detection based on canvas size and device\n    const pixelCount = this.canvas.width * this.canvas.height;\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    \n    if (isMobile || pixelCount > 1920 * 1080) {\n      return 'low';\n    } else if (pixelCount > 1280 * 720) {\n      return 'medium';\n    }\n    return 'high';\n  }\n\n  adjustSettingsForPerformance() {\n    switch (this.performanceLevel) {\n      case 'low':\n        this.physics.fragmentCount = 15;\n        this.physics.crackPropagationSpeed = 200;\n        this.effects.refractionIntensity = 0.4;\n        break;\n      case 'medium':\n        this.physics.fragmentCount = 20;\n        this.physics.crackPropagationSpeed = 250;\n        this.effects.refractionIntensity = 0.6;\n        break;\n      case 'high':\n        // Use default settings\n        break;\n    }\n  }\n\n  createShatterEffect(impactX, impactY, intensity = 1) {\n    this.reset();\n    this.isShattered = true;\n    this.fadeAlpha = Math.min(1, 0.9 * intensity);\n    this.shatterTime = 0;\n    \n    // Create impact point\n    const impactPoint = {\n      x: impactX,\n      y: impactY,\n      intensity: intensity,\n      radius: Math.min(100, 50 * intensity)\n    };\n    \n    // Generate realistic crack propagation\n    this.generateRealisticCracks(impactPoint);\n    \n    // Create glass fragments with physics\n    this.generateGlassFragments(impactPoint);\n    \n    // Add stress field visualization\n    this.createStressField(impactPoint);\n    \n    // Enhanced particle effects\n    this.createAdvancedParticles(impactPoint);\n  }\n\n  generateRealisticCracks(impactPoint) {\n    const { x, y, intensity } = impactPoint;\n    this.cracks = [];\n    \n    // Primary radial cracks\n    const numPrimary = Math.floor(6 + intensity * 8);\n    for (let i = 0; i < numPrimary; i++) {\n      const angle = (i / numPrimary) * Math.PI * 2 + (Math.random() - 0.5) * 0.5;\n      const crack = this.createCrackLine(x, y, angle, intensity, 'primary');\n      this.cracks.push(crack);\n    }\n    \n    // Secondary branching cracks\n    const numSecondary = Math.floor(4 + intensity * 6);\n    for (let i = 0; i < numSecondary; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const distance = 50 + Math.random() * 80;\n      const startX = x + Math.cos(angle) * distance;\n      const startY = y + Math.sin(angle) * distance;\n      const crack = this.createCrackLine(startX, startY, angle + Math.PI/2, intensity * 0.7, 'secondary');\n      this.cracks.push(crack);\n    }\n    \n    // Circular stress cracks\n    const numCircular = Math.floor(2 + intensity * 3);\n    for (let i = 0; i < numCircular; i++) {\n      const radius = 30 + i * 25 + Math.random() * 20;\n      const crack = this.createCircularCrack(x, y, radius, intensity);\n      this.cracks.push(crack);\n    }\n  }\n\n  createCrackLine(startX, startY, angle, intensity, type) {\n    const crack = {\n      points: [],\n      type: type,\n      width: type === 'primary' ? 2 + intensity : 1 + intensity * 0.5,\n      opacity: 0.8,\n      propagationSpeed: this.physics.crackPropagationSpeed,\n      currentLength: 0,\n      targetLength: (type === 'primary' ? 150 : 80) + Math.random() * 100 * intensity\n    };\n    \n    // Generate crack path with realistic imperfections\n    const segments = Math.floor(crack.targetLength / 10);\n    let currentX = startX;\n    let currentY = startY;\n    let currentAngle = angle;\n    \n    for (let i = 0; i <= segments; i++) {\n      const progress = i / segments;\n      const segmentLength = 10 + Math.random() * 5;\n      \n      // Add natural deviation\n      const deviation = (Math.random() - 0.5) * 0.3 * progress;\n      currentAngle += deviation;\n      \n      // Add stress-based branching\n      if (Math.random() < 0.1 * intensity && i > 2) {\n        const branchAngle = currentAngle + (Math.random() - 0.5) * Math.PI/3;\n        const branchLength = segmentLength * (0.5 + Math.random() * 0.5);\n        const branchX = currentX + Math.cos(branchAngle) * branchLength;\n        const branchY = currentY + Math.sin(branchAngle) * branchLength;\n        \n        crack.points.push({\n          x: branchX,\n          y: branchY,\n          isBranch: true,\n          opacity: 0.6\n        });\n      }\n      \n      currentX += Math.cos(currentAngle) * segmentLength;\n      currentY += Math.sin(currentAngle) * segmentLength;\n      \n      // Check boundaries\n      if (currentX < 0 || currentX > this.canvas.width || currentY < 0 || currentY > this.canvas.height) {\n        break;\n      }\n      \n      crack.points.push({\n        x: currentX,\n        y: currentY,\n        isBranch: false,\n        opacity: 0.8 * (1 - progress * 0.3)\n      });\n    }\n    \n    return crack;\n  }\n\n  createCircularCrack(centerX, centerY, radius, intensity) {\n    const crack = {\n      points: [],\n      type: 'circular',\n      width: 1 + intensity * 0.5,\n      opacity: 0.6,\n      propagationSpeed: this.physics.crackPropagationSpeed * 0.7,\n      currentLength: 0,\n      targetLength: radius * Math.PI * 2\n    };\n    \n    const segments = Math.floor(radius * 0.3);\n    for (let i = 0; i < segments; i++) {\n      const angle = (i / segments) * Math.PI * 2;\n      const deviation = (Math.random() - 0.5) * 15;\n      const x = centerX + Math.cos(angle) * (radius + deviation);\n      const y = centerY + Math.sin(angle) * (radius + deviation);\n      \n      crack.points.push({\n        x: x,\n        y: y,\n        isBranch: false,\n        opacity: 0.6\n      });\n    }\n    \n    return crack;\n  }\n\n  generateGlassFragments(impactPoint) {\n    this.fragments = [];\n    const { x, y, intensity } = impactPoint;\n    \n    for (let i = 0; i < this.physics.fragmentCount; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const distance = Math.random() * 80 * intensity;\n      const size = 3 + Math.random() * 8;\n      \n      const fragment = {\n        x: x + Math.cos(angle) * distance,\n        y: y + Math.sin(angle) * distance,\n        vx: Math.cos(angle) * (2 + Math.random() * 6) * intensity,\n        vy: Math.sin(angle) * (2 + Math.random() * 6) * intensity - Math.random() * 2,\n        size: size,\n        rotation: Math.random() * Math.PI * 2,\n        rotationSpeed: (Math.random() - 0.5) * 0.3,\n        opacity: 0.7 + Math.random() * 0.3,\n        color: this.getGlassColor(),\n        life: 1.0,\n        decay: 0.0003 + Math.random() * 0.0002\n      };\n      \n      this.fragments.push(fragment);\n    }\n  }\n\n  createStressField(impactPoint) {\n    this.stressPoints = [];\n    const { x, y, intensity, radius } = impactPoint;\n    \n    // Create stress visualization points\n    const stressCount = Math.floor(15 + intensity * 10);\n    for (let i = 0; i < stressCount; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const distance = Math.random() * radius;\n      \n      this.stressPoints.push({\n        x: x + Math.cos(angle) * distance,\n        y: y + Math.sin(angle) * distance,\n        intensity: intensity * (1 - distance / radius),\n        phase: Math.random() * Math.PI * 2,\n        radius: 2 + Math.random() * 4\n      });\n    }\n  }\n\n  createAdvancedParticles(impactPoint) {\n    const { x, y, intensity } = impactPoint;\n    const particleCount = Math.floor(40 + intensity * 80);\n    \n    for (let i = 0; i < particleCount; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = 2 + Math.random() * 5;\n      const distance = Math.random() * 60;\n      \n      const startX = x + Math.cos(angle) * distance;\n      const startY = y + Math.sin(angle) * distance;\n      \n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed + Math.random() * 1;\n      \n      const size = 1 + Math.random() * 3;\n      const duration = 800 + Math.random() * 1500;\n      \n      const color = this.getGlassParticleColor();\n      this.particleManager.createParticle(startX, startY, color, size, dx, dy, duration);\n    }\n  }\n\n  getGlassColor() {\n    const colors = [\n      'rgba(255, 255, 255, 0.9)',\n      'rgba(240, 248, 255, 0.8)',\n      'rgba(220, 235, 255, 0.7)',\n      'rgba(200, 230, 255, 0.8)'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  getGlassParticleColor() {\n    const colors = [\n      'rgba(255, 255, 255, 0.9)',\n      'rgba(180, 220, 255, 0.7)',\n      'rgba(200, 240, 255, 0.8)',\n      'rgba(160, 200, 255, 0.6)'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  update(deltaTime) {\n    if (!this.isShattered) return;\n    \n    this.shatterTime += deltaTime;\n    const dt = deltaTime / 16; // Normalize to 60fps\n    \n    // Update fade effect\n    const fadeProgress = this.shatterTime / this.maxShatterTime;\n    this.fadeAlpha = Math.max(0, 0.9 * (1 - fadeProgress));\n    \n    // Update shimmer effect\n    this.effects.shimmerPhase += 0.1 * dt;\n    \n    // Update crack propagation\n    this.updateCrackPropagation(dt);\n    \n    // Update glass fragments\n    this.updateFragments(dt);\n    \n    // Update stress field\n    this.updateStressField(dt);\n    \n    // Cleanup when done\n    if (this.shatterTime >= this.maxShatterTime) {\n      this.reset();\n    }\n  }\n\n  updateCrackPropagation(dt) {\n    this.cracks.forEach(crack => {\n      if (crack.currentLength < crack.targetLength) {\n        crack.currentLength += crack.propagationSpeed * dt;\n        crack.currentLength = Math.min(crack.currentLength, crack.targetLength);\n      }\n    });\n  }\n\n  updateFragments(dt) {\n    this.fragments.forEach(fragment => {\n      // Apply physics\n      fragment.x += fragment.vx * dt;\n      fragment.y += fragment.vy * dt;\n      fragment.vy += this.physics.gravity * dt;\n      \n      // Apply friction\n      fragment.vx *= this.physics.friction;\n      fragment.vy *= this.physics.friction;\n      \n      // Update rotation\n      fragment.rotation += fragment.rotationSpeed * dt;\n      \n      // Update life\n      fragment.life -= fragment.decay * dt;\n      fragment.opacity = Math.max(0, fragment.life * 0.8);\n      \n      // Boundary collision\n      if (fragment.x < 0 || fragment.x > this.canvas.width) {\n        fragment.vx *= -this.physics.elasticity;\n      }\n      if (fragment.y > this.canvas.height) {\n        fragment.vy *= -this.physics.elasticity;\n        fragment.y = this.canvas.height;\n      }\n    });\n    \n    // Remove dead fragments\n    this.fragments = this.fragments.filter(f => f.life > 0);\n  }\n\n  updateStressField(dt) {\n    this.stressPoints.forEach(point => {\n      point.phase += 0.15 * dt;\n      point.intensity *= 0.995; // Gradual fade\n    });\n  }\n\n  draw() {\n    if (!this.isShattered || this.fadeAlpha <= 0) return;\n    \n    this.ctx.save();\n    \n    // Draw stress field (subtle background effect)\n    this.drawStressField();\n    \n    // Draw crack patterns\n    this.drawCracks();\n    \n    // Draw glass fragments\n    this.drawFragments();\n    \n    // Draw refraction effect\n    this.drawRefractionEffect();\n    \n    this.ctx.restore();\n  }\n\n  drawStressField() {\n    this.ctx.globalAlpha = this.fadeAlpha * 0.3;\n    this.stressPoints.forEach(point => {\n      const intensity = point.intensity * (1 + Math.sin(point.phase) * 0.3);\n      const radius = point.radius * intensity;\n      \n      const gradient = this.ctx.createRadialGradient(\n        point.x, point.y, 0,\n        point.x, point.y, radius\n      );\n      gradient.addColorStop(0, `rgba(255, 255, 255, ${intensity * 0.4})`);\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n      \n      this.ctx.fillStyle = gradient;\n      this.ctx.beginPath();\n      this.ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\n      this.ctx.fill();\n    });\n  }\n\n  drawCracks() {\n    this.ctx.globalAlpha = this.fadeAlpha;\n    this.ctx.lineCap = 'round';\n    this.ctx.lineJoin = 'round';\n    \n    this.cracks.forEach(crack => {\n      if (crack.points.length < 2) return;\n      \n      const drawLength = Math.min(crack.currentLength, crack.targetLength);\n      const pointsCount = Math.floor((drawLength / crack.targetLength) * crack.points.length);\n      \n      // Main crack line\n      this.ctx.strokeStyle = `rgba(255, 255, 255, ${crack.opacity})`;\n      this.ctx.lineWidth = crack.width;\n      this.ctx.shadowColor = 'rgba(255, 255, 255, 0.8)';\n      this.ctx.shadowBlur = crack.width * 2;\n      \n      this.ctx.beginPath();\n      if (pointsCount > 0) {\n        this.ctx.moveTo(crack.points[0].x, crack.points[0].y);\n        for (let i = 1; i < pointsCount; i++) {\n          const point = crack.points[i];\n          this.ctx.globalAlpha = this.fadeAlpha * point.opacity;\n          this.ctx.lineTo(point.x, point.y);\n        }\n      }\n      this.ctx.stroke();\n      \n      // Add shimmer effect\n      this.ctx.globalAlpha = this.fadeAlpha * 0.5 * (1 + Math.sin(this.effects.shimmerPhase) * 0.3);\n      this.ctx.strokeStyle = `rgba(180, 220, 255, 0.6)`;\n      this.ctx.lineWidth = crack.width * 0.5;\n      this.ctx.stroke();\n    });\n  }\n\n  drawFragments() {\n    this.fragments.forEach(fragment => {\n      this.ctx.save();\n      this.ctx.globalAlpha = fragment.opacity * this.fadeAlpha;\n      this.ctx.translate(fragment.x, fragment.y);\n      this.ctx.rotate(fragment.rotation);\n      \n      // Draw fragment with glass-like appearance\n      this.ctx.fillStyle = fragment.color;\n      this.ctx.beginPath();\n      this.ctx.rect(-fragment.size/2, -fragment.size/2, fragment.size, fragment.size);\n      this.ctx.fill();\n      \n      // Add highlight\n      this.ctx.globalAlpha = fragment.opacity * this.fadeAlpha * 0.8;\n      this.ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n      this.ctx.beginPath();\n      this.ctx.rect(-fragment.size/2, -fragment.size/2, fragment.size/3, fragment.size/3);\n      this.ctx.fill();\n      \n      this.ctx.restore();\n    });\n  }\n\n  drawRefractionEffect() {\n    if (this.effects.refractionIntensity <= 0) return;\n    \n    this.ctx.globalAlpha = this.fadeAlpha * this.effects.refractionIntensity * 0.3;\n    this.ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  reset() {\n    this.isShattered = false;\n    this.shatterTime = 0;\n    this.fadeAlpha = 0;\n    this.cracks = [];\n    this.fragments = [];\n    this.stressPoints = [];\n    this.effects.shimmerPhase = 0;\n  }\n\n  isActive() {\n    return this.isShattered;\n  }\n\n  triggerShatter(x, y, intensity = 1) {\n    this.createShatterEffect(x, y, intensity);\n  }\n}\n","export class ProgressManager {\n  constructor() {\n    this.storageKey = 'superstudent_progress';\n    this.levels = ['colors', 'shapes', 'alphabet', 'numbers', 'clcase'];\n    this.progress = this.loadProgress();\n  }\n\n  loadProgress() {\n    try {\n      const saved = localStorage.getItem(this.storageKey);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    } catch (error) {\n      console.warn('Failed to load progress:', error);\n    }\n    \n    // Default progress - only colors level unlocked initially\n    return {\n      unlockedLevels: ['colors'],\n      completedLevels: [],\n      scores: {},\n      totalScore: 0\n    };\n  }\n\n  saveProgress() {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(this.progress));\n    } catch (error) {\n      console.warn('Failed to save progress:', error);\n    }\n  }\n\n  isLevelUnlocked(levelName) {\n    return this.progress.unlockedLevels.includes(levelName);\n  }\n\n  isLevelCompleted(levelName) {\n    return this.progress.completedLevels.includes(levelName);\n  }\n\n  completeLevel(levelName, score = 0) {\n    // Mark as completed\n    if (!this.progress.completedLevels.includes(levelName)) {\n      this.progress.completedLevels.push(levelName);\n    }\n\n    // Update score\n    this.progress.scores[levelName] = Math.max(this.progress.scores[levelName] || 0, score);\n    this.progress.totalScore = Object.values(this.progress.scores).reduce((sum, s) => sum + s, 0);\n\n    // Unlock next level\n    const currentIndex = this.levels.indexOf(levelName);\n    if (currentIndex >= 0 && currentIndex < this.levels.length - 1) {\n      const nextLevel = this.levels[currentIndex + 1];\n      if (!this.progress.unlockedLevels.includes(nextLevel)) {\n        this.progress.unlockedLevels.push(nextLevel);\n      }\n    }\n\n    this.saveProgress();\n  }\n\n  getLevelScore(levelName) {\n    return this.progress.scores[levelName] || 0;\n  }\n\n  getProgress() {\n    return { ...this.progress };\n  }\n\n  resetProgress() {\n    this.progress = {\n      unlockedLevels: ['colors'],\n      completedLevels: [],\n      scores: {},\n      totalScore: 0\n    };\n    this.saveProgress();\n  }\n\n  getCompletionPercentage() {\n    return Math.round((this.progress.completedLevels.length / this.levels.length) * 100);\n  }\n}\n","export class BaseLevel {\n  // Accept core level parameters\n  constructor(canvas, ctx, managers, helpers) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.managers = managers;\n    this.helpers = helpers;\n    this.running = false;\n    this.score = 0;\n  }\n\n  async init() {\n    throw new Error('init() must be implemented by subclass');\n  }\n\n  update(deltaTime) {\n    throw new Error('update() must be implemented by subclass');\n  }\n\n  render() {\n    throw new Error('render() must be implemented by subclass');\n  }\n\n  cleanup() {\n    throw new Error('cleanup() must be implemented by subclass');\n  }\n\n  async start() {\n    await this.init();\n    this.running = true;\n  }\n\n  end() {\n    this.running = false;\n    this.cleanup();\n    \n    // Trigger completion callback if available\n    if (this.helpers && this.helpers.onLevelComplete) {\n      this.helpers.onLevelComplete(this.score);\n    }\n  }\n\n  // Pause the level\n  pause() {\n    this.running = false;\n  }\n\n  // Resume the level\n  resume() {\n    this.running = true;\n  }\n\n  // Reset the level state\n  reset() {\n    this.cleanup();\n    this.score = 0;\n    // Re-initialize level\n    this.init();\n  }\n\n  // Update score\n  updateScore(points) {\n    this.score = Math.max(0, this.score + points);\n    if (this.managers && this.managers.hud) {\n      this.managers.hud.updateScore(points);\n    }\n  }\n\n  // Handle canvas resize\n  resize(canvas) {\n    this.canvas = canvas;\n  }\n}\n","import { GAME_CONFIG } from './constants.js';\n\n/**\n * Provides level-specific parameters and rules.\n */\nexport const LevelSettings = {\n  colors: {\n    totalDots: GAME_CONFIG.COLORS_LEVEL_CONFIG?.TOTAL_DOTS || 85,\n    targetDots: GAME_CONFIG.COLORS_LEVEL_CONFIG?.TARGET_DOTS || 17,\n    distractorDots: GAME_CONFIG.COLORS_LEVEL_CONFIG?.DISTRACTOR_DOTS || 68,\n    dispersionFrames: GAME_CONFIG.COLORS_LEVEL_CONFIG?.DISPERSION_FRAMES || 30,\n    bounceDampening: GAME_CONFIG.COLORS_LEVEL_CONFIG?.DOT_BOUNCE_DAMPENING || 0.98,\n    shimmerFreq: GAME_CONFIG.COLORS_LEVEL_CONFIG?.SHIMMER_FREQUENCY || 0.05,\n    glowFreq: GAME_CONFIG.COLORS_LEVEL_CONFIG?.GLOW_FREQUENCY || 0.1,\n    memoryTime: GAME_CONFIG.COLORS_LEVEL_CONFIG?.MEMORY_DISPLAY_TIME || 2000,\n    collisionDelay: GAME_CONFIG.COLORS_LEVEL_CONFIG?.COLLISION_ENABLED_DELAY || 250\n  },\n  text: {\n    centerFontSize: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CENTER_FONT_SIZE || 900,\n    fallingFontSize: GAME_CONFIG.TEXT_LEVEL_CONFIG?.FALLING_FONT_SIZE || 240,\n    spawnEdgeBuffer: GAME_CONFIG.TEXT_LEVEL_CONFIG?.SPAWN_EDGE_BUFFER || 50,\n    advanceCount: GAME_CONFIG.TEXT_LEVEL_CONFIG?.TARGET_ADVANCE_COUNT || 5,\n    checkpointInterval: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CHECKPOINT_INTERVAL || 5,\n    abilities: GAME_CONFIG.TEXT_LEVEL_CONFIG?.ABILITIES || ['laser','aoe','charge_up'],\n    aoeRadius: GAME_CONFIG.TEXT_LEVEL_CONFIG?.AOE_RADIUS || 200,\n    chargeDuration: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CHARGE_UP_DURATION || 60,\n    laserWidth: GAME_CONFIG.TEXT_LEVEL_CONFIG?.LASER_WIDTH || [3,5],\n    swirlCount: GAME_CONFIG.TEXT_LEVEL_CONFIG?.SWIRL_PARTICLE_COUNT || 30,\n    orbitRadius: GAME_CONFIG.TEXT_LEVEL_CONFIG?.CENTER_PIECE_ORBIT_RADIUS || 100\n  }\n};\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../config/constants.js';\nimport { LevelSettings } from '../config/gameSettings.js';\n\nexport default class ColorsLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.memoryTime = LevelSettings.colors.memoryTime;\n    this.dots = [];\n    this.state = 'memory';\n    this.targetDotsRemaining = 0;\n    this.onPointerDown = this.onPointerDown.bind(this);\n    \n    // Enhanced features\n    this.correctStreak = 0;\n    this.lastCorrectTime = 0;\n    this.levelStartTime = 0;\n  }\n\n  async init() {\n    // Choose first color in sequence\n    const colorsList = GAME_CONFIG.COLORS.COLORS_LIST;\n    this.targetColor = colorsList[0];\n    const rgb = this.targetColor.join(',');\n    this.mother = {\n      x: this.canvas.width / 2,\n      y: this.canvas.height / 2,\n      radius: this.managers.displaySettings.motherRadius,\n      color: `rgb(${rgb})`\n    };\n    \n    // Enhanced sound feedback\n    if (this.managers.sound) {\n      // Play level start sound\n      this.managers.sound.playSuccess();\n      \n      // Resume audio context\n      await this.managers.sound.resumeContext();\n    }\n    \n    // Show memory dot then disperse\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.levelStartTime = performance.now();\n    \n    setTimeout(() => this.disperse(), this.memoryTime);\n  }\n\n  disperse() {\n    this.state = 'playing';\n    const cfg = LevelSettings.colors;\n    const total = cfg.totalDots;\n    const targetCount = cfg.targetDots;\n    this.targetDotsRemaining = targetCount;\n    const others = GAME_CONFIG.COLORS.COLORS_LIST.filter(c => c !== this.targetColor);\n    \n    // Generate target dots\n    for (let i = 0; i < targetCount; i++) {\n      this.addDot(this.targetColor, true);\n    }\n    \n    // Generate distractor dots\n    for (let i = 0; i < total - targetCount; i++) {\n      const color = others[Math.floor(Math.random() * others.length)];\n      this.addDot(color, false);\n    }\n    \n    // Play dispersion sound effect\n    if (this.managers.sound) {\n      this.managers.sound.playPop(0.8);\n    }\n  }\n\n  addDot(colArray, isTarget) {\n    const angle = Math.random() * Math.PI * 2;\n    const speed = Math.random() * (GAME_CONFIG.DOT_SPEED_RANGE[1] - GAME_CONFIG.DOT_SPEED_RANGE[0]) + GAME_CONFIG.DOT_SPEED_RANGE[0];\n    const dot = {\n      x: this.mother.x,\n      y: this.mother.y,\n      radius: GAME_CONFIG.DOT_RADIUS,\n      color: `rgb(${colArray.join(',')})`,\n      dx: Math.cos(angle) * speed,\n      dy: Math.sin(angle) * speed,\n      isTarget: isTarget,\n      shimmer: Math.random() * Math.PI * 2,\n      pulsePhase: Math.random() * Math.PI * 2,\n      trail: []\n    };\n    this.dots.push(dot);\n  }\n\n  update(deltaTime) {\n    if (this.state !== 'playing') return;\n    \n    const dt = deltaTime / 16;\n    this.dots.forEach(dot => {\n      // Update position\n      dot.x += dot.dx * dt;\n      dot.y += dot.dy * dt;\n      \n      // Update visual effects\n      dot.shimmer += 0.1 * dt;\n      dot.pulsePhase += 0.05 * dt;\n      \n      // Add trail effect for target dots\n      if (dot.isTarget) {\n        dot.trail.push({ x: dot.x, y: dot.y, alpha: 1.0 });\n        if (dot.trail.length > 10) {\n          dot.trail.shift();\n        }\n        \n        // Fade trail\n        dot.trail.forEach((point, index) => {\n          point.alpha = (index + 1) / dot.trail.length * 0.5;\n        });\n      }\n      \n      // Bounce on edges with sound\n      if (dot.x - dot.radius < 0 || dot.x + dot.radius > this.canvas.width) {\n        dot.dx *= -1;\n        if (this.managers.sound && Math.random() < 0.1) {\n          this.managers.sound.playPop(0.3);\n        }\n      }\n      if (dot.y - dot.radius < 0 || dot.y + dot.radius > this.canvas.height) {\n        dot.dy *= -1;\n        if (this.managers.sound && Math.random() < 0.1) {\n          this.managers.sound.playPop(0.3);\n        }\n      }\n    });\n  }\n\n  render() {\n    if (this.state === 'memory') {\n      // Draw mother dot with enhanced effects\n      this.drawEnhancedDot(this.mother, true, true);\n      \n      // Draw instruction text\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n      this.ctx.font = 'bold 24px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Remember this color!', this.canvas.width / 2, 50);\n      \n    } else if (this.state === 'playing') {\n      // Draw moving dots with enhanced visuals\n      this.dots.forEach(dot => {\n        this.drawEnhancedDot(dot, dot.isTarget);\n      });\n      \n      // Draw UI\n      this.drawUI();\n    }\n  }\n\n  drawEnhancedDot(dot, isTarget = false, isMemory = false) {\n    this.ctx.save();\n    \n    // Draw trail for target dots\n    if (isTarget && dot.trail) {\n      dot.trail.forEach(point => {\n        this.ctx.globalAlpha = point.alpha;\n        this.ctx.fillStyle = dot.color;\n        this.ctx.beginPath();\n        this.ctx.arc(point.x, point.y, dot.radius * 0.5, 0, Math.PI * 2);\n        this.ctx.fill();\n      });\n    }\n    \n    // Draw main dot with effects\n    this.ctx.globalAlpha = 1.0;\n    \n    // Glow effect for target dots\n    if (isTarget || isMemory) {\n      const glowIntensity = 0.5 + Math.sin(dot.pulsePhase || 0) * 0.3;\n      this.ctx.shadowColor = dot.color;\n      this.ctx.shadowBlur = 20 * glowIntensity;\n    }\n    \n    // Shimmer effect\n    const shimmerOffset = Math.sin(dot.shimmer || 0) * 5;\n    \n    this.ctx.fillStyle = dot.color;\n    this.ctx.beginPath();\n    this.ctx.arc(dot.x + shimmerOffset, dot.y, dot.radius, 0, Math.PI * 2);\n    this.ctx.fill();\n    \n    // Highlight for target dots\n    if (isTarget || isMemory) {\n      this.ctx.globalAlpha = 0.8;\n      this.ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\n      this.ctx.beginPath();\n      this.ctx.arc(dot.x + shimmerOffset - dot.radius * 0.3, dot.y - dot.radius * 0.3, dot.radius * 0.4, 0, Math.PI * 2);\n      this.ctx.fill();\n    }\n    \n    this.ctx.restore();\n  }\n\n  drawUI() {\n    // Draw progress\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText(`Target Dots Remaining: ${this.targetDotsRemaining}`, 20, 30);\n    \n    // Draw streak if active\n    if (this.correctStreak > 0) {\n      this.ctx.fillStyle = '#2ecc71';\n      this.ctx.fillText(`Streak: ${this.correctStreak}`, 20, 55);\n    }\n    \n    // Draw timer\n    const elapsed = performance.now() - this.levelStartTime;\n    const seconds = Math.floor(elapsed / 1000);\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    this.ctx.textAlign = 'right';\n    this.ctx.fillText(`Time: ${seconds}s`, this.canvas.width - 20, 30);\n  }\n\n  onPointerDown(event) {\n    if (this.state !== 'playing') return;\n    \n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    // Check for dot collision\n    for (let i = this.dots.length - 1; i >= 0; i--) {\n      const dot = this.dots[i];\n      const dx = x - dot.x;\n      const dy = y - dot.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance <= dot.radius) {\n        // Hit a dot\n        if (dot.isTarget) {\n          // Correct hit\n          this.handleCorrectHit(dot, i);\n        } else {\n          // Wrong hit\n          this.handleWrongHit(dot, i);\n        }\n        break;\n      }\n    }\n  }\n\n  handleCorrectHit(dot, index) {\n    this.correctStreak++;\n    this.lastCorrectTime = performance.now();\n    \n    // Enhanced explosion effect\n    this.helpers.createExplosion(dot.x, dot.y, dot.color, 1.5);\n    \n    // Sound feedback\n    if (this.managers.sound) {\n      this.managers.sound.playSuccess();\n      \n      // Additional pop sound\n      setTimeout(() => {\n        this.managers.sound.playPop(1.2);\n      }, 100);\n    }\n    \n    // Score calculation with streak bonus\n    const baseScore = 100;\n    const streakBonus = Math.min(this.correctStreak, 5) * 20;\n    const totalScore = baseScore + streakBonus;\n    \n    this.updateScore(totalScore);\n    this.targetDotsRemaining--;\n    this.dots.splice(index, 1);\n    \n    // Sparkle effect for high streaks\n    if (this.correctStreak >= 3) {\n      this.managers.particleManager.createSparkle(dot.x, dot.y, '#ffd700', 1.5);\n    }\n    \n    // Check if level complete\n    if (this.targetDotsRemaining <= 0) {\n      this.completeLevel();\n    }\n  }\n\n  handleWrongHit(dot, index) {\n    this.correctStreak = 0;\n    \n    // Glass shatter effect\n    this.helpers.applyExplosionEffect(dot.x, dot.y, 30, 1);\n    \n    // Sound feedback\n    if (this.managers.sound) {\n      this.managers.sound.playWrong();\n    }\n    \n    // Score penalty\n    this.updateScore(-50);\n    this.dots.splice(index, 1);\n    \n    // Screen shake effect\n    if (this.managers.centerPiece) {\n      // Trigger screen shake (if available)\n    }\n  }\n\n  completeLevel() {\n    // Final celebration\n    if (this.managers.sound) {\n      this.managers.sound.playSequence([\n        { type: 'sound', name: 'success', volume: 1.0 },\n        { type: 'sound', name: 'pop', volume: 0.8, pitch: 1.2 }\n      ], 300);\n    }\n    \n    // Fireworks effect\n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    \n    for (let i = 0; i < 3; i++) {\n      setTimeout(() => {\n        this.managers.particleManager.createExplosion(\n          centerX + (Math.random() - 0.5) * 200,\n          centerY + (Math.random() - 0.5) * 200,\n          this.mother.color,\n          2.0,\n          30\n        );\n      }, i * 500);\n    }\n    \n    // Calculate bonus score\n    const timeBonus = Math.max(0, 10000 - (performance.now() - this.levelStartTime)) / 100;\n    const accuracyBonus = this.correctStreak * 50;\n    \n    this.updateScore(Math.floor(timeBonus + accuracyBonus));\n    \n    // End level after celebration\n    setTimeout(() => {\n      this.end();\n    }, 3000);\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.dots = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../config/constants.js';\nimport { LevelSettings } from '../config/gameSettings.js';\n\nexport default class ShapesLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.shapes;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target shape\n    const size = LevelSettings.text.centerFontSize;\n    this.ctx.save();\n    this.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.fillStyle = '#FFFFFF';\n    this.drawShape(this.currentTarget, size);\n    this.ctx.restore();\n    // Draw falling shapes\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.translate(obj.x, obj.y);\n      this.ctx.fillStyle = obj.color;\n      this.drawShape(obj.shape, LevelSettings.text.fallingFontSize);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    \n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      default: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n    }\n\n    // Randomly choose what shape to spawn\n    const shapes = ['Circle', 'Square', 'Triangle', 'Rectangle', 'Pentagon'];\n    const shape = shapes[Math.floor(Math.random() * shapes.length)];\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    \n    this.objects.push({ shape, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const size = LevelSettings.text.fallingFontSize;\n      const dx = x - obj.x;\n      const dy = y - obj.y;\n      const radius = size / 2;\n      if (dx * dx + dy * dy <= radius * radius) {\n        if (obj.shape === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.managers.hud.updateScore(10);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, radius, 1);\n          this.managers.hud.updateScore(-5);\n        }\n        return false;\n      }\n      return true;\n    });\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  drawShape(shape, size) {\n    const half = size / 2;\n    this.ctx.beginPath();\n    switch (shape) {\n      case 'Circle':\n        this.ctx.arc(0, 0, half, 0, Math.PI * 2);\n        break;\n      case 'Square':\n        this.ctx.rect(-half, -half, size, size);\n        break;\n      case 'Triangle':\n        this.ctx.moveTo(0, -half);\n        this.ctx.lineTo(half, half);\n        this.ctx.lineTo(-half, half);\n        this.ctx.closePath();\n        break;\n      case 'Rectangle':\n        this.ctx.rect(-half, -half * 0.6, size, size * 0.6);\n        break;\n      case 'Pentagon':\n        for (let i = 0; i < 5; i++) {\n          const angle = ((Math.PI * 2) / 5) * i - Math.PI / 2;\n          const px = Math.cos(angle) * half;\n          const py = Math.sin(angle) * half;\n          if (i === 0) this.ctx.moveTo(px, py);\n          else this.ctx.lineTo(px, py);\n        }\n        this.ctx.closePath();\n        break;\n      default:\n        this.ctx.arc(0, 0, half, 0, Math.PI * 2);\n    }\n    this.ctx.fill();\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../config/constants.js';\nimport { LevelSettings } from '../config/gameSettings.js';\n\nexport default class AlphabetLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.alphabet;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    // Move objects\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    // Remove off-screen\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.textAlign = 'center';\n    this.ctx.font = `${LevelSettings.text.centerFontSize}px Arial`;\n    this.ctx.fillText(this.currentTarget, this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.restore();\n    // Draw falling objects\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.fillStyle = obj.color;\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${LevelSettings.text.fallingFontSize}px Arial`;\n      this.ctx.fillText(obj.char, obj.x, obj.y);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      case 3: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n    }\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    this.objects.push({ char: this.currentTarget, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const width = LevelSettings.text.fallingFontSize;\n      const height = LevelSettings.text.fallingFontSize;\n      if (x > obj.x - width / 2 && x < obj.x + width / 2 && y > obj.y - height && y < obj.y) {\n        if (obj.char === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.updateScore(100);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, 20, 1);\n          this.updateScore(-25);\n        }\n        return false;\n      }\n      return true;\n    });\n    // Advance or complete\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../config/constants.js';\nimport { LevelSettings } from '../config/gameSettings.js';\n\nexport default class NumbersLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.numbers;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.textAlign = 'center';\n    this.ctx.font = `${LevelSettings.text.centerFontSize}px Arial`;\n    this.ctx.fillText(this.currentTarget, this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.restore();\n\n    // Draw falling objects\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.fillStyle = obj.color;\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${LevelSettings.text.fallingFontSize}px Arial`;\n      this.ctx.fillText(obj.char, obj.x, obj.y);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    \n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      case 3: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n    }\n\n    // Randomly choose what number to spawn\n    const chars = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n    const char = chars[Math.floor(Math.random() * chars.length)];\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    \n    this.objects.push({ char, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const width = LevelSettings.text.fallingFontSize;\n      const height = LevelSettings.text.fallingFontSize;\n      \n      if (x > obj.x - width / 2 && x < obj.x + width / 2 && y > obj.y - height && y < obj.y) {\n        if (obj.char === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.updateScore(100);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, 20, 1);\n          this.updateScore(-25);\n        }\n        return false;\n      }\n      return true;\n    });\n\n    // Advance to next number or complete level\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","import { BaseLevel } from './baseLevel.js';\nimport { GAME_CONFIG } from '../config/constants.js';\nimport { LevelSettings } from '../config/gameSettings.js';\n\nexport default class ClCaseLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    this.sequence = GAME_CONFIG.SEQUENCES.clcase;\n    this.objects = [];\n    this.currentIndex = 0;\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.spawnInterval = GAME_CONFIG.LETTER_SPAWN_INTERVAL;\n    this.onPointerDown = this.onPointerDown.bind(this);\n  }\n\n  async init() {\n    this.currentTarget = this.sequence[this.currentIndex];\n    this.objects = [];\n    this.groupCount = 0;\n    this.spawnTimer = 0;\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.running = true;\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    this.spawnTimer += deltaTime;\n    if (this.spawnTimer >= this.spawnInterval) {\n      this.spawnTimer = 0;\n      this.spawnObject();\n    }\n    const dt = deltaTime / 16;\n    this.objects.forEach(obj => {\n      obj.x += obj.dx * dt;\n      obj.y += obj.dy * dt;\n    });\n    this.objects = this.objects.filter(obj => obj.x > -50 && obj.x < this.canvas.width + 50 && obj.y > -50 && obj.y < this.canvas.height + 50);\n  }\n\n  render() {\n    // Draw center target\n    this.ctx.save();\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.textAlign = 'center';\n    this.ctx.font = `${LevelSettings.text.centerFontSize}px Arial`;\n    this.ctx.fillText(this.currentTarget, this.canvas.width / 2, this.canvas.height / 2);\n    this.ctx.restore();\n\n    // Draw falling objects\n    this.objects.forEach(obj => {\n      this.ctx.save();\n      this.ctx.fillStyle = obj.color;\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${LevelSettings.text.fallingFontSize}px Arial`;\n      this.ctx.fillText(obj.char, obj.x, obj.y);\n      this.ctx.restore();\n    });\n  }\n\n  spawnObject() {\n    const buffer = LevelSettings.text.spawnEdgeBuffer;\n    const side = Math.floor(Math.random() * 4);\n    let x, y, dx, dy;\n    const speed = Math.random() * 2 + 1;\n    \n    switch (side) {\n      case 0: // top\n        x = Math.random() * this.canvas.width;\n        y = -buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = speed;\n        break;\n      case 1: // bottom\n        x = Math.random() * this.canvas.width;\n        y = this.canvas.height + buffer;\n        dx = (Math.random() - 0.5) * 2;\n        dy = -speed;\n        break;\n      case 2: // left\n        x = -buffer;\n        y = Math.random() * this.canvas.height;\n        dx = speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n      case 3: // right\n        x = this.canvas.width + buffer;\n        y = Math.random() * this.canvas.height;\n        dx = -speed;\n        dy = (Math.random() - 0.5) * 2;\n        break;\n    }\n\n    // Randomly choose what letter to spawn\n    const chars = 'abcdefghijklmnopqrstuvwxyz'.split('');\n    const char = chars[Math.floor(Math.random() * chars.length)];\n    const colorArr = GAME_CONFIG.COLORS.COLORS_LIST[Math.floor(Math.random() * GAME_CONFIG.COLORS.COLORS_LIST.length)];\n    const color = `rgb(${colorArr.join(',')})`;\n    \n    this.objects.push({ char, x, y, dx, dy, color });\n  }\n\n  onPointerDown(event) {\n    if (!this.running) return;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    let hit = false;\n    this.objects = this.objects.filter(obj => {\n      const width = LevelSettings.text.fallingFontSize;\n      const height = LevelSettings.text.fallingFontSize;\n      \n      if (x > obj.x - width / 2 && x < obj.x + width / 2 && y > obj.y - height && y < obj.y) {\n        if (obj.char === this.currentTarget) {\n          this.helpers.createExplosion(obj.x, obj.y, obj.color, 1);\n          this.updateScore(100);\n          this.groupCount++;\n          hit = true;\n        } else {\n          this.helpers.applyExplosionEffect(obj.x, obj.y, 20, 1);\n          this.updateScore(-25);\n        }\n        return false;\n      }\n      return true;\n    });\n\n    // Advance to next letter or complete level\n    if (hit && this.groupCount >= LevelSettings.text.advanceCount) {\n      this.currentIndex++;\n      if (this.currentIndex >= this.sequence.length) {\n        this.end();\n      } else {\n        this.currentTarget = this.sequence[this.currentIndex];\n        this.groupCount = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.objects = [];\n  }\n}\n","/**\n * Phonics Level Configuration\n * Optimized for educational value and smooth performance\n */\n\nexport const PhonicsConfig = {\n  // Performance settings\n  performance: {\n    maxBubbles: 12,\n    maxParticles: 100,\n    targetFPS: 60,\n    bubblePoolSize: 20,\n    particlePoolSize: 50\n  },\n  \n  // Bubble physics\n  physics: {\n    gravity: 0.1,\n    buoyancy: 0.15,\n    drag: 0.98,\n    pop: {\n      minForce: 0.5,\n      maxForce: 2.0,\n      particleCount: 8\n    },\n    bounce: {\n      damping: 0.7,\n      elasticity: 0.3\n    }\n  },\n  \n  // Visual settings\n  visuals: {\n    bubbleSize: {\n      min: 40,\n      max: 80\n    },\n    colors: {\n      bubbleBase: 'rgba(173, 216, 230, 0.8)',\n      bubbleHighlight: 'rgba(255, 255, 255, 0.9)',\n      bubbleShadow: 'rgba(0, 0, 0, 0.1)',\n      letterColor: '#2c3e50',\n      correctGlow: '#2ecc71',\n      wrongGlow: '#e74c3c',\n      background: '#f8f9fa'\n    },\n    effects: {\n      shimmer: {\n        enabled: true,\n        intensity: 0.3,\n        speed: 0.1\n      },\n      floating: {\n        enabled: true,\n        amplitude: 2,\n        frequency: 0.05\n      },\n      glow: {\n        enabled: true,\n        radius: 20,\n        intensity: 0.5\n      }\n    }\n  },\n  \n  // Educational settings\n  education: {\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(''),\n    phonicsMap: {\n      'A': { sound: 'ay', frequency: [800, 1200] },\n      'B': { sound: 'buh', frequency: [100, 200] },\n      'C': { sound: 'kuh', frequency: [200, 300] },\n      'D': { sound: 'duh', frequency: [150, 250] },\n      'E': { sound: 'ee', frequency: [500, 700] },\n      'F': { sound: 'fuh', frequency: [300, 400] },\n      'G': { sound: 'guh', frequency: [120, 220] },\n      'H': { sound: 'huh', frequency: [100, 150] },\n      'I': { sound: 'eye', frequency: [300, 500] },\n      'J': { sound: 'juh', frequency: [200, 400] },\n      'K': { sound: 'kuh', frequency: [250, 350] },\n      'L': { sound: 'luh', frequency: [400, 600] },\n      'M': { sound: 'muh', frequency: [150, 300] },\n      'N': { sound: 'nuh', frequency: [200, 400] },\n      'O': { sound: 'oh', frequency: [400, 600] },\n      'P': { sound: 'puh', frequency: [100, 200] },\n      'Q': { sound: 'kwuh', frequency: [250, 450] },\n      'R': { sound: 'ruh', frequency: [300, 500] },\n      'S': { sound: 'sss', frequency: [500, 800] },\n      'T': { sound: 'tuh', frequency: [400, 600] },\n      'U': { sound: 'ooo', frequency: [300, 500] },\n      'V': { sound: 'vuh', frequency: [200, 400] },\n      'W': { sound: 'wuh', frequency: [250, 450] },\n      'X': { sound: 'ks', frequency: [300, 600] },\n      'Y': { sound: 'yuh', frequency: [400, 700] },\n      'Z': { sound: 'zuh', frequency: [400, 800] }\n    },\n    difficulty: {\n      easy: {\n        letters: ['A', 'B', 'C', 'D', 'E'],\n        spawnRate: 2000,\n        bubbleSpeed: 0.5,\n        targetCount: 3\n      },\n      medium: {\n        letters: ['F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n        spawnRate: 1500,\n        bubbleSpeed: 0.7,\n        targetCount: 5\n      },\n      hard: {\n        letters: ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        spawnRate: 1200,\n        bubbleSpeed: 0.9,\n        targetCount: 7\n      }\n    },\n    progression: {\n      levelDuration: 60000, // 1 minute\n      correctScorePoints: 100,\n      wrongScorePenalty: -25,\n      streakMultiplier: 1.5,\n      maxStreak: 5\n    }\n  },\n  \n  // Game mechanics\n  gameplay: {\n    spawnZone: {\n      x: 0.1, // 10% from left\n      y: 0.9, // 90% from top (bottom)\n      width: 0.8, // 80% of screen width\n      height: 0.1 // 10% of screen height\n    },\n    targetZone: {\n      x: 0.2, // 20% from left\n      y: 0.1, // 10% from top\n      width: 0.6, // 60% of screen width\n      height: 0.3 // 30% of screen height\n    },\n    bubbleLifetime: 15000, // 15 seconds\n    comboWindow: 3000, // 3 seconds for combo\n    pauseOnWrong: 500, // 0.5 second pause on wrong answer\n    celebrationDuration: 2000 // 2 seconds celebration\n  },\n  \n  // Audio settings\n  audio: {\n    phonics: {\n      volume: 0.8,\n      pitch: 1.0,\n      playOnSpawn: true,\n      playOnPop: true,\n      repeatDelay: 1000\n    },\n    effects: {\n      bubblePop: { volume: 0.6, pitch: 1.0 },\n      correct: { volume: 0.7, pitch: 1.0 },\n      wrong: { volume: 0.5, pitch: 0.8 },\n      levelComplete: { volume: 0.8, pitch: 1.0 },\n      combo: { volume: 0.6, pitch: 1.2 }\n    }\n  }\n};","import { PhonicsConfig } from './PhonicsConfig.js';\n\n/**\n * BubbleSystem - Optimized bubble physics and management\n */\nexport class BubbleSystem {\n  constructor(canvas, ctx, particleManager, soundManager) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.particleManager = particleManager;\n    this.soundManager = soundManager;\n    \n    // Configuration\n    this.config = PhonicsConfig;\n    \n    // Bubble management\n    this.bubbles = [];\n    this.bubblePool = [];\n    this.activeBubbles = 0;\n    \n    // Performance optimization\n    this.lastSpawnTime = 0;\n    this.spawnRate = this.config.education.difficulty.easy.spawnRate;\n    this.maxBubbles = this.config.performance.maxBubbles;\n    \n    // Visual effects\n    this.time = 0;\n    this.shimmerPhase = 0;\n    \n    // Initialize bubble pool\n    this.initializeBubblePool();\n    \n    // Target letter tracking\n    this.targetLetter = null;\n    this.targetLetterIndex = 0;\n    this.currentDifficulty = 'easy';\n    \n    // Game state\n    this.streak = 0;\n    this.combo = 0;\n    this.lastCorrectTime = 0;\n    \n    // Bind methods\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.setupEventListeners();\n  }\n\n  initializeBubblePool() {\n    // Pre-create bubbles for performance\n    for (let i = 0; i < this.config.performance.bubblePoolSize; i++) {\n      this.bubblePool.push(this.createBubbleObject());\n    }\n  }\n\n  createBubbleObject() {\n    return {\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0,\n      size: 0,\n      letter: '',\n      isTarget: false,\n      lifetime: 0,\n      maxLifetime: 0,\n      phase: Math.random() * Math.PI * 2,\n      popAnimation: 0,\n      isPopping: false,\n      glowIntensity: 0,\n      shimmerOffset: Math.random() * Math.PI * 2,\n      active: false,\n      age: 0,\n      bounceCount: 0,\n      lastSoundTime: 0\n    };\n  }\n\n  setupEventListeners() {\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.canvas.addEventListener('touchstart', this.onPointerDown);\n  }\n\n  removeEventListeners() {\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.canvas.removeEventListener('touchstart', this.onPointerDown);\n  }\n\n  setDifficulty(difficulty) {\n    this.currentDifficulty = difficulty;\n    this.spawnRate = this.config.education.difficulty[difficulty].spawnRate;\n    this.maxBubbles = Math.floor(this.config.performance.maxBubbles * \n      (difficulty === 'easy' ? 0.7 : difficulty === 'medium' ? 0.85 : 1.0));\n  }\n\n  setTargetLetter(letter) {\n    this.targetLetter = letter;\n    this.targetLetterIndex = this.config.education.alphabet.indexOf(letter);\n  }\n\n  getNextTargetLetter() {\n    const letters = this.config.education.difficulty[this.currentDifficulty].letters;\n    this.targetLetterIndex = (this.targetLetterIndex + 1) % letters.length;\n    return letters[this.targetLetterIndex];\n  }\n\n  spawnBubble(letter = null, isTarget = false) {\n    if (this.activeBubbles >= this.maxBubbles) return null;\n    \n    // Get bubble from pool\n    let bubble = this.bubblePool.find(b => !b.active);\n    if (!bubble) {\n      bubble = this.createBubbleObject();\n      this.bubblePool.push(bubble);\n    }\n    \n    // Configure bubble\n    const spawnZone = this.config.gameplay.spawnZone;\n    const size = this.config.visuals.bubbleSize.min + \n                Math.random() * (this.config.visuals.bubbleSize.max - this.config.visuals.bubbleSize.min);\n    \n    bubble.x = (spawnZone.x + Math.random() * spawnZone.width) * this.canvas.width;\n    bubble.y = spawnZone.y * this.canvas.height;\n    bubble.vx = (Math.random() - 0.5) * 0.5;\n    bubble.vy = -this.config.education.difficulty[this.currentDifficulty].bubbleSpeed;\n    bubble.size = size;\n    bubble.letter = letter || this.getRandomLetter();\n    bubble.isTarget = isTarget;\n    bubble.lifetime = 0;\n    bubble.maxLifetime = this.config.gameplay.bubbleLifetime;\n    bubble.phase = Math.random() * Math.PI * 2;\n    bubble.popAnimation = 0;\n    bubble.isPopping = false;\n    bubble.glowIntensity = isTarget ? 0.5 : 0;\n    bubble.shimmerOffset = Math.random() * Math.PI * 2;\n    bubble.active = true;\n    bubble.age = 0;\n    bubble.bounceCount = 0;\n    bubble.lastSoundTime = 0;\n    \n    this.bubbles.push(bubble);\n    this.activeBubbles++;\n    \n    // Play phonics sound if enabled\n    if (this.config.audio.phonics.playOnSpawn) {\n      this.soundManager.playPhonicsSound(bubble.letter, this.config.audio.phonics.volume);\n    }\n    \n    return bubble;\n  }\n\n  getRandomLetter() {\n    const letters = this.config.education.difficulty[this.currentDifficulty].letters;\n    return letters[Math.floor(Math.random() * letters.length)];\n  }\n\n  update(deltaTime) {\n    this.time += deltaTime;\n    this.shimmerPhase += this.config.visuals.effects.shimmer.speed * deltaTime / 16;\n    \n    // Spawn bubbles\n    this.updateSpawning(deltaTime);\n    \n    // Update existing bubbles\n    this.updateBubbles(deltaTime);\n    \n    // Check for expired bubbles\n    this.cleanupBubbles();\n    \n    // Update combo timer\n    this.updateCombo(deltaTime);\n  }\n\n  updateSpawning(deltaTime) {\n    const now = performance.now();\n    if (now - this.lastSpawnTime >= this.spawnRate) {\n      const shouldSpawnTarget = this.targetLetter && \n                               Math.random() < 0.4 && \n                               !this.bubbles.some(b => b.isTarget);\n      \n      if (shouldSpawnTarget) {\n        this.spawnBubble(this.targetLetter, true);\n      } else {\n        this.spawnBubble();\n      }\n      \n      this.lastSpawnTime = now;\n    }\n  }\n\n  updateBubbles(deltaTime) {\n    const dt = deltaTime / 16; // Normalize to 60fps\n    \n    this.bubbles.forEach(bubble => {\n      if (!bubble.active) return;\n      \n      // Update lifetime\n      bubble.lifetime += deltaTime;\n      bubble.age += deltaTime;\n      \n      if (bubble.isPopping) {\n        bubble.popAnimation += deltaTime / 200;\n        if (bubble.popAnimation >= 1) {\n          this.deactivateBubble(bubble);\n        }\n        return;\n      }\n      \n      // Physics update\n      this.updateBubblePhysics(bubble, dt);\n      \n      // Visual effects update\n      this.updateBubbleEffects(bubble, dt);\n      \n      // Check boundaries\n      this.checkBoundaries(bubble);\n      \n      // Check if bubble should be removed\n      if (bubble.lifetime >= bubble.maxLifetime) {\n        this.popBubble(bubble, false);\n      }\n    });\n  }\n\n  updateBubblePhysics(bubble, dt) {\n    // Apply buoyancy (bubbles float up)\n    bubble.vy -= this.config.physics.buoyancy * dt;\n    \n    // Apply gravity (slight downward force)\n    bubble.vy += this.config.physics.gravity * dt;\n    \n    // Apply drag\n    bubble.vx *= this.config.physics.drag;\n    bubble.vy *= this.config.physics.drag;\n    \n    // Add floating motion\n    if (this.config.visuals.effects.floating.enabled) {\n      const floatOffset = Math.sin(this.time * this.config.visuals.effects.floating.frequency + bubble.phase) * \n                         this.config.visuals.effects.floating.amplitude;\n      bubble.vx += floatOffset * 0.01;\n    }\n    \n    // Update position\n    bubble.x += bubble.vx * dt;\n    bubble.y += bubble.vy * dt;\n  }\n\n  updateBubbleEffects(bubble, dt) {\n    // Update phase for animations\n    bubble.phase += 0.02 * dt;\n    \n    // Update glow for target letters\n    if (bubble.isTarget) {\n      bubble.glowIntensity = 0.5 + Math.sin(this.time * 0.005) * 0.3;\n    }\n    \n    // Update shimmer effect\n    bubble.shimmerOffset += this.config.visuals.effects.shimmer.speed * dt;\n  }\n\n  checkBoundaries(bubble) {\n    const radius = bubble.size / 2;\n    \n    // Side boundaries\n    if (bubble.x - radius < 0) {\n      bubble.x = radius;\n      bubble.vx = -bubble.vx * this.config.physics.bounce.elasticity;\n      bubble.bounceCount++;\n    } else if (bubble.x + radius > this.canvas.width) {\n      bubble.x = this.canvas.width - radius;\n      bubble.vx = -bubble.vx * this.config.physics.bounce.elasticity;\n      bubble.bounceCount++;\n    }\n    \n    // Top boundary (bubbles escape here)\n    if (bubble.y + radius < 0) {\n      this.deactivateBubble(bubble);\n    }\n    \n    // Bottom boundary (bubbles bounce)\n    if (bubble.y + radius > this.canvas.height) {\n      bubble.y = this.canvas.height - radius;\n      bubble.vy = -bubble.vy * this.config.physics.bounce.elasticity;\n      bubble.bounceCount++;\n    }\n    \n    // Apply bounce damping\n    if (bubble.bounceCount > 0) {\n      bubble.vx *= this.config.physics.bounce.damping;\n      bubble.vy *= this.config.physics.bounce.damping;\n    }\n  }\n\n  cleanupBubbles() {\n    this.bubbles = this.bubbles.filter(bubble => bubble.active);\n    this.activeBubbles = this.bubbles.length;\n  }\n\n  updateCombo(deltaTime) {\n    const now = performance.now();\n    if (now - this.lastCorrectTime > this.config.gameplay.comboWindow) {\n      this.combo = 0;\n    }\n  }\n\n  onPointerDown(event) {\n    event.preventDefault();\n    \n    const rect = this.canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) * (this.canvas.width / rect.width);\n    const y = (event.clientY - rect.top) * (this.canvas.height / rect.height);\n    \n    // Check for bubble collision\n    const clickedBubble = this.findBubbleAtPoint(x, y);\n    if (clickedBubble) {\n      this.handleBubbleClick(clickedBubble);\n    }\n  }\n\n  findBubbleAtPoint(x, y) {\n    // Check bubbles in reverse order (top to bottom)\n    for (let i = this.bubbles.length - 1; i >= 0; i--) {\n      const bubble = this.bubbles[i];\n      if (!bubble.active || bubble.isPopping) continue;\n      \n      const dx = x - bubble.x;\n      const dy = y - bubble.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance <= bubble.size / 2) {\n        return bubble;\n      }\n    }\n    return null;\n  }\n\n  handleBubbleClick(bubble) {\n    const isCorrect = bubble.letter === this.targetLetter;\n    \n    if (isCorrect) {\n      this.handleCorrectAnswer(bubble);\n    } else {\n      this.handleWrongAnswer(bubble);\n    }\n    \n    this.popBubble(bubble, isCorrect);\n  }\n\n  handleCorrectAnswer(bubble) {\n    // Update streak and combo\n    this.streak++;\n    this.combo++;\n    this.lastCorrectTime = performance.now();\n    \n    // Calculate score with multipliers\n    const baseScore = this.config.education.progression.correctScorePoints;\n    const streakMultiplier = Math.min(this.streak, this.config.education.progression.maxStreak) * \n                            this.config.education.progression.streakMultiplier;\n    const comboMultiplier = Math.min(this.combo, 3) * 0.5;\n    \n    const score = Math.floor(baseScore * (1 + streakMultiplier + comboMultiplier));\n    \n    // Play success sound\n    this.soundManager.playSuccess();\n    \n    // Play phonics sound\n    if (this.config.audio.phonics.playOnPop) {\n      this.soundManager.playPhonicsSound(bubble.letter, this.config.audio.phonics.volume);\n    }\n    \n    // Trigger visual effects\n    this.createSuccessEffect(bubble);\n    \n    // Notify parent level\n    if (this.onCorrectAnswer) {\n      this.onCorrectAnswer(bubble.letter, score);\n    }\n  }\n\n  handleWrongAnswer(bubble) {\n    // Reset streak but keep combo for educational value\n    this.streak = 0;\n    \n    // Play wrong sound\n    this.soundManager.playWrong();\n    \n    // Trigger visual effects\n    this.createWrongEffect(bubble);\n    \n    // Notify parent level\n    if (this.onWrongAnswer) {\n      this.onWrongAnswer(bubble.letter, this.config.education.progression.wrongScorePenalty);\n    }\n  }\n\n  popBubble(bubble, isCorrect) {\n    if (bubble.isPopping) return;\n    \n    bubble.isPopping = true;\n    bubble.popAnimation = 0;\n    \n    // Play pop sound\n    this.soundManager.playPop(1.0);\n    \n    // Create pop particles\n    this.createPopParticles(bubble, isCorrect);\n    \n    // Remove from active bubbles immediately\n    this.activeBubbles--;\n  }\n\n  createSuccessEffect(bubble) {\n    // Create green glow particles\n    const particleCount = this.config.physics.pop.particleCount;\n    for (let i = 0; i < particleCount; i++) {\n      const angle = (i / particleCount) * Math.PI * 2;\n      const speed = 2 + Math.random() * 3;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 2 + Math.random() * 3;\n      const duration = 800 + Math.random() * 400;\n      \n      this.particleManager.createParticle(\n        bubble.x, bubble.y,\n        this.config.visuals.colors.correctGlow,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  createWrongEffect(bubble) {\n    // Create red glow particles\n    const particleCount = this.config.physics.pop.particleCount;\n    for (let i = 0; i < particleCount; i++) {\n      const angle = (i / particleCount) * Math.PI * 2;\n      const speed = 1 + Math.random() * 2;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 1 + Math.random() * 2;\n      const duration = 600 + Math.random() * 300;\n      \n      this.particleManager.createParticle(\n        bubble.x, bubble.y,\n        this.config.visuals.colors.wrongGlow,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  createPopParticles(bubble, isCorrect) {\n    const particleCount = this.config.physics.pop.particleCount;\n    const color = isCorrect ? this.config.visuals.colors.correctGlow : this.config.visuals.colors.bubbleBase;\n    \n    for (let i = 0; i < particleCount; i++) {\n      const angle = (i / particleCount) * Math.PI * 2;\n      const speed = 1 + Math.random() * 2;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 1 + Math.random() * 2;\n      const duration = 500 + Math.random() * 500;\n      \n      this.particleManager.createParticle(\n        bubble.x, bubble.y,\n        color,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  deactivateBubble(bubble) {\n    bubble.active = false;\n    bubble.isPopping = false;\n    bubble.popAnimation = 0;\n    bubble.glowIntensity = 0;\n    bubble.lifetime = 0;\n    bubble.age = 0;\n    bubble.bounceCount = 0;\n  }\n\n  draw(ctx) {\n    this.bubbles.forEach(bubble => {\n      if (!bubble.active) return;\n      \n      ctx.save();\n      \n      if (bubble.isPopping) {\n        this.drawPoppingBubble(ctx, bubble);\n      } else {\n        this.drawBubble(ctx, bubble);\n      }\n      \n      ctx.restore();\n    });\n  }\n\n  drawBubble(ctx, bubble) {\n    // Draw glow effect for target letters\n    if (bubble.isTarget && this.config.visuals.effects.glow.enabled) {\n      ctx.globalAlpha = bubble.glowIntensity * 0.5;\n      ctx.fillStyle = this.config.visuals.colors.correctGlow;\n      ctx.beginPath();\n      ctx.arc(bubble.x, bubble.y, bubble.size / 2 + 10, 0, Math.PI * 2);\n      ctx.fill();\n    }\n    \n    // Draw bubble shadow\n    ctx.globalAlpha = 0.3;\n    ctx.fillStyle = this.config.visuals.colors.bubbleShadow;\n    ctx.beginPath();\n    ctx.arc(bubble.x + 2, bubble.y + 2, bubble.size / 2, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw main bubble\n    ctx.globalAlpha = 0.8;\n    const gradient = ctx.createRadialGradient(\n      bubble.x - bubble.size / 4, bubble.y - bubble.size / 4, 0,\n      bubble.x, bubble.y, bubble.size / 2\n    );\n    gradient.addColorStop(0, this.config.visuals.colors.bubbleHighlight);\n    gradient.addColorStop(1, this.config.visuals.colors.bubbleBase);\n    \n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(bubble.x, bubble.y, bubble.size / 2, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw bubble highlight\n    ctx.globalAlpha = 0.9;\n    ctx.fillStyle = this.config.visuals.colors.bubbleHighlight;\n    ctx.beginPath();\n    ctx.arc(bubble.x - bubble.size / 4, bubble.y - bubble.size / 4, bubble.size / 8, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw shimmer effect\n    if (this.config.visuals.effects.shimmer.enabled) {\n      ctx.globalAlpha = 0.4 + Math.sin(this.shimmerPhase + bubble.shimmerOffset) * 0.2;\n      ctx.fillStyle = this.config.visuals.colors.bubbleHighlight;\n      ctx.beginPath();\n      ctx.arc(bubble.x + bubble.size / 6, bubble.y - bubble.size / 6, bubble.size / 12, 0, Math.PI * 2);\n      ctx.fill();\n    }\n    \n    // Draw letter\n    ctx.globalAlpha = 1.0;\n    ctx.fillStyle = this.config.visuals.colors.letterColor;\n    ctx.font = `bold ${bubble.size / 2}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(bubble.letter, bubble.x, bubble.y);\n  }\n\n  drawPoppingBubble(ctx, bubble) {\n    const progress = bubble.popAnimation;\n    const scale = 1 + progress * 0.5;\n    const alpha = 1 - progress;\n    \n    ctx.globalAlpha = alpha;\n    ctx.scale(scale, scale);\n    \n    // Draw expanded bubble\n    ctx.fillStyle = this.config.visuals.colors.bubbleBase;\n    ctx.beginPath();\n    ctx.arc(bubble.x / scale, bubble.y / scale, (bubble.size / 2) / scale, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Draw letter\n    ctx.fillStyle = this.config.visuals.colors.letterColor;\n    ctx.font = `bold ${(bubble.size / 2) / scale}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(bubble.letter, bubble.x / scale, bubble.y / scale);\n  }\n\n  reset() {\n    // Deactivate all bubbles\n    this.bubbles.forEach(bubble => this.deactivateBubble(bubble));\n    this.bubbles = [];\n    this.activeBubbles = 0;\n    \n    // Reset state\n    this.streak = 0;\n    this.combo = 0;\n    this.lastCorrectTime = 0;\n    this.lastSpawnTime = 0;\n    this.time = 0;\n    this.shimmerPhase = 0;\n  }\n\n  cleanup() {\n    this.removeEventListeners();\n    this.reset();\n  }\n\n  // Event handlers that can be set by parent level\n  onCorrectAnswer = null;\n  onWrongAnswer = null;\n}","import { BaseLevel } from '../baseLevel.js';\nimport { BubbleSystem } from './BubbleSystem.js';\nimport { PhonicsConfig } from './PhonicsConfig.js';\n\n/**\n * PhonicsLevel - Educational bubble-popping game focused on letter sounds\n * Simple, robust, and appealing design with optimized performance\n */\nexport class PhonicsLevel extends BaseLevel {\n  constructor(canvas, ctx, managers, helpers) {\n    super(canvas, ctx, managers, helpers);\n    \n    this.config = PhonicsConfig;\n    this.bubbleSystem = null;\n    \n    // Game state\n    this.currentDifficulty = 'easy';\n    this.targetLetter = 'A';\n    this.correctCount = 0;\n    this.totalAttempts = 0;\n    this.streak = 0;\n    this.timeRemaining = this.config.education.progression.levelDuration;\n    this.gameStartTime = 0;\n    \n    // UI state\n    this.showingInstructions = true;\n    this.celebrationTime = 0;\n    this.instructionAlpha = 1.0;\n    this.backgroundGradient = null;\n    \n    // Performance tracking\n    this.lastFrameTime = 0;\n    this.frameCount = 0;\n    this.avgFPS = 60;\n    \n    // Visual effects\n    this.backgroundPhase = 0;\n    this.targetLetterPulse = 0;\n    \n    // Bind methods\n    this.onCorrectAnswer = this.onCorrectAnswer.bind(this);\n    this.onWrongAnswer = this.onWrongAnswer.bind(this);\n  }\n\n  async init() {\n    console.log('🫧 Initializing Phonics Level...');\n    \n    // Initialize bubble system\n    this.bubbleSystem = new BubbleSystem(\n      this.canvas, \n      this.ctx, \n      this.managers.particleManager,\n      this.managers.sound\n    );\n    \n    // Set up event handlers\n    this.bubbleSystem.onCorrectAnswer = this.onCorrectAnswer;\n    this.bubbleSystem.onWrongAnswer = this.onWrongAnswer;\n    \n    // Set initial difficulty and target\n    this.setDifficulty(this.currentDifficulty);\n    this.setNewTarget();\n    \n    // Create background gradient\n    this.createBackgroundGradient();\n    \n    // Resume audio context for user interaction\n    await this.managers.sound.resumeContext();\n    \n    // Show instructions\n    this.showInstructions();\n    \n    console.log('✅ Phonics Level initialized successfully!');\n  }\n\n  createBackgroundGradient() {\n    this.backgroundGradient = this.ctx.createLinearGradient(\n      0, 0, 0, this.canvas.height\n    );\n    this.backgroundGradient.addColorStop(0, '#e3f2fd');\n    this.backgroundGradient.addColorStop(0.5, '#f8f9fa');\n    this.backgroundGradient.addColorStop(1, '#fff3e0');\n  }\n\n  setDifficulty(difficulty) {\n    this.currentDifficulty = difficulty;\n    if (this.bubbleSystem) {\n      this.bubbleSystem.setDifficulty(difficulty);\n    }\n    console.log(`📊 Difficulty set to: ${difficulty}`);\n  }\n\n  setNewTarget() {\n    const letters = this.config.education.difficulty[this.currentDifficulty].letters;\n    this.targetLetter = letters[Math.floor(Math.random() * letters.length)];\n    \n    if (this.bubbleSystem) {\n      this.bubbleSystem.setTargetLetter(this.targetLetter);\n    }\n    \n    // Play target letter sound\n    this.managers.sound.playPhonicsSound(this.targetLetter, 0.8);\n    \n    console.log(`🎯 New target letter: ${this.targetLetter}`);\n  }\n\n  showInstructions() {\n    this.showingInstructions = true;\n    this.instructionAlpha = 1.0;\n    \n    // Auto-hide instructions after 3 seconds\n    setTimeout(() => {\n      this.hideInstructions();\n    }, 3000);\n  }\n\n  hideInstructions() {\n    this.showingInstructions = false;\n    this.gameStartTime = performance.now();\n    \n    // Start the game timer\n    this.timeRemaining = this.config.education.progression.levelDuration;\n  }\n\n  onCorrectAnswer(letter, score) {\n    this.correctCount++;\n    this.totalAttempts++;\n    this.streak++;\n    \n    // Update score\n    this.updateScore(score);\n    \n    // Check if we need to advance difficulty\n    const targetCount = this.config.education.difficulty[this.currentDifficulty].targetCount;\n    if (this.correctCount >= targetCount) {\n      this.advanceDifficulty();\n    } else {\n      // Set new target letter\n      this.setNewTarget();\n    }\n    \n    // Show celebration effect\n    this.showCelebration();\n    \n    // Update HUD\n    if (this.managers.hud) {\n      this.managers.hud.updateStats(`Target: ${this.targetLetter} | Streak: ${this.streak} | ${this.correctCount}/${targetCount}`);\n    }\n    \n    console.log(`✅ Correct! ${letter} - Score: ${score}, Streak: ${this.streak}`);\n  }\n\n  onWrongAnswer(letter, penalty) {\n    this.totalAttempts++;\n    this.streak = 0;\n    \n    // Update score\n    this.updateScore(penalty);\n    \n    // Brief pause for feedback\n    setTimeout(() => {\n      // Repeat target letter sound\n      this.managers.sound.playPhonicsSound(this.targetLetter, 0.8);\n    }, this.config.gameplay.pauseOnWrong);\n    \n    // Update HUD\n    if (this.managers.hud) {\n      this.managers.hud.updateStats(`Target: ${this.targetLetter} | Streak: ${this.streak} | ${this.correctCount}/${this.config.education.difficulty[this.currentDifficulty].targetCount}`);\n    }\n    \n    console.log(`❌ Wrong! ${letter} - Penalty: ${penalty}, Target was: ${this.targetLetter}`);\n  }\n\n  advanceDifficulty() {\n    const difficulties = ['easy', 'medium', 'hard'];\n    const currentIndex = difficulties.indexOf(this.currentDifficulty);\n    \n    if (currentIndex < difficulties.length - 1) {\n      this.currentDifficulty = difficulties[currentIndex + 1];\n      this.setDifficulty(this.currentDifficulty);\n      this.correctCount = 0; // Reset progress for new difficulty\n      this.setNewTarget();\n      \n      // Show advancement message\n      this.showAdvancementMessage();\n      \n      console.log(`🎉 Advanced to ${this.currentDifficulty} difficulty!`);\n    } else {\n      // Completed all difficulties\n      this.completeLevel();\n    }\n  }\n\n  showCelebration() {\n    this.celebrationTime = this.config.gameplay.celebrationDuration;\n    \n    // Create celebration particles\n    this.createCelebrationParticles();\n  }\n\n  showAdvancementMessage() {\n    if (this.managers.checkpoint) {\n      this.managers.checkpoint.showCheckpoint(`Level Up!<br>Now playing: ${this.currentDifficulty.toUpperCase()} mode`);\n    }\n  }\n\n  createCelebrationParticles() {\n    const centerX = this.canvas.width / 2;\n    const centerY = this.canvas.height / 2;\n    \n    for (let i = 0; i < 20; i++) {\n      const angle = (i / 20) * Math.PI * 2;\n      const speed = 3 + Math.random() * 5;\n      const dx = Math.cos(angle) * speed;\n      const dy = Math.sin(angle) * speed;\n      const size = 2 + Math.random() * 4;\n      const duration = 1000 + Math.random() * 1000;\n      \n      this.managers.particleManager.createParticle(\n        centerX, centerY,\n        this.config.visuals.colors.correctGlow,\n        size, dx, dy, duration\n      );\n    }\n  }\n\n  completeLevel() {\n    console.log('🎉 Level completed!');\n    \n    // Calculate final score bonus\n    const accuracy = this.correctCount / Math.max(1, this.totalAttempts);\n    const timeBonus = Math.floor(this.timeRemaining / 1000) * 10;\n    const accuracyBonus = Math.floor(accuracy * 500);\n    \n    this.updateScore(timeBonus + accuracyBonus);\n    \n    // Show completion message\n    if (this.managers.checkpoint) {\n      this.managers.checkpoint.showCheckpoint(\n        `Phonics Master!<br>Accuracy: ${Math.floor(accuracy * 100)}%<br>Time Bonus: ${timeBonus}<br>Accuracy Bonus: ${accuracyBonus}`\n      );\n    }\n    \n    // End the level after celebration\n    setTimeout(() => {\n      this.end();\n    }, 3000);\n  }\n\n  update(deltaTime) {\n    if (!this.running) return;\n    \n    // Update performance tracking\n    this.updatePerformanceStats(deltaTime);\n    \n    // Update visual effects\n    this.updateVisualEffects(deltaTime);\n    \n    // Update game timer\n    this.updateGameTimer(deltaTime);\n    \n    // Update bubble system\n    if (this.bubbleSystem) {\n      this.bubbleSystem.update(deltaTime);\n    }\n    \n    // Update instruction fade\n    if (this.showingInstructions) {\n      this.updateInstructions(deltaTime);\n    }\n    \n    // Update celebration\n    if (this.celebrationTime > 0) {\n      this.celebrationTime -= deltaTime;\n    }\n    \n    // Check for level completion conditions\n    this.checkLevelCompletion();\n  }\n\n  updatePerformanceStats(deltaTime) {\n    this.frameCount++;\n    const now = performance.now();\n    \n    if (now - this.lastFrameTime >= 1000) {\n      this.avgFPS = this.frameCount;\n      this.frameCount = 0;\n      this.lastFrameTime = now;\n      \n      // Adjust quality based on performance\n      if (this.avgFPS < 45) {\n        this.reducedQuality = true;\n      } else if (this.avgFPS > 55) {\n        this.reducedQuality = false;\n      }\n    }\n  }\n\n  updateVisualEffects(deltaTime) {\n    this.backgroundPhase += deltaTime * 0.001;\n    this.targetLetterPulse += deltaTime * 0.005;\n  }\n\n  updateGameTimer(deltaTime) {\n    if (!this.showingInstructions && this.timeRemaining > 0) {\n      this.timeRemaining -= deltaTime;\n      \n      if (this.timeRemaining <= 0) {\n        this.timeRemaining = 0;\n        this.completeLevel();\n      }\n    }\n  }\n\n  updateInstructions(deltaTime) {\n    // Fade out instructions over time\n    if (this.instructionAlpha > 0) {\n      this.instructionAlpha -= deltaTime / 1000;\n      this.instructionAlpha = Math.max(0, this.instructionAlpha);\n    }\n  }\n\n  checkLevelCompletion() {\n    // Check if all difficulties completed\n    if (this.currentDifficulty === 'hard' && \n        this.correctCount >= this.config.education.difficulty.hard.targetCount) {\n      this.completeLevel();\n    }\n  }\n\n  render() {\n    if (!this.running) return;\n    \n    // Clear and draw background\n    this.drawBackground();\n    \n    // Draw bubble system\n    if (this.bubbleSystem) {\n      this.bubbleSystem.draw(this.ctx);\n    }\n    \n    // Draw UI elements\n    this.drawUI();\n    \n    // Draw instructions if showing\n    if (this.showingInstructions) {\n      this.drawInstructions();\n    }\n    \n    // Draw celebration effects\n    if (this.celebrationTime > 0) {\n      this.drawCelebration();\n    }\n    \n    // Draw debug info if needed\n    if (this.showDebugInfo) {\n      this.drawDebugInfo();\n    }\n  }\n\n  drawBackground() {\n    // Animated gradient background\n    this.ctx.fillStyle = this.backgroundGradient;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Subtle animated patterns\n    this.ctx.save();\n    this.ctx.globalAlpha = 0.1;\n    \n    // Draw floating circles\n    for (let i = 0; i < 5; i++) {\n      const x = (i * 0.2 + 0.1) * this.canvas.width;\n      const y = this.canvas.height * 0.5 + Math.sin(this.backgroundPhase + i) * 50;\n      const radius = 20 + Math.sin(this.backgroundPhase * 0.5 + i) * 10;\n      \n      this.ctx.fillStyle = this.config.visuals.colors.bubbleBase;\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, radius, 0, Math.PI * 2);\n      this.ctx.fill();\n    }\n    \n    this.ctx.restore();\n  }\n\n  drawUI() {\n    this.ctx.save();\n    \n    // Draw target letter display\n    this.drawTargetLetter();\n    \n    // Draw progress bar\n    this.drawProgress();\n    \n    // Draw timer\n    this.drawTimer();\n    \n    // Draw score and streak\n    this.drawScoreInfo();\n    \n    this.ctx.restore();\n  }\n\n  drawTargetLetter() {\n    const centerX = this.canvas.width / 2;\n    const y = 80;\n    \n    // Draw background for target letter\n    this.ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    this.ctx.fillRect(centerX - 60, y - 40, 120, 80);\n    \n    // Draw border\n    this.ctx.strokeStyle = this.config.visuals.colors.correctGlow;\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeRect(centerX - 60, y - 40, 120, 80);\n    \n    // Draw \"Find:\" label\n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 16px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText('Find:', centerX, y - 20);\n    \n    // Draw target letter with pulsing effect\n    const pulseScale = 1 + Math.sin(this.targetLetterPulse) * 0.1;\n    this.ctx.save();\n    this.ctx.scale(pulseScale, pulseScale);\n    \n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 32px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(this.targetLetter, centerX / pulseScale, (y + 15) / pulseScale);\n    \n    this.ctx.restore();\n  }\n\n  drawProgress() {\n    const targetCount = this.config.education.difficulty[this.currentDifficulty].targetCount;\n    const progress = this.correctCount / targetCount;\n    \n    const barWidth = 200;\n    const barHeight = 20;\n    const x = this.canvas.width / 2 - barWidth / 2;\n    const y = 150;\n    \n    // Draw background\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n    this.ctx.fillRect(x, y, barWidth, barHeight);\n    \n    // Draw progress\n    this.ctx.fillStyle = this.config.visuals.colors.correctGlow;\n    this.ctx.fillRect(x, y, barWidth * progress, barHeight);\n    \n    // Draw text\n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 14px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(`${this.correctCount}/${targetCount} - ${this.currentDifficulty.toUpperCase()}`, \n                      this.canvas.width / 2, y + 35);\n  }\n\n  drawTimer() {\n    const minutes = Math.floor(this.timeRemaining / 60000);\n    const seconds = Math.floor((this.timeRemaining % 60000) / 1000);\n    const timeString = `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    \n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'right';\n    this.ctx.fillText(timeString, this.canvas.width - 20, 30);\n  }\n\n  drawScoreInfo() {\n    this.ctx.fillStyle = this.config.visuals.colors.letterColor;\n    this.ctx.font = 'bold 16px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText(`Score: ${this.score}`, 20, 30);\n    \n    if (this.streak > 0) {\n      this.ctx.fillStyle = this.config.visuals.colors.correctGlow;\n      this.ctx.fillText(`Streak: ${this.streak}`, 20, 55);\n    }\n  }\n\n  drawInstructions() {\n    if (this.instructionAlpha <= 0) return;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = this.instructionAlpha;\n    \n    // Draw semi-transparent background\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Draw instructions\n    this.ctx.fillStyle = 'white';\n    this.ctx.font = 'bold 24px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText('Phonics Bubbles', this.canvas.width / 2, this.canvas.height / 2 - 80);\n    \n    this.ctx.font = '18px Arial';\n    this.ctx.fillText('Pop the bubbles with the target letter!', this.canvas.width / 2, this.canvas.height / 2 - 40);\n    this.ctx.fillText('Listen to the letter sounds and learn!', this.canvas.width / 2, this.canvas.height / 2 - 10);\n    this.ctx.fillText('Click or tap to start...', this.canvas.width / 2, this.canvas.height / 2 + 40);\n    \n    this.ctx.restore();\n  }\n\n  drawCelebration() {\n    const intensity = this.celebrationTime / this.config.gameplay.celebrationDuration;\n    \n    this.ctx.save();\n    this.ctx.globalAlpha = intensity * 0.5;\n    \n    // Draw celebration glow\n    const gradient = this.ctx.createRadialGradient(\n      this.canvas.width / 2, this.canvas.height / 2, 0,\n      this.canvas.width / 2, this.canvas.height / 2, 200\n    );\n    gradient.addColorStop(0, this.config.visuals.colors.correctGlow);\n    gradient.addColorStop(1, 'transparent');\n    \n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    this.ctx.restore();\n  }\n\n  drawDebugInfo() {\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    this.ctx.fillRect(10, this.canvas.height - 100, 200, 90);\n    \n    this.ctx.fillStyle = 'white';\n    this.ctx.font = '12px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText(`FPS: ${this.avgFPS}`, 15, this.canvas.height - 80);\n    this.ctx.fillText(`Bubbles: ${this.bubbleSystem ? this.bubbleSystem.activeBubbles : 0}`, 15, this.canvas.height - 65);\n    this.ctx.fillText(`Target: ${this.targetLetter}`, 15, this.canvas.height - 50);\n    this.ctx.fillText(`Difficulty: ${this.currentDifficulty}`, 15, this.canvas.height - 35);\n    this.ctx.fillText(`Progress: ${this.correctCount}`, 15, this.canvas.height - 20);\n  }\n\n  // Handle user input to start game\n  handleInput() {\n    if (this.showingInstructions) {\n      this.hideInstructions();\n    }\n  }\n\n  pause() {\n    super.pause();\n    if (this.bubbleSystem) {\n      this.bubbleSystem.removeEventListeners();\n    }\n  }\n\n  resume() {\n    super.resume();\n    if (this.bubbleSystem) {\n      this.bubbleSystem.setupEventListeners();\n    }\n  }\n\n  reset() {\n    super.reset();\n    \n    // Reset game state\n    this.currentDifficulty = 'easy';\n    this.correctCount = 0;\n    this.totalAttempts = 0;\n    this.streak = 0;\n    this.timeRemaining = this.config.education.progression.levelDuration;\n    this.celebrationTime = 0;\n    \n    // Reset bubble system\n    if (this.bubbleSystem) {\n      this.bubbleSystem.reset();\n      this.bubbleSystem.setDifficulty(this.currentDifficulty);\n    }\n    \n    // Reset UI\n    this.showingInstructions = true;\n    this.instructionAlpha = 1.0;\n    \n    // Set new target\n    this.setNewTarget();\n  }\n\n  cleanup() {\n    super.cleanup();\n    \n    if (this.bubbleSystem) {\n      this.bubbleSystem.cleanup();\n    }\n  }\n\n  // Getters for level status\n  get accuracy() {\n    return this.correctCount / Math.max(1, this.totalAttempts);\n  }\n\n  get progress() {\n    const targetCount = this.config.education.difficulty[this.currentDifficulty].targetCount;\n    return this.correctCount / targetCount;\n  }\n\n  get levelInfo() {\n    return {\n      name: 'Phonics Bubbles',\n      difficulty: this.currentDifficulty,\n      progress: this.progress,\n      accuracy: this.accuracy,\n      score: this.score,\n      streak: this.streak\n    };\n  }\n}","import { ProgressManager } from '../managers/progressManager.js';\n\n// Level selection menu UI\nexport class LevelMenu {\n  constructor(containerId, onSelect) {\n    this.container = document.getElementById(containerId);\n    this.onSelect = onSelect;\n    this.progressManager = new ProgressManager();\n    \n    // Define available levels with descriptions\n    this.levels = [\n      { \n        name: 'colors', \n        label: 'Colors Level', \n        description: 'Match the target color from memory',\n        difficulty: '★☆☆'\n      },\n      { \n        name: 'shapes', \n        label: 'Shapes Level', \n        description: 'Target shapes in sequence',\n        difficulty: '★★☆'\n      },\n      { \n        name: 'alphabet', \n        label: 'Alphabet Level', \n        description: 'A through Z in order',\n        difficulty: '★★☆'\n      },\n      { \n        name: 'numbers', \n        label: 'Numbers Level', \n        description: '1 through 10 in order',\n        difficulty: '★★☆'\n      },\n      { \n        name: 'clcase', \n        label: 'Case Level', \n        description: 'a through z in order',\n        difficulty: '★★★'\n      },\n      { \n        name: 'phonics', \n        label: 'Phonics Bubbles', \n        description: 'Pop bubbles and learn letter sounds! 🫧',\n        difficulty: '★☆☆'\n      }\n    ];\n  }\n\n  show() {\n    const progress = this.progressManager.getProgress();\n    \n    // Build menu markup with progress indicators\n    const html = [\n      `<div class=\"level-menu\">`,\n      `<h2>Select Level</h2>`,\n      `<div class=\"progress-summary\">`,\n      `<p>Completion: ${this.progressManager.getCompletionPercentage()}%</p>`,\n      `<p>Total Score: ${progress.totalScore}</p>`,\n      `</div>`,\n      `<div class=\"level-grid\">`,\n      this.levels.map(level => {\n        const isUnlocked = this.progressManager.isLevelUnlocked(level.name);\n        const isCompleted = this.progressManager.isLevelCompleted(level.name);\n        const score = this.progressManager.getLevelScore(level.name);\n        \n        const statusClass = isCompleted ? 'completed' : (isUnlocked ? 'unlocked' : 'locked');\n        const statusIcon = isCompleted ? '✓' : (isUnlocked ? '●' : '🔒');\n        \n        return `\n          <div class=\"level-card ${statusClass}\" ${isUnlocked ? `data-level=\"${level.name}\"` : ''}>\n            <div class=\"level-status\">${statusIcon}</div>\n            <h3>${level.label}</h3>\n            <p class=\"level-description\">${level.description}</p>\n            <p class=\"level-difficulty\">Difficulty: ${level.difficulty}</p>\n            ${isCompleted ? `<p class=\"level-score\">Best: ${score}</p>` : ''}\n            ${!isUnlocked ? '<p class=\"level-locked\">Complete previous level to unlock</p>' : ''}\n          </div>\n        `;\n      }).join(''),\n      `</div>`,\n      `<div class=\"menu-actions\">`,\n      `<button class=\"back-button\">Back</button>`,\n      `<button class=\"reset-button\">Reset Progress</button>`,\n      `</div>`,\n      `</div>`\n    ].join('');\n    \n    this.container.innerHTML = html;\n    this.container.style.display = 'flex';\n    \n    // Attach event listeners\n    this.levels.forEach(level => {\n      const card = this.container.querySelector(`[data-level=\"${level.name}\"]`);\n      if (card) {\n        card.addEventListener('click', () => this.selectLevel(level.name));\n        card.style.cursor = 'pointer';\n      }\n    });\n    \n    const backBtn = this.container.querySelector('.back-button');\n    if (backBtn) backBtn.addEventListener('click', () => this.back());\n    \n    const resetBtn = this.container.querySelector('.reset-button');\n    if (resetBtn) resetBtn.addEventListener('click', () => this.resetProgress());\n  }\n\n  selectLevel(name) {\n    if (this.progressManager.isLevelUnlocked(name) && typeof this.onSelect === 'function') {\n      this.container.style.display = 'none';\n      this.onSelect(name);\n    }\n  }\n\n  resetProgress() {\n    if (confirm('Are you sure you want to reset all progress? This cannot be undone.')) {\n      this.progressManager.resetProgress();\n      this.show(); // Refresh the menu\n    }\n  }\n\n  back() {\n    // Reload page or reset to welcome screen\n    window.location.reload();\n  }\n}\n","// InputHandler: unified pointer and keyboard input management\nexport class InputHandler {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.pointerDownListeners = [];\n    this.pointerUpListeners = [];\n    this.pointerMoveListeners = [];\n    this.keyDownListeners = [];\n\n    // Bind methods to preserve 'this' context\n    this._boundHandlePointerDown = (e) => this._handlePointerDown(e);\n    this._boundHandlePointerUp = (e) => this._handlePointerUp(e);\n    this._boundHandlePointerMove = (e) => this._handlePointerMove(e);\n    this._boundHandleKeyDown = (e) => this._handleKeyDown(e);\n\n    // Bind events\n    canvas.addEventListener('pointerdown', this._boundHandlePointerDown);\n    canvas.addEventListener('pointerup', this._boundHandlePointerUp);\n    canvas.addEventListener('pointermove', this._boundHandlePointerMove);\n    window.addEventListener('keydown', this._boundHandleKeyDown);\n  }\n\n  _handlePointerDown(event) {\n    const pos = this._getPointerPosition(event);\n    this.pointerDownListeners.forEach(cb => cb(pos, event));\n  }\n\n  _handlePointerUp(event) {\n    const pos = this._getPointerPosition(event);\n    this.pointerUpListeners.forEach(cb => cb(pos, event));\n  }\n\n  _handlePointerMove(event) {\n    const pos = this._getPointerPosition(event);\n    this.pointerMoveListeners.forEach(cb => cb(pos, event));\n  }\n\n  _handleKeyDown(event) {\n    this.keyDownListeners.forEach(cb => cb(event.code, event));\n  }\n\n  _getPointerPosition(event) {\n    if (!this.canvas) {\n      console.warn('Canvas not available for pointer position calculation');\n      return { x: 0, y: 0 };\n    }\n    \n    const rect = this.canvas.getBoundingClientRect();\n    if (!rect) {\n      console.warn('Could not get canvas bounding rect');\n      return { x: 0, y: 0 };\n    }\n    \n    // Prevent division by zero\n    const scaleX = rect.width > 0 ? this.canvas.width / rect.width : 1;\n    const scaleY = rect.height > 0 ? this.canvas.height / rect.height : 1;\n    \n    return {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n  }\n\n  onPointerDown(callback) {\n    this.pointerDownListeners.push(callback);\n  }\n\n  onPointerUp(callback) {\n    this.pointerUpListeners.push(callback);\n  }\n\n  onPointerMove(callback) {\n    this.pointerMoveListeners.push(callback);\n  }\n\n  onKeyDown(callback) {\n    this.keyDownListeners.push(callback);\n  }\n\n  // Cleanup method to prevent memory leaks\n  destroy() {\n    if (this.canvas) {\n      this.canvas.removeEventListener('pointerdown', this._boundHandlePointerDown);\n      this.canvas.removeEventListener('pointerup', this._boundHandlePointerUp);\n      this.canvas.removeEventListener('pointermove', this._boundHandlePointerMove);\n    }\n    window.removeEventListener('keydown', this._boundHandleKeyDown);\n    \n    // Clear all listeners\n    this.pointerDownListeners = [];\n    this.pointerUpListeners = [];\n    this.pointerMoveListeners = [];\n    this.keyDownListeners = [];\n    \n    // Clear references\n    this.canvas = null;\n  }\n}\n","import { GAME_CONFIG } from './constants.js';\n\n/**\n * Detects whether to use DEFAULT or QBOARD mode based on screen resolution.\n * @returns {'DEFAULT'|'QBOARD'}\n */\nexport function detectDisplayMode() {\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n  return (width > 2560 && height > 1440) ? 'QBOARD' : 'DEFAULT';\n}\n\n/**\n * Returns display-specific settings from GAME_CONFIG.\n */\nexport function getDisplaySettings() {\n  const mode = detectDisplayMode();\n  return {\n    fontSizes: GAME_CONFIG.FONT_SIZES[mode],\n    maxParticles: GAME_CONFIG.MAX_PARTICLES[mode],\n    maxExplosions: GAME_CONFIG.MAX_EXPLOSIONS[mode],\n    motherRadius: GAME_CONFIG.MOTHER_RADIUS[mode],\n    collisionFrequency: GAME_CONFIG.COLLISION_CHECK_FREQUENCY[mode]\n  };\n}\n","import ResourceManager from './resourceManager.js';\nimport ParticleManager from './particleSystem.js';\nimport SoundManager from './soundManager.js';\nimport { Renderer } from './renderer.js';\nimport { GameLoop } from '../gameLoop.js';\nimport HudManager from '../managers/hudManager.js';\nimport CheckpointManager from '../managers/checkpointManager.js';\nimport FlamethrowerManager from '../managers/flamethrowerManager.js';\nimport CenterPieceManager from '../managers/centerPieceManager.js';\nimport MultiTouchManager from '../managers/multiTouchManager.js';\nimport GlassShatterManager from '../managers/glassShatterManager.js';\nimport { ProgressManager } from '../managers/progressManager.js';\nimport ColorsLevel from '../levels/colorsLevel.js';\nimport ShapesLevel from '../levels/shapesLevel.js';\nimport AlphabetLevel from '../levels/alphabetLevel.js';\nimport NumbersLevel from '../levels/numbersLevel.js';\nimport ClCaseLevel from '../levels/clCaseLevel.js';\nimport { PhonicsLevel } from '../levels/phonics/PhonicsLevel.js';\nimport { LevelMenu } from '../ui/levelMenu.js';\nimport { InputHandler } from '../inputHandler.js';\nimport { getDisplaySettings } from '../config/displayModes.js';\nimport { getAudioConfig } from '../config/audioConfig.js';\nimport { GAME_CONFIG } from '../config/constants.js';\n\nconst canvas = document.getElementById('game-canvas');\nconst renderer = new Renderer(canvas);\nconst ctx = renderer.ctx;\n\n// Current display-specific settings\nlet displaySettings;\nlet resourceManager;\nlet particleManager;\nlet soundManager;\nlet progressManager;\nlet managers = {};\nlet currentLevel = null;\nlet currentLevelName = '';\nlet gameState = 'menu'; // menu, playing, paused, gameOver\nlet lastTime = 0;\nlet gameLoop;\n\nfunction resizeCanvas() {\n  renderer.setupCanvas();\n  // Update managers and level with new canvas size\n  if (managers.hud) managers.hud.resize(renderer.canvas);\n  if (managers.centerPiece) managers.centerPiece.resize(renderer.canvas);\n  if (currentLevel && typeof currentLevel.resize === 'function') {\n    currentLevel.resize(renderer.canvas);\n  }\n}\n\n// Show welcome screen with start and options\nfunction showWelcomeScreen() {\n  console.log('🏠 showWelcomeScreen() called');\n  const welcome = document.getElementById('welcome-screen');\n  console.log('🏠 Welcome element found:', welcome);\n  \n  if (!welcome) {\n    console.error('❌ CRITICAL: welcome-screen element not found in DOM!');\n    return;\n  }\n  \n  console.log('🏠 Setting welcome screen HTML...');\n  welcome.innerHTML = `\n    <h1>Super Student</h1>\n    <p>Train your brain with fun puzzles</p>\n    <p>Click 'Start Game' to begin</p>\n    <button class=\"welcome-button\" id=\"start-button\">Start Game</button>\n    <button class=\"welcome-button\" id=\"options-button\">Options</button>\n    <footer>v1.0 — Developed by YourName</footer>\n  `;\n  \n  // Make sure it's visible\n  welcome.style.display = 'flex';\n  console.log('🏠 Welcome screen display set to flex');\n\n  const startBtn = document.getElementById('start-button');\n  const optionsBtn = document.getElementById('options-button');\n  \n  console.log('🏠 Start button found:', startBtn);\n  console.log('🏠 Options button found:', optionsBtn);\n  \n  if (startBtn) {\n    startBtn.addEventListener('click', showLevelMenu);\n    console.log('🏠 Start button event listener added');\n  }\n  \n  if (optionsBtn) {\n    optionsBtn.addEventListener('click', showOptions);\n    console.log('🏠 Options button event listener added');\n  }\n  \n  console.log('🏠 Welcome screen setup complete!');\n}\n\n// Show level selection menu\nfunction showLevelMenu() {\n  const welcome = document.getElementById('welcome-screen');\n  welcome.innerHTML = '';\n  welcome.style.display = 'flex';\n  const menu = new LevelMenu('welcome-screen', startLevel);\n  menu.show();\n}\n\n// Start the selected level\nfunction startLevel(levelName) {\n  if (!progressManager.isLevelUnlocked(levelName)) {\n    alert('This level is locked. Complete previous levels to unlock it.');\n    return;\n  }\n\n  document.getElementById('welcome-screen').style.display = 'none';\n  gameState = 'playing';\n  currentLevelName = levelName;\n  initializeManagers();\n  \n  // Define common helpers for levels\n  const helpers = {\n    createExplosion: (x, y, color, intensity) => {\n      const count = Math.floor(20 * intensity);\n      for (let i = 0; i < count; i++) {\n        const angle = Math.random() * Math.PI * 2;\n        const speed = 2 + Math.random() * 4;\n        const dx = Math.cos(angle) * speed;\n        const dy = Math.sin(angle) * speed;\n        const size = 2 + Math.random() * 3;\n        const duration = 500 + Math.random() * 1000;\n        particleManager.createParticle(x, y, color, size, dx, dy, duration);\n      }\n    },\n    applyExplosionEffect: (x, y, radius, force) => {\n      managers.glassShatter.triggerShatter(x, y, force * 0.5);\n    },\n    onLevelComplete: (score) => {\n      handleLevelComplete(levelName, score);\n    }\n  };\n  \n  lastTime = performance.now();\n  \n  // Choose level class based on name\n  switch (levelName) {\n    case 'colors':\n      currentLevel = new ColorsLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'shapes':\n      currentLevel = new ShapesLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'alphabet':\n      currentLevel = new AlphabetLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'numbers':\n      currentLevel = new NumbersLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'clcase':\n      currentLevel = new ClCaseLevel(canvas, ctx, managers, helpers);\n      break;\n    case 'phonics':\n      currentLevel = new PhonicsLevel(canvas, ctx, managers, helpers);\n      break;\n    default:\n      currentLevel = new ColorsLevel(canvas, ctx, managers, helpers);\n  }\n  \n  currentLevel.start();\n  // GameLoop is already running, no need to call loop()\n}\n\n// Show options menu\nfunction showOptions() {\n  const modal = document.getElementById('settings-modal');\n  modal.innerHTML = `\n    <div class=\"modal-background\"></div>\n    <div class=\"modal-content\">\n      <h2>Options</h2>\n      <label>Display Mode:</label>\n      <select id=\"display-mode-select\">\n        <option value=\"DEFAULT\">Default</option>\n        <option value=\"QBOARD\">QBoard</option>\n      </select>\n      <label>Volume:</label>\n      <input type=\"range\" id=\"volume-range\" min=\"0\" max=\"1\" step=\"0.01\">\n      <button id=\"save-options\">Save</button>\n      <button id=\"close-options\">Close</button>\n    </div>\n  `;\n  modal.style.display = 'block';\n\n  const select = document.getElementById('display-mode-select');\n  select.value = resourceManager.getDisplayMode();\n  document.getElementById('volume-range').value = soundManager.volume;\n\n  document.getElementById('save-options').addEventListener('click', () => {\n    resourceManager.setDisplayMode(select.value);\n    soundManager.setGlobalVolume(parseFloat(document.getElementById('volume-range').value));\n    modal.style.display = 'none';\n  });\n  document.getElementById('close-options').addEventListener('click', () => {\n    modal.style.display = 'none';\n  });\n}\n\nfunction initializeManagers() {\n  managers.hud = new HudManager(canvas, ctx);\n  managers.checkpoint = new CheckpointManager(canvas, ctx);\n  managers.flamethrower = new FlamethrowerManager(canvas, ctx, particleManager);\n  managers.centerPiece = new CenterPieceManager(canvas, ctx, particleManager);\n  managers.multiTouch = new MultiTouchManager(canvas);\n  managers.glassShatter = new GlassShatterManager(canvas, ctx, particleManager);\n  managers.particleManager = particleManager;\n  managers.sound = soundManager;\n}\n\nfunction setupGlobalEventListeners() {\n  // Keyboard controls\n  window.addEventListener('keydown', (e) => {\n    switch (e.code) {\n      case 'Space':\n        e.preventDefault();\n        if (gameState === 'playing') {\n          togglePause();\n        }\n        break;\n      case 'KeyR':\n        if (gameState === 'gameOver' || gameState === 'paused') {\n          restartGame();\n        }\n        break;\n      case 'Escape':\n        if (gameState === 'playing') {\n          pauseGame();\n        } else if (gameState === 'paused') {\n          resumeGame();\n        }\n        break;\n    }\n  });\n  \n  // Prevent right-click context menu\n  canvas.addEventListener('contextmenu', (e) => e.preventDefault());\n}\n\nfunction togglePause() {\n  if (gameState === 'playing') {\n    pauseGame();\n  } else if (gameState === 'paused') {\n    resumeGame();\n  }\n}\n\nfunction pauseGame() {\n  if (gameState === 'playing') {\n    gameState = 'paused';\n    if (currentLevel) {\n      currentLevel.pause();\n    }\n    managers.checkpoint.showCheckpoint('Game Paused');\n  }\n}\n\nfunction resumeGame() {\n  if (gameState === 'paused') {\n    gameState = 'playing';\n    if (currentLevel) {\n      currentLevel.resume();\n    }\n  }\n}\n\nfunction restartGame() {\n  gameState = 'playing';\n  if (currentLevel) {\n    currentLevel.reset();\n    currentLevel.start();\n  }\n}\n\nfunction cleanupGame() {\n  // Cleanup current level\n  if (currentLevel && typeof currentLevel.destroy === 'function') {\n    currentLevel.destroy();\n  }\n  \n  // Cleanup managers\n  if (managers.input && typeof managers.input.destroy === 'function') {\n    managers.input.destroy();\n  }\n  if (managers.multiTouch && typeof managers.multiTouch.destroy === 'function') {\n    managers.multiTouch.destroy();\n  }\n}\n\nfunction handleLevelComplete(levelName, score) {\n  progressManager.completeLevel(levelName, score);\n  gameState = 'completed';\n  \n  // Show completion celebration\n  managers.checkpoint.showCheckpoint(`Level Complete!<br>Score: ${score}<br>Next level unlocked!`);\n  \n  setTimeout(() => {\n    showLevelMenu();\n  }, 3000);\n}\n\nwindow.addEventListener('resize', resizeCanvas);\n\n// Game loop functions\nfunction update(deltaTime) {\n  if (gameState === 'playing' && currentLevel) {\n    currentLevel.update(deltaTime);\n  }\n  \n  // Update managers\n  if (managers.centerPiece) managers.centerPiece.update(deltaTime);\n  if (managers.flamethrower) managers.flamethrower.update(deltaTime);\n  if (managers.glassShatter) managers.glassShatter.update(deltaTime);\n  if (managers.hud) managers.hud.update(deltaTime);\n  if (managers.checkpoint) managers.checkpoint.update(deltaTime);\n}\n\nfunction render() {\n  renderer.clear();\n  \n  if (gameState === 'playing' && currentLevel) {\n    currentLevel.render();\n  }\n  \n  // Render managers\n  if (managers.centerPiece) managers.centerPiece.draw(ctx);\n  if (managers.particleManager) managers.particleManager.updateAndDraw(ctx, gameLoop ? gameLoop.lastDeltaTime : 16);\n  if (managers.flamethrower) managers.flamethrower.draw(ctx);\n  if (managers.glassShatter) managers.glassShatter.draw(ctx);\n  if (managers.hud) managers.hud.draw(ctx);\n  if (managers.checkpoint) managers.checkpoint.draw(ctx);\n}\n\nwindow.onload = async () => {\n  console.log('🎮 Super Student: Starting initialization...');\n  \n  try {\n    resizeCanvas();\n    console.log('✅ Canvas resized');\n    \n    // Determine display settings\n    displaySettings = getDisplaySettings();\n    console.log('✅ Display settings loaded');\n    \n    // Initialize core managers\n    resourceManager = new ResourceManager();\n    particleManager = new ParticleManager(displaySettings.maxParticles);\n    soundManager = new SoundManager();\n    progressManager = new ProgressManager();\n    console.log('✅ Core managers initialized');\n    \n    // Setup input handler\n    managers.input = new InputHandler(canvas);\n    console.log('✅ Input handler setup');\n\n     let resources = {};\n     try {\n       resources = await resourceManager.initializeGameResources();\n       console.log('✅ Resources loaded successfully');\n       // Register preloaded audio with SoundManager\n       if (resources.audio) {\n         soundManager.sounds = resources.audio;\n         // Set initial global volume\n         soundManager.setGlobalVolume(soundManager.volume);\n       }\n     } catch (error) {\n       console.error('⚠️ Failed to load resources:', error);\n     }\n     \n     // Configure audio settings\n     const audioConf = getAudioConfig();\n     soundManager.setGlobalVolume(audioConf.masterVolume);\n     console.log('✅ Audio configured');\n     \n     // Add display settings to managers\n     managers.displaySettings = displaySettings;\n     \n     // Initialize and start game loop\n     gameLoop = new GameLoop(update, render);\n     gameLoop.start();\n     console.log('✅ Game loop started');\n     \n     console.log('🎯 Showing welcome screen...');\n     showWelcomeScreen();\n     setupGlobalEventListeners();\n     console.log('✅ Welcome screen should be visible now!');\n     \n  } catch (error) {\n    console.error('❌ CRITICAL ERROR during initialization:', error);\n    console.error('Stack trace:', error.stack);\n  }\n};\n","export class Renderer {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.setupCanvas();\n  }\n\n  setupCanvas() {\n    // Adjust canvas size and scale for high-DPI displays\n    const { width, height } = this.canvas.getBoundingClientRect();\n    this.canvas.width = width * (window.devicePixelRatio || 1);\n    this.canvas.height = height * (window.devicePixelRatio || 1);\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n    this.ctx.scale(window.devicePixelRatio || 1, window.devicePixelRatio || 1);\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Add additional rendering helpers here\n}\n"],"names":["ResourceManager","constructor","this","fonts","images","audio","loadFont","name","url","font","FontFace","load","document","add","loadImage","Promise","resolve","reject","img","Image","onload","onerror","src","loadAudio","Audio","oncanplaythrough","initializeGameResources","e","console","warn","setDisplayMode","mode","localStorage","setItem","getDisplayMode","getItem","testResourceLoading","log","Object","keys","placeholder","width","height","fontsCount","length","imagesCount","audioCount","ParticleManager","maxParticles","particles","lastUpdateTime","performance","now","particlePool","activeParticles","lastCleanupTime","cleanupInterval","renderBatch","colorCache","Map","globalEffects","wind","x","y","gravity","turbulence","performanceMode","frameTimeHistory","avgFrameTime","initializePool","i","push","createParticleObject","vx","vy","size","color","opacity","life","maxLife","age","rotation","rotationSpeed","scale","scaleVelocity","active","type","trail","trailPositions","physics","bounce","friction","setPerformanceMode","Math","min","createParticle","dx","dy","duration","options","removeOldestParticle","particle","find","p","includes","createExplosion","intensity","count","angle","PI","speed","random","cos","sin","createTrail","createSparkle","floor","createBubbleParticles","oldestIndex","oldestAge","deactivateParticle","updateAndDraw","ctx","deltaTime","actualDeltaTime","updateParticles","cleanupInactiveParticles","drawParticles","monitorPerformance","dt","shift","updateParticlePhysics","updateParticleVisuals","max","batches","circle","star","bubble","save","drawTrailParticles","drawCircleParticles","drawStarParticles","drawBubbleParticles","restore","forEach","globalAlpha","translate","rotate","fillStyle","beginPath","arc","fill","moveTo","lineTo","closePath","gradient","createRadialGradient","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","stroke","filter","frameTime","lastFrameTime","sum","reduce","a","b","setWind","setGravity","setTurbulence","clear","getActiveParticleCount","getPerformanceInfo","fps","round","GAME_CONFIG","freeze","DISPLAY_MODES","DEFAULT_MODE","FONT_SIZES","DEFAULT","regular","large","QBOARD","MAX_PARTICLES","MAX_EXPLOSIONS","MAX_SWIRL_PARTICLES","MOTHER_RADIUS","COLORS","WHITE","BLACK","FLAME_COLORS","COLORS_LIST","SEQUENCES","alphabet","split","numbers","clcase","shapes","colors","LETTER_SPAWN_INTERVAL","GROUP_SIZE","COLORS_COLLISION_DELAY","TOUCH_COOLDOWN","DOT_RADIUS","DOT_SPEED_RANGE","EXPLOSION_EXPANSION_RATE","SCREEN_SHAKE_DURATION","SPATIAL_GRID_SIZE","COLLISION_CHECK_FREQUENCY","CULLING_DISTANCE_MULTIPLIER","COLORS_LEVEL_CONFIG","TOTAL_DOTS","TARGET_DOTS","DISTRACTOR_DOTS","DISPERSION_FRAMES","DOT_BOUNCE_DAMPENING","SHIMMER_FREQUENCY","GLOW_FREQUENCY","MEMORY_DISPLAY_TIME","COLLISION_ENABLED_DELAY","GRID_OPTIMIZATION","TEXT_LEVEL_CONFIG","CENTER_FONT_SIZE","FALLING_FONT_SIZE","SPAWN_EDGE_BUFFER","TARGET_ADVANCE_COUNT","CHECKPOINT_INTERVAL","ABILITIES","AOE_RADIUS","CHARGE_UP_DURATION","LASER_WIDTH","SWIRL_PARTICLE_COUNT","CENTER_PIECE_ORBIT_RADIUS","AUDIO_CONFIG","MASTER_VOLUME","SFX_VOLUME","MUSIC_VOLUME","SOUNDS","laser","file","volume","completion","AMBIENT","space","loop","WEB_AUDIO_CONTEXT","BUFFER_PRELOAD","getAudioConfig","masterVolume","sfxVolume","musicVolume","sounds","ambient","webAudioContext","bufferPreload","SoundManager","audioConfig","audioContext","window","AudioContext","webkitAudioContext","masterGain","createGain","gain","value","connect","destination","gains","sfx","music","phonics","values","buffers","activeSources","phonicsCache","soundQueue","isProcessingQueue","maxConcurrentSounds","activeSoundsCount","initializeDefaultSounds","createSyntheticSounds","sampleRate","popBuffer","createBuffer","popData","getChannelData","t","exp","buffer","successBuffer","successData","envelope","wrongBuffer","wrongData","explosionBuffer","explosionData","noise","loadSound","response","fetch","arrayBuffer","decodeAudioData","error","playSound","pitch","entry","source","createBufferSource","gainNode","playbackRate","start","onended","playPhonicsSound","letter","soundName","toLowerCase","has","generateSyntheticPhonicsSound","data","freqs","c","d","f","g","h","j","k","l","m","n","o","q","r","s","u","v","w","z","set","playMusic","stop","playAmbient","playExplosion","playPop","playSuccess","playWrong","playSequence","delay","processQueue","sound","setTimeout","stopAll","setMasterVolume","setGlobalVolume","setCategoryVolume","category","resumeContext","state","resume","fadeCategoryVolume","target","currentTime","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","mute","unmute","toggleMute","createDynamicSound","frequency","oscillator","createOscillator","exponentialRampToValueAtTime","getAudioContext","hasSounds","getAvailableSounds","GameLoop","updateFn","renderFn","lastTime","running","_loop","lastDeltaTime","requestAnimationFrame","HudManager","canvas","score","level","lives","abilities","flamethrower","cooldown","maxCooldown","explosion","fontSize","updateScore","points","updateLevel","newLevel","updateLives","newLives","updateAbilityCooldown","abilityName","isAbilityReady","draw","textAlign","fillText","yOffset","entries","ability","cooldownPercent","toFixed","update","resize","CheckpointManager","isActive","currentMessage","fadeAlpha","fadeDirection","displayTime","maxDisplayTime","showCheckpoint","message","fillRect","textBaseline","centerX","centerY","shadowColor","shadowBlur","subtitleFontSize","isDisplaying","skipCheckpoint","FlamethrowerManager","particleManager","activeFlames","maxFlames","createFlamethrower","startX","startY","endX","endY","flame","generateFlameParticles","distance","sqrt","pow","particleCount","progress","offsetX","offsetY","checkCollision","targetX","targetY","targetRadius","some","A","B","C","abs","CenterPieceManager","radius","pulsePhase","swirlParticles","lastParticleTime","generateSwirlParticle","radiusSpeed","getRandomColor","pulseSize","startRadius","endRadius","alpha","reset","MultiTouchManager","pointers","callbacks","pointerdown","pointermove","pointerup","setupEventListeners","addEventListener","handlePointerDown","handlePointerMove","handlePointerUp","preventDefault","rect","getBoundingClientRect","pointer","id","pointerId","clientX","left","clientY","top","pointerType","pressure","startTime","triggerCallbacks","get","endTime","delete","eventType","originalEvent","callback","removeEventListener","index","indexOf","splice","getActivePointers","Array","from","getPointerCount","getPointer","isMultiTouch","getPinchDistance","p1","p2","getPinchCenter","destroy","GlassShatterManager","isShattered","shatterTime","maxShatterTime","cracks","fragments","stressPoints","elasticity","fragmentCount","crackPropagationSpeed","stressFieldRadius","effects","refractionIntensity","reflectionIntensity","glowIntensity","shimmerPhase","performanceLevel","detectPerformanceLevel","adjustSettingsForPerformance","pixelCount","test","navigator","userAgent","createShatterEffect","impactX","impactY","impactPoint","generateRealisticCracks","generateGlassFragments","createStressField","createAdvancedParticles","numPrimary","crack","createCrackLine","numSecondary","numCircular","createCircularCrack","propagationSpeed","currentLength","targetLength","segments","currentX","currentY","currentAngle","segmentLength","branchAngle","branchLength","branchX","branchY","isBranch","deviation","fragment","getGlassColor","decay","stressCount","phase","getGlassParticleColor","fadeProgress","updateCrackPropagation","updateFragments","updateStressField","point","drawStressField","drawCracks","drawFragments","drawRefractionEffect","drawLength","pointsCount","triggerShatter","ProgressManager","storageKey","levels","loadProgress","saved","JSON","parse","unlockedLevels","completedLevels","scores","totalScore","saveProgress","stringify","isLevelUnlocked","levelName","isLevelCompleted","completeLevel","currentIndex","nextLevel","getLevelScore","getProgress","resetProgress","getCompletionPercentage","BaseLevel","managers","helpers","init","Error","render","cleanup","end","onLevelComplete","pause","hud","LevelSettings","totalDots","targetDots","distractorDots","dispersionFrames","bounceDampening","shimmerFreq","glowFreq","memoryTime","collisionDelay","text","centerFontSize","fallingFontSize","spawnEdgeBuffer","advanceCount","checkpointInterval","aoeRadius","chargeDuration","laserWidth","swirlCount","orbitRadius","ColorsLevel","super","dots","targetDotsRemaining","onPointerDown","bind","correctStreak","lastCorrectTime","levelStartTime","colorsList","targetColor","rgb","join","mother","displaySettings","motherRadius","disperse","cfg","total","targetCount","others","addDot","colArray","isTarget","dot","shimmer","drawEnhancedDot","drawUI","isMemory","shimmerOffset","elapsed","seconds","event","handleCorrectHit","handleWrongHit","applyExplosionEffect","centerPiece","timeBonus","accuracyBonus","ShapesLevel","sequence","objects","groupCount","spawnTimer","spawnInterval","currentTarget","spawnObject","obj","drawShape","shape","side","hit","half","px","py","AlphabetLevel","char","NumbersLevel","chars","ClCaseLevel","PhonicsConfig","maxBubbles","targetFPS","bubblePoolSize","particlePoolSize","buoyancy","drag","pop","minForce","maxForce","damping","visuals","bubbleSize","bubbleBase","bubbleHighlight","bubbleShadow","letterColor","correctGlow","wrongGlow","background","enabled","floating","amplitude","glow","education","phonicsMap","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","difficulty","easy","letters","spawnRate","bubbleSpeed","medium","hard","progression","levelDuration","correctScorePoints","wrongScorePenalty","streakMultiplier","maxStreak","gameplay","spawnZone","targetZone","bubbleLifetime","comboWindow","pauseOnWrong","celebrationDuration","playOnSpawn","playOnPop","repeatDelay","bubblePop","correct","wrong","levelComplete","combo","BubbleSystem","soundManager","__publicField","config","bubbles","bubblePool","activeBubbles","lastSpawnTime","time","initializeBubblePool","targetLetter","targetLetterIndex","currentDifficulty","streak","createBubbleObject","lifetime","maxLifetime","popAnimation","isPopping","bounceCount","lastSoundTime","removeEventListeners","setDifficulty","setTargetLetter","getNextTargetLetter","spawnBubble","getRandomLetter","updateSpawning","updateBubbles","cleanupBubbles","updateCombo","deactivateBubble","updateBubblePhysics","updateBubbleEffects","checkBoundaries","popBubble","floatOffset","clickedBubble","findBubbleAtPoint","handleBubbleClick","isCorrect","handleCorrectAnswer","handleWrongAnswer","baseScore","comboMultiplier","createSuccessEffect","onCorrectAnswer","createWrongEffect","onWrongAnswer","createPopParticles","drawPoppingBubble","drawBubble","PhonicsLevel","bubbleSystem","correctCount","totalAttempts","timeRemaining","gameStartTime","showingInstructions","celebrationTime","instructionAlpha","backgroundGradient","frameCount","avgFPS","backgroundPhase","targetLetterPulse","setNewTarget","createBackgroundGradient","showInstructions","createLinearGradient","hideInstructions","advanceDifficulty","showCelebration","updateStats","penalty","difficulties","showAdvancementMessage","createCelebrationParticles","checkpoint","toUpperCase","accuracy","updatePerformanceStats","updateVisualEffects","updateGameTimer","updateInstructions","checkLevelCompletion","reducedQuality","drawBackground","drawInstructions","drawCelebration","showDebugInfo","drawDebugInfo","drawTargetLetter","drawProgress","drawTimer","drawScoreInfo","strokeRect","pulseScale","barWidth","timeString","toString","padStart","handleInput","levelInfo","LevelMenu","containerId","onSelect","container","getElementById","progressManager","label","description","show","html","map","isUnlocked","isCompleted","statusIcon","innerHTML","style","display","card","querySelector","selectLevel","cursor","backBtn","back","resetBtn","confirm","location","reload","InputHandler","pointerDownListeners","pointerUpListeners","pointerMoveListeners","keyDownListeners","_boundHandlePointerDown","_handlePointerDown","_boundHandlePointerUp","_handlePointerUp","_boundHandlePointerMove","_handlePointerMove","_boundHandleKeyDown","_handleKeyDown","pos","_getPointerPosition","cb","code","scaleX","scaleY","onPointerUp","onPointerMove","onKeyDown","getDisplaySettings","innerWidth","innerHeight","detectDisplayMode","fontSizes","maxExplosions","collisionFrequency","renderer","getContext","setupCanvas","devicePixelRatio","clearRect","resourceManager","gameLoop","currentLevel","gameState","resizeCanvas","showLevelMenu","welcome","startLevel","alert","multiTouch","glassShatter","force","handleLevelComplete","showOptions","modal","select","parseFloat","setupGlobalEventListeners","pauseGame","resumeGame","async","input","resources","audioConf","startBtn","optionsBtn","showWelcomeScreen","stack"],"mappings":"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"}